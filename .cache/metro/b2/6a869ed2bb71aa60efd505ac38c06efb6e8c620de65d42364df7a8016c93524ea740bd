{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":700},"end":{"line":21,"column":62,"index":762}},{"start":{"line":22,"column":0,"index":763},"end":{"line":22,"column":64,"index":827}},{"start":{"line":23,"column":0,"index":828},"end":{"line":23,"column":50,"index":878}},{"start":{"line":24,"column":0,"index":879},"end":{"line":24,"column":66,"index":945}},{"start":{"line":25,"column":0,"index":946},"end":{"line":25,"column":48,"index":994}},{"start":{"line":26,"column":0,"index":995},"end":{"line":26,"column":50,"index":1045}},{"start":{"line":27,"column":0,"index":1046},"end":{"line":27,"column":54,"index":1100}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./AnimatedImplementation","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":700},"end":{"line":21,"column":62,"index":762}}],"key":"ud5xTiqpQ+3hAH2//Uw+oJdz93Q="}},{"name":"./createAnimatedComponent","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":763},"end":{"line":22,"column":64,"index":827}}],"key":"uFwiUaeIXpvo7HKlpPXeaq/5/B8="}},{"name":"./nodes/AnimatedColor","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":828},"end":{"line":23,"column":50,"index":878}}],"key":"oyMYbT4lDg7Hs/Y3RQBVWd28kKA="}},{"name":"./nodes/AnimatedInterpolation","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":879},"end":{"line":24,"column":66,"index":945}}],"key":"z9Knz4MLC+VYfRwv3jv/YALbr/Y="}},{"name":"./nodes/AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":946},"end":{"line":25,"column":48,"index":994}}],"key":"tigRkmlEdy3kzPhrQBTSjHELjqc="}},{"name":"./nodes/AnimatedValue","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":995},"end":{"line":26,"column":50,"index":1045}}],"key":"Fp6b3aN9F6seTFYEMtKA/pWebyQ="}},{"name":"./nodes/AnimatedValueXY","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":1046},"end":{"line":27,"column":54,"index":1100}}],"key":"pC63qj7XIR+IH5d3yU5MMOJkoo4="}},{"name":"./AnimatedEvent","data":{"asyncType":null,"locs":[{"start":{"line":191,"column":2,"index":5271},"end":{"line":191,"column":19,"index":5288},"identifierName":"attachNativeEvent"},{"start":{"line":194,"column":9,"index":5397},"end":{"line":194,"column":22,"index":5410},"identifierName":"AnimatedEvent"}],"key":"HOnHqnbjAcj/KCNluvPGmX3fOfk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _AnimatedImplementation = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"./AnimatedImplementation\"));\n  var _createAnimatedComponent = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"./createAnimatedComponent\"));\n  var _AnimatedColor = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"./nodes/AnimatedColor\"));\n  var _AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"./nodes/AnimatedInterpolation\"));\n  var _AnimatedNode = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"./nodes/AnimatedNode\"));\n  var _AnimatedValue = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"./nodes/AnimatedValue\"));\n  var _AnimatedValueXY = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"./nodes/AnimatedValueXY\"));\n  var inAnimationCallback = false;\n  function mockAnimationStart(start) {\n    return function (callback) {\n      var guardedCallback = callback == null ? callback : function () {\n        if (inAnimationCallback) {\n          console.warn('Ignoring recursive animation callback when running mock animations');\n          return;\n        }\n        inAnimationCallback = true;\n        try {\n          callback.apply(void 0, arguments);\n        } finally {\n          inAnimationCallback = false;\n        }\n      };\n      start(guardedCallback);\n    };\n  }\n  var emptyAnimation = {\n    start: function start() {},\n    stop: function stop() {},\n    reset: function reset() {},\n    _startNativeLoop: function _startNativeLoop() {},\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  var mockCompositeAnimation = function mockCompositeAnimation(animations) {\n    return Object.assign({}, emptyAnimation, {\n      start: mockAnimationStart(function (callback) {\n        animations.forEach(function (animation) {\n          return animation.start();\n        });\n        callback == null ? void 0 : callback({\n          finished: true\n        });\n      })\n    });\n  };\n  var spring = function spring(value, config) {\n    var anyValue = value;\n    return Object.assign({}, emptyAnimation, {\n      start: mockAnimationStart(function (callback) {\n        anyValue.setValue(config.toValue);\n        callback == null ? void 0 : callback({\n          finished: true\n        });\n      })\n    });\n  };\n  var timing = function timing(value, config) {\n    var anyValue = value;\n    return Object.assign({}, emptyAnimation, {\n      start: mockAnimationStart(function (callback) {\n        anyValue.setValue(config.toValue);\n        callback == null ? void 0 : callback({\n          finished: true\n        });\n      })\n    });\n  };\n  var decay = function decay(value, config) {\n    return emptyAnimation;\n  };\n  var sequence = function sequence(animations) {\n    return mockCompositeAnimation(animations);\n  };\n  var parallel = function parallel(animations, config) {\n    return mockCompositeAnimation(animations);\n  };\n  var delay = function delay(time) {\n    return emptyAnimation;\n  };\n  var stagger = function stagger(time, animations) {\n    return mockCompositeAnimation(animations);\n  };\n  var loop = function loop(animation) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n    return emptyAnimation;\n  };\n  var _default = {\n    Value: _AnimatedValue.default,\n    ValueXY: _AnimatedValueXY.default,\n    Color: _AnimatedColor.default,\n    Interpolation: _AnimatedInterpolation.default,\n    Node: _AnimatedNode.default,\n    decay: decay,\n    timing: timing,\n    spring: spring,\n    add: _AnimatedImplementation.default.add,\n    subtract: _AnimatedImplementation.default.subtract,\n    divide: _AnimatedImplementation.default.divide,\n    multiply: _AnimatedImplementation.default.multiply,\n    modulo: _AnimatedImplementation.default.modulo,\n    diffClamp: _AnimatedImplementation.default.diffClamp,\n    delay: delay,\n    sequence: sequence,\n    parallel: parallel,\n    stagger: stagger,\n    loop: loop,\n    event: _AnimatedImplementation.default.event,\n    createAnimatedComponent: _createAnimatedComponent.default,\n    attachNativeEvent: _$$_REQUIRE(_dependencyMap[8], \"./AnimatedEvent\").attachNativeEvent,\n    forkEvent: _AnimatedImplementation.default.forkEvent,\n    unforkEvent: _AnimatedImplementation.default.unforkEvent,\n    Event: _$$_REQUIRE(_dependencyMap[8], \"./AnimatedEvent\").AnimatedEvent\n  };\n  exports.default = _default;\n});","lineCount":125,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[5,4,11,13],[6,2,11,13],[7,2,11,13],[8,2,21,0],[9,2,22,0],[10,2,23,0],[11,2,24,0],[12,2,25,0],[13,2,26,0],[14,2,27,0],[15,2,38,0],[15,6,38,4,"inAnimationCallback"],[15,25,38,23],[15,28,38,26],[15,33,38,31],[16,2,39,0],[16,11,39,9,"mockAnimationStart"],[16,29,39,27],[16,30,40,2,"start"],[16,35,40,42],[16,37,41,37],[17,4,42,2],[17,11,42,9],[17,21,42,9,"callback"],[17,29,42,17],[17,31,42,21],[18,6,43,4],[18,10,43,10,"guardedCallback"],[18,25,43,25],[18,28,44,6,"callback"],[18,36,44,14],[18,40,44,18],[18,44,44,22],[18,47,45,10,"callback"],[18,55,45,18],[18,58,46,10],[18,70,46,41],[19,8,47,12],[19,12,47,16,"inAnimationCallback"],[19,31,47,35],[19,33,47,37],[20,10,48,14,"console"],[20,17,48,21],[20,18,48,22,"warn"],[20,22,48,26],[20,23,49,16],[20,91,49,84],[20,92,50,15],[21,10,51,14],[22,8,52,12],[23,8,53,12,"inAnimationCallback"],[23,27,53,31],[23,30,53,34],[23,34,53,38],[24,8,54,12],[24,12,54,16],[25,10,55,14,"callback"],[25,18,55,22],[25,43,55,31],[26,8,56,12],[26,9,56,13],[26,18,56,22],[27,10,57,14,"inAnimationCallback"],[27,29,57,33],[27,32,57,36],[27,37,57,41],[28,8,58,12],[29,6,59,10],[29,7,59,11],[30,6,60,4,"start"],[30,11,60,9],[30,12,60,10,"guardedCallback"],[30,27,60,25],[30,28,60,26],[31,4,61,2],[31,5,61,3],[32,2,62,0],[33,2,73,0],[33,6,73,6,"emptyAnimation"],[33,20,73,20],[33,23,73,23],[34,4,74,2,"start"],[34,9,74,7],[34,11,74,9],[34,28,74,15],[34,29,74,16],[34,30,74,17],[35,4,75,2,"stop"],[35,8,75,6],[35,10,75,8],[35,26,75,14],[35,27,75,15],[35,28,75,16],[36,4,76,2,"reset"],[36,9,76,7],[36,11,76,9],[36,28,76,15],[36,29,76,16],[36,30,76,17],[37,4,77,2,"_startNativeLoop"],[37,20,77,18],[37,22,77,20],[37,50,77,26],[37,51,77,27],[37,52,77,28],[38,4,78,2,"_isUsingNativeDriver"],[38,24,78,22],[38,26,78,24],[38,58,78,30],[39,6,79,4],[39,13,79,11],[39,18,79,16],[40,4,80,2],[41,2,81,0],[41,3,81,1],[42,2,83,0],[42,6,83,6,"mockCompositeAnimation"],[42,28,83,28],[42,31,83,31],[42,40,83,6,"mockCompositeAnimation"],[42,62,83,28],[42,63,84,2,"animations"],[42,73,84,39],[43,4,84,39],[43,29,86,5,"emptyAnimation"],[43,43,86,19],[44,6,87,2,"start"],[44,11,87,7],[44,13,87,9,"mockAnimationStart"],[44,31,87,27],[44,32,87,28],[44,42,87,29,"callback"],[44,50,87,52],[44,52,87,63],[45,8,88,4,"animations"],[45,18,88,14],[45,19,88,15,"forEach"],[45,26,88,22],[45,27,88,23],[45,37,88,23,"animation"],[45,46,88,32],[46,10,88,32],[46,17,88,36,"animation"],[46,26,88,45],[46,27,88,46,"start"],[46,32,88,51],[46,34,88,53],[47,8,88,53],[47,10,88,54],[48,8,89,4,"callback"],[48,16,89,12],[48,36,89,4,"callback"],[48,44,89,12],[48,45,89,15],[49,10,89,16,"finished"],[49,18,89,24],[49,20,89,26],[50,8,89,30],[50,9,89,31],[50,10,89,32],[51,6,90,2],[51,7,90,3],[52,4,90,4],[53,2,90,4],[53,3,91,2],[54,2,93,0],[54,6,93,6,"spring"],[54,12,93,12],[54,15,93,15],[54,24,93,6,"spring"],[54,30,93,12],[54,31,94,2,"value"],[54,36,94,56],[54,38,95,2,"config"],[54,44,95,31],[54,46,96,22],[55,4,97,2],[55,8,97,8,"anyValue"],[55,16,97,21],[55,19,97,24,"value"],[55,24,97,29],[56,4,98,2],[56,29,99,7,"emptyAnimation"],[56,43,99,21],[57,6,100,4,"start"],[57,11,100,9],[57,13,100,11,"mockAnimationStart"],[57,31,100,29],[57,32,100,30],[57,42,100,31,"callback"],[57,50,100,54],[57,52,100,65],[58,8,101,6,"anyValue"],[58,16,101,14],[58,17,101,15,"setValue"],[58,25,101,23],[58,26,101,24,"config"],[58,32,101,30],[58,33,101,31,"toValue"],[58,40,101,38],[58,41,101,39],[59,8,102,6,"callback"],[59,16,102,14],[59,36,102,6,"callback"],[59,44,102,14],[59,45,102,17],[60,10,102,18,"finished"],[60,18,102,26],[60,20,102,28],[61,8,102,32],[61,9,102,33],[61,10,102,34],[62,6,103,4],[62,7,103,5],[63,4,103,6],[64,2,105,0],[64,3,105,1],[65,2,107,0],[65,6,107,6,"timing"],[65,12,107,12],[65,15,107,15],[65,24,107,6,"timing"],[65,30,107,12],[65,31,108,2,"value"],[65,36,108,56],[65,38,109,2,"config"],[65,44,109,31],[65,46,110,22],[66,4,111,2],[66,8,111,8,"anyValue"],[66,16,111,21],[66,19,111,24,"value"],[66,24,111,29],[67,4,112,2],[67,29,113,7,"emptyAnimation"],[67,43,113,21],[68,6,114,4,"start"],[68,11,114,9],[68,13,114,11,"mockAnimationStart"],[68,31,114,29],[68,32,114,30],[68,42,114,31,"callback"],[68,50,114,54],[68,52,114,65],[69,8,115,6,"anyValue"],[69,16,115,14],[69,17,115,15,"setValue"],[69,25,115,23],[69,26,115,24,"config"],[69,32,115,30],[69,33,115,31,"toValue"],[69,40,115,38],[69,41,115,39],[70,8,116,6,"callback"],[70,16,116,14],[70,36,116,6,"callback"],[70,44,116,14],[70,45,116,17],[71,10,116,18,"finished"],[71,18,116,26],[71,20,116,28],[72,8,116,32],[72,9,116,33],[72,10,116,34],[73,6,117,4],[73,7,117,5],[74,4,117,6],[75,2,119,0],[75,3,119,1],[76,2,121,0],[76,6,121,6,"decay"],[76,11,121,11],[76,14,121,14],[76,23,121,6,"decay"],[76,28,121,11],[76,29,122,2,"value"],[76,34,122,56],[76,36,123,2,"config"],[76,42,123,30],[76,44,124,22],[77,4,125,2],[77,11,125,9,"emptyAnimation"],[77,25,125,23],[78,2,126,0],[78,3,126,1],[79,2,128,0],[79,6,128,6,"sequence"],[79,14,128,14],[79,17,128,17],[79,26,128,6,"sequence"],[79,34,128,14],[79,35,129,2,"animations"],[79,45,129,39],[79,47,130,22],[80,4,131,2],[80,11,131,9,"mockCompositeAnimation"],[80,33,131,31],[80,34,131,32,"animations"],[80,44,131,42],[80,45,131,43],[81,2,132,0],[81,3,132,1],[82,2,135,0],[82,6,135,6,"parallel"],[82,14,135,14],[82,17,135,17],[82,26,135,6,"parallel"],[82,34,135,14],[82,35,136,2,"animations"],[82,45,136,39],[82,47,137,2,"config"],[82,53,137,26],[82,55,138,22],[83,4,139,2],[83,11,139,9,"mockCompositeAnimation"],[83,33,139,31],[83,34,139,32,"animations"],[83,44,139,42],[83,45,139,43],[84,2,140,0],[84,3,140,1],[85,2,142,0],[85,6,142,6,"delay"],[85,11,142,11],[85,14,142,14],[85,23,142,6,"delay"],[85,28,142,11],[85,29,142,24,"time"],[85,33,142,36],[85,35,142,58],[86,4,143,2],[86,11,143,9,"emptyAnimation"],[86,25,143,23],[87,2,144,0],[87,3,144,1],[88,2,146,0],[88,6,146,6,"stagger"],[88,13,146,13],[88,16,146,16],[88,25,146,6,"stagger"],[88,32,146,13],[88,33,147,2,"time"],[88,37,147,14],[88,39,148,2,"animations"],[88,49,148,39],[88,51,149,22],[89,4,150,2],[89,11,150,9,"mockCompositeAnimation"],[89,33,150,31],[89,34,150,32,"animations"],[89,44,150,42],[89,45,150,43],[90,2,151,0],[90,3,151,1],[91,2,159,0],[91,6,159,6,"loop"],[91,10,159,10],[91,13,159,13],[91,22,159,6,"loop"],[91,26,159,10],[91,27,160,2,"animation"],[91,36,160,31],[91,38,163,22],[92,4,163,22],[92,83,162,43],[92,84,162,44],[92,85,162,45],[93,6,162,45],[93,29,162,3,"iterations"],[93,39,162,13],[94,6,162,3,"iterations"],[94,16,162,13],[94,48,162,16],[94,49,162,17],[94,50,162,18],[95,4,164,2],[95,11,164,9,"emptyAnimation"],[95,25,164,23],[96,2,165,0],[96,3,165,1],[97,2,165,2],[97,17,169,15],[98,4,170,2,"Value"],[98,9,170,7],[98,11,170,9,"AnimatedValue"],[98,33,170,22],[99,4,171,2,"ValueXY"],[99,11,171,9],[99,13,171,11,"AnimatedValueXY"],[99,37,171,26],[100,4,172,2,"Color"],[100,9,172,7],[100,11,172,9,"AnimatedColor"],[100,33,172,22],[101,4,173,2,"Interpolation"],[101,17,173,15],[101,19,173,17,"AnimatedInterpolation"],[101,49,173,38],[102,4,174,2,"Node"],[102,8,174,6],[102,10,174,8,"AnimatedNode"],[102,31,174,20],[103,4,175,2,"decay"],[103,9,175,7],[103,11,175,2,"decay"],[103,16,175,7],[104,4,176,2,"timing"],[104,10,176,8],[104,12,176,2,"timing"],[104,18,176,8],[105,4,177,2,"spring"],[105,10,177,8],[105,12,177,2,"spring"],[105,18,177,8],[106,4,178,2,"add"],[106,7,178,5],[106,9,178,7,"AnimatedImplementation"],[106,40,178,29],[106,41,178,30,"add"],[106,44,178,33],[107,4,179,2,"subtract"],[107,12,179,10],[107,14,179,12,"AnimatedImplementation"],[107,45,179,34],[107,46,179,35,"subtract"],[107,54,179,43],[108,4,180,2,"divide"],[108,10,180,8],[108,12,180,10,"AnimatedImplementation"],[108,43,180,32],[108,44,180,33,"divide"],[108,50,180,39],[109,4,181,2,"multiply"],[109,12,181,10],[109,14,181,12,"AnimatedImplementation"],[109,45,181,34],[109,46,181,35,"multiply"],[109,54,181,43],[110,4,182,2,"modulo"],[110,10,182,8],[110,12,182,10,"AnimatedImplementation"],[110,43,182,32],[110,44,182,33,"modulo"],[110,50,182,39],[111,4,183,2,"diffClamp"],[111,13,183,11],[111,15,183,13,"AnimatedImplementation"],[111,46,183,35],[111,47,183,36,"diffClamp"],[111,56,183,45],[112,4,184,2,"delay"],[112,9,184,7],[112,11,184,2,"delay"],[112,16,184,7],[113,4,185,2,"sequence"],[113,12,185,10],[113,14,185,2,"sequence"],[113,22,185,10],[114,4,186,2,"parallel"],[114,12,186,10],[114,14,186,2,"parallel"],[114,22,186,10],[115,4,187,2,"stagger"],[115,11,187,9],[115,13,187,2,"stagger"],[115,20,187,9],[116,4,188,2,"loop"],[116,8,188,6],[116,10,188,2,"loop"],[116,14,188,6],[117,4,189,2,"event"],[117,9,189,7],[117,11,189,9,"AnimatedImplementation"],[117,42,189,31],[117,43,189,32,"event"],[117,48,189,37],[118,4,190,2,"createAnimatedComponent"],[118,27,190,25],[118,29,190,2,"createAnimatedComponent"],[118,61,190,25],[119,4,191,2,"attachNativeEvent"],[119,21,191,19],[119,23,191,2,"attachNativeEvent"],[119,90,191,19],[120,4,192,2,"forkEvent"],[120,13,192,11],[120,15,192,13,"AnimatedImplementation"],[120,46,192,35],[120,47,192,36,"forkEvent"],[120,56,192,45],[121,4,193,2,"unforkEvent"],[121,15,193,13],[121,17,193,15,"AnimatedImplementation"],[121,48,193,37],[121,49,193,38,"unforkEvent"],[121,60,193,49],[122,4,194,2,"Event"],[122,9,194,7],[122,11,194,9,"AnimatedEvent"],[123,2,195,0],[123,3,195,1],[124,2,195,1],[125,0,195,1]],"functionMap":{"names":["<global>","mockAnimationStart","<anonymous>","emptyAnimation.start","emptyAnimation.stop","emptyAnimation.reset","emptyAnimation._startNativeLoop","emptyAnimation._isUsingNativeDriver","mockCompositeAnimation","mockAnimationStart$argument_0","animations.forEach$argument_0","spring","timing","decay","sequence","parallel","delay","stagger","loop"],"mappings":"AAA;ACsC;SCG;GDmB;CDC;SGY,QH;QIC,QJ;SKC,QL;oBMC,QN;wBOC;GPE;+BQG;4BCI;uBCC,8BD;GDE;ERC;eWE;8BFO;KEG;CXE;eYE;8BHO;KGG;CZE;caE;CbK;iBcE;CdI;iBeG;CfK;cgBE;ChBE;gBiBE;CjBK;akBQ;ClBM"}},"type":"js/module"}]}