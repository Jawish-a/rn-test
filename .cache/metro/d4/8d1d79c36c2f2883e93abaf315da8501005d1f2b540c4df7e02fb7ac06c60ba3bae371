{"dependencies":[{"name":"./conversions","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":16,"index":510},"end":{"line":17,"column":40,"index":534}},{"start":{"line":40,"column":32,"index":1040},"end":{"line":40,"column":52,"index":1060}},{"start":{"line":65,"column":10,"index":1541},"end":{"line":65,"column":44,"index":1575}},{"start":{"line":70,"column":12,"index":1697},"end":{"line":70,"column":42,"index":1727}}],"key":"ULVvOUxZjLNuq9LSOP7dM+d8ulg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function buildGraph() {\n    var graph = {};\n    var models = Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./conversions\"));\n    for (var len = models.length, i = 0; i < len; i++) {\n      graph[models[i]] = {\n        distance: -1,\n        parent: null\n      };\n    }\n    return graph;\n  }\n  function deriveBFS(fromModel) {\n    var graph = buildGraph();\n    var queue = [fromModel];\n    graph[fromModel].distance = 0;\n    while (queue.length) {\n      var current = queue.pop();\n      var adjacents = Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./conversions\")[current]);\n      for (var len = adjacents.length, i = 0; i < len; i++) {\n        var adjacent = adjacents[i];\n        var node = graph[adjacent];\n        if (node.distance === -1) {\n          node.distance = graph[current].distance + 1;\n          node.parent = current;\n          queue.unshift(adjacent);\n        }\n      }\n    }\n    return graph;\n  }\n  function link(from, to) {\n    return function (args) {\n      return to(from(args));\n    };\n  }\n  function wrapConversion(toModel, graph) {\n    var path = [graph[toModel].parent, toModel];\n    var fn = _$$_REQUIRE(_dependencyMap[0], \"./conversions\")[graph[toModel].parent][toModel];\n    var cur = graph[toModel].parent;\n    while (graph[cur].parent) {\n      path.unshift(graph[cur].parent);\n      fn = link(_$$_REQUIRE(_dependencyMap[0], \"./conversions\")[graph[cur].parent][cur], fn);\n      cur = graph[cur].parent;\n    }\n    fn.conversion = path;\n    return fn;\n  }\n  module.exports = function (fromModel) {\n    var graph = deriveBFS(fromModel);\n    var conversion = {};\n    var models = Object.keys(graph);\n    for (var len = models.length, i = 0; i < len; i++) {\n      var toModel = models[i];\n      var node = graph[toModel];\n      if (node.parent === null) {\n        continue;\n      }\n      conversion[toModel] = wrapConversion(toModel, graph);\n    }\n    return conversion;\n  };\n});","lineCount":63,"map":[[2,2,14,0],[2,11,14,9,"buildGraph"],[2,21,14,19],[2,24,14,22],[3,4,15,1],[3,8,15,7,"graph"],[3,13,15,12],[3,16,15,15],[3,17,15,16],[3,18,15,17],[4,4,17,1],[4,8,17,7,"models"],[4,14,17,13],[4,17,17,16,"Object"],[4,23,17,22],[4,24,17,23,"keys"],[4,28,17,27],[4,77,17,40],[5,4,19,1],[5,9,19,6],[5,13,19,10,"len"],[5,16,19,13],[5,19,19,16,"models"],[5,25,19,22],[5,26,19,23,"length"],[5,32,19,29],[5,34,19,31,"i"],[5,35,19,32],[5,38,19,35],[5,39,19,36],[5,41,19,38,"i"],[5,42,19,39],[5,45,19,42,"len"],[5,48,19,45],[5,50,19,47,"i"],[5,51,19,48],[5,53,19,50],[5,55,19,52],[6,6,20,2,"graph"],[6,11,20,7],[6,12,20,8,"models"],[6,18,20,14],[6,19,20,15,"i"],[6,20,20,16],[6,21,20,17],[6,22,20,18],[6,25,20,21],[7,8,23,3,"distance"],[7,16,23,11],[7,18,23,13],[7,19,23,14],[7,20,23,15],[8,8,24,3,"parent"],[8,14,24,9],[8,16,24,11],[9,6,25,2],[9,7,25,3],[10,4,26,1],[11,4,28,1],[11,11,28,8,"graph"],[11,16,28,13],[12,2,29,0],[13,2,32,0],[13,11,32,9,"deriveBFS"],[13,20,32,18],[13,21,32,19,"fromModel"],[13,30,32,28],[13,32,32,30],[14,4,33,1],[14,8,33,7,"graph"],[14,13,33,12],[14,16,33,15,"buildGraph"],[14,26,33,25],[14,28,33,27],[15,4,34,1],[15,8,34,7,"queue"],[15,13,34,12],[15,16,34,15],[15,17,34,16,"fromModel"],[15,26,34,25],[15,27,34,26],[16,4,36,1,"graph"],[16,9,36,6],[16,10,36,7,"fromModel"],[16,19,36,16],[16,20,36,17],[16,21,36,18,"distance"],[16,29,36,26],[16,32,36,29],[16,33,36,30],[17,4,38,1],[17,11,38,8,"queue"],[17,16,38,13],[17,17,38,14,"length"],[17,23,38,20],[17,25,38,22],[18,6,39,2],[18,10,39,8,"current"],[18,17,39,15],[18,20,39,18,"queue"],[18,25,39,23],[18,26,39,24,"pop"],[18,29,39,27],[18,31,39,29],[19,6,40,2],[19,10,40,8,"adjacents"],[19,19,40,17],[19,22,40,20,"Object"],[19,28,40,26],[19,29,40,27,"keys"],[19,33,40,31],[19,34,40,32],[19,82,40,44,"current"],[19,89,40,51],[19,90,40,52],[19,91,40,53],[20,6,42,2],[20,11,42,7],[20,15,42,11,"len"],[20,18,42,14],[20,21,42,17,"adjacents"],[20,30,42,26],[20,31,42,27,"length"],[20,37,42,33],[20,39,42,35,"i"],[20,40,42,36],[20,43,42,39],[20,44,42,40],[20,46,42,42,"i"],[20,47,42,43],[20,50,42,46,"len"],[20,53,42,49],[20,55,42,51,"i"],[20,56,42,52],[20,58,42,54],[20,60,42,56],[21,8,43,3],[21,12,43,9,"adjacent"],[21,20,43,17],[21,23,43,20,"adjacents"],[21,32,43,29],[21,33,43,30,"i"],[21,34,43,31],[21,35,43,32],[22,8,44,3],[22,12,44,9,"node"],[22,16,44,13],[22,19,44,16,"graph"],[22,24,44,21],[22,25,44,22,"adjacent"],[22,33,44,30],[22,34,44,31],[23,8,46,3],[23,12,46,7,"node"],[23,16,46,11],[23,17,46,12,"distance"],[23,25,46,20],[23,30,46,25],[23,31,46,26],[23,32,46,27],[23,34,46,29],[24,10,47,4,"node"],[24,14,47,8],[24,15,47,9,"distance"],[24,23,47,17],[24,26,47,20,"graph"],[24,31,47,25],[24,32,47,26,"current"],[24,39,47,33],[24,40,47,34],[24,41,47,35,"distance"],[24,49,47,43],[24,52,47,46],[24,53,47,47],[25,10,48,4,"node"],[25,14,48,8],[25,15,48,9,"parent"],[25,21,48,15],[25,24,48,18,"current"],[25,31,48,25],[26,10,49,4,"queue"],[26,15,49,9],[26,16,49,10,"unshift"],[26,23,49,17],[26,24,49,18,"adjacent"],[26,32,49,26],[26,33,49,27],[27,8,50,3],[28,6,51,2],[29,4,52,1],[30,4,54,1],[30,11,54,8,"graph"],[30,16,54,13],[31,2,55,0],[32,2,57,0],[32,11,57,9,"link"],[32,15,57,13],[32,16,57,14,"from"],[32,20,57,18],[32,22,57,20,"to"],[32,24,57,22],[32,26,57,24],[33,4,58,1],[33,11,58,8],[33,21,58,18,"args"],[33,25,58,22],[33,27,58,24],[34,6,59,2],[34,13,59,9,"to"],[34,15,59,11],[34,16,59,12,"from"],[34,20,59,16],[34,21,59,17,"args"],[34,25,59,21],[34,26,59,22],[34,27,59,23],[35,4,60,1],[35,5,60,2],[36,2,61,0],[37,2,63,0],[37,11,63,9,"wrapConversion"],[37,25,63,23],[37,26,63,24,"toModel"],[37,33,63,31],[37,35,63,33,"graph"],[37,40,63,38],[37,42,63,40],[38,4,64,1],[38,8,64,7,"path"],[38,12,64,11],[38,15,64,14],[38,16,64,15,"graph"],[38,21,64,20],[38,22,64,21,"toModel"],[38,29,64,28],[38,30,64,29],[38,31,64,30,"parent"],[38,37,64,36],[38,39,64,38,"toModel"],[38,46,64,45],[38,47,64,46],[39,4,65,1],[39,8,65,5,"fn"],[39,10,65,7],[39,13,65,10],[39,61,65,22,"graph"],[39,66,65,27],[39,67,65,28,"toModel"],[39,74,65,35],[39,75,65,36],[39,76,65,37,"parent"],[39,82,65,43],[39,83,65,44],[39,84,65,45,"toModel"],[39,91,65,52],[39,92,65,53],[40,4,67,1],[40,8,67,5,"cur"],[40,11,67,8],[40,14,67,11,"graph"],[40,19,67,16],[40,20,67,17,"toModel"],[40,27,67,24],[40,28,67,25],[40,29,67,26,"parent"],[40,35,67,32],[41,4,68,1],[41,11,68,8,"graph"],[41,16,68,13],[41,17,68,14,"cur"],[41,20,68,17],[41,21,68,18],[41,22,68,19,"parent"],[41,28,68,25],[41,30,68,27],[42,6,69,2,"path"],[42,10,69,6],[42,11,69,7,"unshift"],[42,18,69,14],[42,19,69,15,"graph"],[42,24,69,20],[42,25,69,21,"cur"],[42,28,69,24],[42,29,69,25],[42,30,69,26,"parent"],[42,36,69,32],[42,37,69,33],[43,6,70,2,"fn"],[43,8,70,4],[43,11,70,7,"link"],[43,15,70,11],[43,16,70,12],[43,64,70,24,"graph"],[43,69,70,29],[43,70,70,30,"cur"],[43,73,70,33],[43,74,70,34],[43,75,70,35,"parent"],[43,81,70,41],[43,82,70,42],[43,83,70,43,"cur"],[43,86,70,46],[43,87,70,47],[43,89,70,49,"fn"],[43,91,70,51],[43,92,70,52],[44,6,71,2,"cur"],[44,9,71,5],[44,12,71,8,"graph"],[44,17,71,13],[44,18,71,14,"cur"],[44,21,71,17],[44,22,71,18],[44,23,71,19,"parent"],[44,29,71,25],[45,4,72,1],[46,4,74,1,"fn"],[46,6,74,3],[46,7,74,4,"conversion"],[46,17,74,14],[46,20,74,17,"path"],[46,24,74,21],[47,4,75,1],[47,11,75,8,"fn"],[47,13,75,10],[48,2,76,0],[49,2,78,0,"module"],[49,8,78,6],[49,9,78,7,"exports"],[49,16,78,14],[49,19,78,17],[49,29,78,27,"fromModel"],[49,38,78,36],[49,40,78,38],[50,4,79,1],[50,8,79,7,"graph"],[50,13,79,12],[50,16,79,15,"deriveBFS"],[50,25,79,24],[50,26,79,25,"fromModel"],[50,35,79,34],[50,36,79,35],[51,4,80,1],[51,8,80,7,"conversion"],[51,18,80,17],[51,21,80,20],[51,22,80,21],[51,23,80,22],[52,4,82,1],[52,8,82,7,"models"],[52,14,82,13],[52,17,82,16,"Object"],[52,23,82,22],[52,24,82,23,"keys"],[52,28,82,27],[52,29,82,28,"graph"],[52,34,82,33],[52,35,82,34],[53,4,83,1],[53,9,83,6],[53,13,83,10,"len"],[53,16,83,13],[53,19,83,16,"models"],[53,25,83,22],[53,26,83,23,"length"],[53,32,83,29],[53,34,83,31,"i"],[53,35,83,32],[53,38,83,35],[53,39,83,36],[53,41,83,38,"i"],[53,42,83,39],[53,45,83,42,"len"],[53,48,83,45],[53,50,83,47,"i"],[53,51,83,48],[53,53,83,50],[53,55,83,52],[54,6,84,2],[54,10,84,8,"toModel"],[54,17,84,15],[54,20,84,18,"models"],[54,26,84,24],[54,27,84,25,"i"],[54,28,84,26],[54,29,84,27],[55,6,85,2],[55,10,85,8,"node"],[55,14,85,12],[55,17,85,15,"graph"],[55,22,85,20],[55,23,85,21,"toModel"],[55,30,85,28],[55,31,85,29],[56,6,87,2],[56,10,87,6,"node"],[56,14,87,10],[56,15,87,11,"parent"],[56,21,87,17],[56,26,87,22],[56,30,87,26],[56,32,87,28],[57,8,89,3],[58,6,90,2],[59,6,92,2,"conversion"],[59,16,92,12],[59,17,92,13,"toModel"],[59,24,92,20],[59,25,92,21],[59,28,92,24,"wrapConversion"],[59,42,92,38],[59,43,92,39,"toModel"],[59,50,92,46],[59,52,92,48,"graph"],[59,57,92,53],[59,58,92,54],[60,4,93,1],[61,4,95,1],[61,11,95,8,"conversion"],[61,21,95,18],[62,2,96,0],[62,3,96,1],[63,0,96,2]],"functionMap":{"names":["<global>","buildGraph","deriveBFS","link","<anonymous>","wrapConversion","module.exports"],"mappings":"AAA;ACa;CDe;AEG;CFuB;AGE;QCC;EDE;CHC;AKE;CLa;iBME;CNkB"}},"type":"js/module"}]}