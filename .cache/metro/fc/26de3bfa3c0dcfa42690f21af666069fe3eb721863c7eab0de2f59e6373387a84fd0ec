{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8358}},{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8358}},{"start":{"line":8,"column":0,"index":140},"end":{"line":8,"column":40,"index":180}},{"start":{"line":10,"column":0,"index":239},"end":{"line":10,"column":54,"index":293}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8358}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8358}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":0,"index":94},"end":{"line":6,"column":44,"index":138}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./fromEntries","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":140},"end":{"line":8,"column":40,"index":180}}],"key":"d+ic4Sb74EHMEZTFDxW8pFJcVt0="}},{"name":"./validatePathConfig","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":239},"end":{"line":10,"column":54,"index":293}}],"key":"cg7LCOlFjZ3IP0CYIpbP6C+VR6g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"query-string\"));\n  var _fromEntries = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"./fromEntries\"));\n  var _validatePathConfig = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"./validatePathConfig\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  var getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n    if (options) {\n      (0, _validatePathConfig.default)(options);\n    }\n    var configs = options != null && options.screens ? createNormalizedConfigs(options == null ? void 0 : options.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern;\n      var focusedParams;\n      var focusedRoute = getActiveRoute(state);\n      var currentOptions = configs;\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _currentOptions$route;\n          var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n          var currentParams = (0, _fromEntries.default)(Object.entries(route.params).map(function (_ref) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n            return [key, stringify != null && stringify[key] ? stringify[key](value) : String(value)];\n          }));\n          if (pattern) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            var _pattern;\n            focusedParams = Object.assign({}, currentParams);\n            (_pattern = pattern) == null ? void 0 : _pattern.split('/').filter(function (p) {\n              return p.startsWith(':');\n            }).forEach(function (p) {\n              var name = getParamName(p);\n              if (focusedParams) {\n                delete focusedParams[name];\n              }\n            });\n          }\n        }\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n          if (p === '*') {\n            return route.name;\n          }\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n            if (_value === undefined && p.endsWith('?')) {\n              return '';\n            }\n            return encodeURIComponent(_value);\n          }\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n  var getParamName = function getParamName(pattern) {\n    return pattern.replace(/^:/, '').replace(/\\?$/, '');\n  };\n  var joinPaths = function joinPaths() {\n    var _ref3;\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n    return (_ref3 = []).concat.apply(_ref3, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n  var createConfigItem = function createConfigItem(config, parentPattern) {\n    var _pattern3;\n    if (typeof config === 'string') {\n      var _pattern2 = parentPattern ? joinPaths(parentPattern, config) : config;\n      return {\n        pattern: _pattern2\n      };\n    }\n    var pattern;\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n    pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    var screens = config.screens ? createNormalizedConfigs(config.screens, pattern) : undefined;\n    return {\n      pattern: (_pattern3 = pattern) == null ? void 0 : _pattern3.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n  var createNormalizedConfigs = function createNormalizedConfigs(options, pattern) {\n    return (0, _fromEntries.default)(Object.entries(options).map(function (_ref4) {\n      var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n        name = _ref5[0],\n        c = _ref5[1];\n      var result = createConfigItem(c, pattern);\n      return [name, result];\n    }));\n  };\n});","lineCount":174,"map":[[8,2,6,0],[9,2,8,0],[10,2,10,0],[11,2,10,54],[12,2,10,54],[13,2,27,0],[13,6,27,6,"getActiveRoute"],[13,20,27,20],[13,23,27,23],[13,32,27,6,"getActiveRoute"],[13,46,27,20],[13,47,27,24,"state"],[13,52,27,36],[13,54,27,76],[14,4,28,2],[14,8,28,8,"route"],[14,13,28,13],[14,16,29,4],[14,23,29,11,"state"],[14,28,29,16],[14,29,29,17,"index"],[14,34,29,22],[14,39,29,27],[14,47,29,35],[14,50,30,8,"state"],[14,55,30,13],[14,56,30,14,"routes"],[14,62,30,20],[14,63,30,21,"state"],[14,68,30,26],[14,69,30,27,"index"],[14,74,30,32],[14,75,30,33],[14,78,31,8,"state"],[14,83,31,13],[14,84,31,14,"routes"],[14,90,31,20],[14,91,31,21,"state"],[14,96,31,26],[14,97,31,27,"routes"],[14,103,31,33],[14,104,31,34,"length"],[14,110,31,40],[14,113,31,43],[14,114,31,44],[14,115,31,45],[15,4,33,2],[15,8,33,6,"route"],[15,13,33,11],[15,14,33,12,"state"],[15,19,33,17],[15,21,33,19],[16,6,34,4],[16,13,34,11,"getActiveRoute"],[16,27,34,25],[16,28,34,26,"route"],[16,33,34,31],[16,34,34,32,"state"],[16,39,34,37],[16,40,34,38],[17,4,35,2],[18,4,37,2],[18,11,37,9,"route"],[18,16,37,14],[19,2,38,0],[19,3,38,1],[20,2,69,15],[20,11,69,24,"getPathFromState"],[20,27,69,40],[20,28,70,2,"state"],[20,33,70,14],[20,35,71,2,"options"],[20,42,71,30],[20,44,72,10],[21,4,73,2],[21,8,73,6,"state"],[21,13,73,11],[21,17,73,15],[21,21,73,19],[21,23,73,21],[22,6,74,4],[22,12,74,10,"Error"],[22,17,74,15],[22,18,75,6],[22,97,75,85],[22,98,76,5],[23,4,77,2],[24,4,79,2],[24,8,79,6,"options"],[24,15,79,13],[24,17,79,15],[25,6,80,4],[25,10,80,4,"validatePathConfig"],[25,37,80,22],[25,39,80,23,"options"],[25,46,80,30],[25,47,80,31],[26,4,81,2],[27,4,84,2],[27,8,84,8,"configs"],[27,15,84,43],[27,18,84,46,"options"],[27,25,84,53],[27,37,84,46,"options"],[27,44,84,53],[27,45,84,55,"screens"],[27,52,84,62],[27,55,85,6,"createNormalizedConfigs"],[27,78,85,29],[27,79,85,30,"options"],[27,86,85,37],[27,106,85,30,"options"],[27,113,85,37],[27,114,85,39,"screens"],[27,121,85,46],[27,122,85,47],[27,125,86,6],[27,126,86,7],[27,127,86,8],[28,4,88,2],[28,8,88,6,"path"],[28,12,88,10],[28,15,88,13],[28,18,88,16],[29,4,89,2],[29,8,89,6,"current"],[29,15,89,32],[29,18,89,35,"state"],[29,23,89,40],[30,4,91,2],[30,8,91,8,"allParams"],[30,17,91,38],[30,20,91,41],[30,21,91,42],[30,22,91,43],[31,4,91,44],[31,33,93,18],[32,6,94,4],[32,10,94,8,"index"],[32,15,94,13],[32,18,94,16],[32,25,94,23,"current"],[32,32,94,30],[32,33,94,31,"index"],[32,38,94,36],[32,43,94,41],[32,51,94,49],[32,54,94,52,"current"],[32,61,94,59],[32,62,94,60,"index"],[32,67,94,65],[32,70,94,68],[32,71,94,69],[33,6,95,4],[33,10,95,8,"route"],[33,15,95,13],[33,18,95,16,"current"],[33,25,95,23],[33,26,95,24,"routes"],[33,32,95,30],[33,33,95,31,"index"],[33,38,95,36],[33,39,97,5],[34,6,99,4],[34,10,99,8,"pattern"],[34,17,99,35],[35,6,101,4],[35,10,101,8,"focusedParams"],[35,23,101,54],[36,6,102,4],[36,10,102,8,"focusedRoute"],[36,22,102,20],[36,25,102,23,"getActiveRoute"],[36,39,102,37],[36,40,102,38,"state"],[36,45,102,43],[36,46,102,44],[37,6,103,4],[37,10,103,8,"currentOptions"],[37,24,103,22],[37,27,103,25,"configs"],[37,34,103,32],[38,6,106,4],[38,10,106,8,"nestedRouteNames"],[38,26,106,24],[38,29,106,27],[38,31,106,29],[39,6,108,4],[39,10,108,8,"hasNext"],[39,17,108,15],[39,20,108,18],[39,24,108,22],[40,6,108,23],[40,37,110,52],[41,8,111,6,"pattern"],[41,15,111,13],[41,18,111,16,"currentOptions"],[41,32,111,30],[41,33,111,31,"route"],[41,38,111,36],[41,39,111,37,"name"],[41,43,111,41],[41,44,111,42],[41,45,111,43,"pattern"],[41,52,111,50],[42,8,113,6,"nestedRouteNames"],[42,24,113,22],[42,25,113,23,"push"],[42,29,113,27],[42,30,113,28,"route"],[42,35,113,33],[42,36,113,34,"name"],[42,40,113,38],[42,41,113,39],[43,8,115,6],[43,12,115,10,"route"],[43,17,115,15],[43,18,115,16,"params"],[43,24,115,22],[43,26,115,24],[44,10,115,24],[45,10,116,8],[45,14,116,14,"stringify"],[45,23,116,23],[45,51,116,26,"currentOptions"],[45,65,116,40],[45,66,116,41,"route"],[45,71,116,46],[45,72,116,47,"name"],[45,76,116,51],[45,77,116,52],[45,98,116,26],[45,120,116,54,"stringify"],[45,129,116,63],[46,10,118,8],[46,14,118,14,"currentParams"],[46,27,118,27],[46,30,118,30],[46,34,118,30,"fromEntries"],[46,54,118,41],[46,56,119,10,"Object"],[46,62,119,16],[46,63,119,17,"entries"],[46,70,119,24],[46,71,119,25,"route"],[46,76,119,30],[46,77,119,31,"params"],[46,83,119,37],[46,84,119,38],[46,85,119,39,"map"],[46,88,119,42],[46,89,119,43],[47,12,119,43],[48,14,119,45,"key"],[48,17,119,48],[49,14,119,50,"value"],[49,19,119,55],[50,12,119,55],[50,19,119,61],[50,20,120,12,"key"],[50,23,120,15],[50,25,121,12,"stringify"],[50,34,121,21],[50,46,121,12,"stringify"],[50,55,121,21],[50,56,121,24,"key"],[50,59,121,27],[50,60,121,28],[50,63,121,31,"stringify"],[50,72,121,40],[50,73,121,41,"key"],[50,76,121,44],[50,77,121,45],[50,78,121,46,"value"],[50,83,121,51],[50,84,121,52],[50,87,121,55,"String"],[50,93,121,61],[50,94,121,62,"value"],[50,99,121,67],[50,100,121,68],[50,101,122,11],[51,10,122,11],[51,12,122,12],[51,13,123,9],[52,10,125,8],[52,14,125,12,"pattern"],[52,21,125,19],[52,23,125,21],[53,12,126,10,"Object"],[53,18,126,16],[53,19,126,17,"assign"],[53,25,126,23],[53,26,126,24,"allParams"],[53,35,126,33],[53,37,126,35,"currentParams"],[53,50,126,48],[53,51,126,49],[54,10,127,8],[55,10,129,8],[55,14,129,12,"focusedRoute"],[55,26,129,24],[55,31,129,29,"route"],[55,36,129,34],[55,38,129,36],[56,12,129,36],[57,12,132,10,"focusedParams"],[57,25,132,23],[57,46,132,31,"currentParams"],[57,59,132,44],[57,60,132,46],[58,12,134,10],[58,24,134,10,"pattern"],[58,31,134,17],[58,52,134,10],[58,61,135,14,"split"],[58,66,135,19],[58,67,135,20],[58,70,135,23],[58,71,135,24],[58,72,136,13,"filter"],[58,78,136,19],[58,79,136,20],[58,89,136,21,"p"],[58,90,136,22],[59,14,136,22],[59,21,136,27,"p"],[59,22,136,28],[59,23,136,29,"startsWith"],[59,33,136,39],[59,34,136,40],[59,37,136,43],[59,38,136,44],[60,12,136,44],[60,14,136,45],[60,15,138,13,"forEach"],[60,22,138,20],[60,23,138,21],[60,33,138,22,"p"],[60,34,138,23],[60,36,138,28],[61,14,139,14],[61,18,139,20,"name"],[61,22,139,24],[61,25,139,27,"getParamName"],[61,37,139,39],[61,38,139,40,"p"],[61,39,139,41],[61,40,139,42],[62,14,142,14],[62,18,142,18,"focusedParams"],[62,31,142,31],[62,33,142,33],[63,16,144,16],[63,23,144,23,"focusedParams"],[63,36,144,36],[63,37,144,37,"name"],[63,41,144,41],[63,42,144,42],[64,14,145,14],[65,12,146,12],[65,13,146,13],[65,14,146,14],[66,10,147,8],[67,8,148,6],[68,8,151,6],[68,12,151,10],[68,13,151,11,"currentOptions"],[68,27,151,25],[68,28,151,26,"route"],[68,33,151,31],[68,34,151,32,"name"],[68,38,151,36],[68,39,151,37],[68,40,151,38,"screens"],[68,47,151,45],[68,51,151,49,"route"],[68,56,151,54],[68,57,151,55,"state"],[68,62,151,60],[68,67,151,65,"undefined"],[68,76,151,74],[68,78,151,76],[69,10,152,8,"hasNext"],[69,17,152,15],[69,20,152,18],[69,25,152,23],[70,8,153,6],[70,9,153,7],[70,15,153,13],[71,10,154,8,"index"],[71,15,154,13],[71,18,155,10],[71,25,155,17,"route"],[71,30,155,22],[71,31,155,23,"state"],[71,36,155,28],[71,37,155,29,"index"],[71,42,155,34],[71,47,155,39],[71,55,155,47],[71,58,156,14,"route"],[71,63,156,19],[71,64,156,20,"state"],[71,69,156,25],[71,70,156,26,"index"],[71,75,156,31],[71,78,157,14,"route"],[71,83,157,19],[71,84,157,20,"state"],[71,89,157,25],[71,90,157,26,"routes"],[71,96,157,32],[71,97,157,33,"length"],[71,103,157,39],[71,106,157,42],[71,107,157,43],[72,10,159,8],[72,14,159,14,"nextRoute"],[72,23,159,23],[72,26,159,26,"route"],[72,31,159,31],[72,32,159,32,"state"],[72,37,159,37],[72,38,159,38,"routes"],[72,44,159,44],[72,45,159,45,"index"],[72,50,159,50],[72,51,159,51],[73,10,160,8],[73,14,160,14,"nestedConfig"],[73,26,160,26],[73,29,160,29,"currentOptions"],[73,43,160,43],[73,44,160,44,"route"],[73,49,160,49],[73,50,160,50,"name"],[73,54,160,54],[73,55,160,55],[73,56,160,56,"screens"],[73,63,160,63],[74,10,163,8],[74,14,163,12,"nestedConfig"],[74,26,163,24],[74,30,163,28,"nextRoute"],[74,39,163,37],[74,40,163,38,"name"],[74,44,163,42],[74,48,163,46,"nestedConfig"],[74,60,163,58],[74,62,163,60],[75,12,164,10,"route"],[75,17,164,15],[75,20,164,18,"nextRoute"],[75,29,164,64],[76,12,165,10,"currentOptions"],[76,26,165,24],[76,29,165,27,"nestedConfig"],[76,41,165,39],[77,10,166,8],[77,11,166,9],[77,17,166,15],[78,12,168,10,"hasNext"],[78,19,168,17],[78,22,168,20],[78,27,168,25],[79,10,169,8],[80,8,170,6],[81,6,171,4],[81,7,171,5],[82,6,110,4],[82,13,110,11,"route"],[82,18,110,16],[82,19,110,17,"name"],[82,23,110,21],[82,27,110,25,"currentOptions"],[82,41,110,39],[82,45,110,43,"hasNext"],[82,52,110,50],[83,8,110,50],[84,6,110,50],[85,6,173,4],[85,10,173,8,"pattern"],[85,17,173,15],[85,22,173,20,"undefined"],[85,31,173,29],[85,33,173,31],[86,8,174,6,"pattern"],[86,15,174,13],[86,18,174,16,"nestedRouteNames"],[86,34,174,32],[86,35,174,33,"join"],[86,39,174,37],[86,40,174,38],[86,43,174,41],[86,44,174,42],[87,6,175,4],[88,6,177,4],[88,10,177,8,"currentOptions"],[88,24,177,22],[88,25,177,23,"route"],[88,30,177,28],[88,31,177,29,"name"],[88,35,177,33],[88,36,177,34],[88,41,177,39,"undefined"],[88,50,177,48],[88,52,177,50],[89,8,178,6,"path"],[89,12,178,10],[89,16,178,14,"pattern"],[89,23,178,21],[89,24,179,9,"split"],[89,29,179,14],[89,30,179,15],[89,33,179,18],[89,34,179,19],[89,35,180,9,"map"],[89,38,180,12],[89,39,180,13],[89,49,180,14,"p"],[89,50,180,15],[89,52,180,20],[90,10,181,10],[90,14,181,16,"name"],[90,18,181,20],[90,21,181,23,"getParamName"],[90,33,181,35],[90,34,181,36,"p"],[90,35,181,37],[90,36,181,38],[91,10,186,10],[91,14,186,14,"p"],[91,15,186,15],[91,20,186,20],[91,23,186,23],[91,25,186,25],[92,12,187,12],[92,19,187,19,"route"],[92,24,187,24],[92,25,187,25,"name"],[92,29,187,29],[93,10,188,10],[94,10,191,10],[94,14,191,14,"p"],[94,15,191,15],[94,16,191,16,"startsWith"],[94,26,191,26],[94,27,191,27],[94,30,191,30],[94,31,191,31],[94,33,191,33],[95,12,192,12],[95,16,192,18,"value"],[95,22,192,23],[95,25,192,26,"allParams"],[95,34,192,35],[95,35,192,36,"name"],[95,39,192,40],[95,40,192,41],[96,12,194,12],[96,16,194,16,"value"],[96,22,194,21],[96,27,194,26,"undefined"],[96,36,194,35],[96,40,194,39,"p"],[96,41,194,40],[96,42,194,41,"endsWith"],[96,50,194,49],[96,51,194,50],[96,54,194,53],[96,55,194,54],[96,57,194,56],[97,14,196,14],[97,21,196,21],[97,23,196,23],[98,12,197,12],[99,12,199,12],[99,19,199,19,"encodeURIComponent"],[99,37,199,37],[99,38,199,38,"value"],[99,44,199,43],[99,45,199,44],[100,10,200,10],[101,10,202,10],[101,17,202,17,"encodeURIComponent"],[101,35,202,35],[101,36,202,36,"p"],[101,37,202,37],[101,38,202,38],[102,8,203,8],[102,9,203,9],[102,10,203,10],[102,11,204,9,"join"],[102,15,204,13],[102,16,204,14],[102,19,204,17],[102,20,204,18],[103,6,205,4],[103,7,205,5],[103,13,205,11],[104,8,206,6,"path"],[104,12,206,10],[104,16,206,14,"encodeURIComponent"],[104,34,206,32],[104,35,206,33,"route"],[104,40,206,38],[104,41,206,39,"name"],[104,45,206,43],[104,46,206,44],[105,6,207,4],[106,6,209,4],[106,10,209,8],[106,11,209,9,"focusedParams"],[106,24,209,22],[106,26,209,24],[107,8,210,6,"focusedParams"],[107,21,210,19],[107,24,210,22,"focusedRoute"],[107,36,210,34],[107,37,210,35,"params"],[107,43,210,41],[108,6,211,4],[109,6,213,4],[109,10,213,8,"route"],[109,15,213,13],[109,16,213,14,"state"],[109,21,213,19],[109,23,213,21],[110,8,214,6,"path"],[110,12,214,10],[110,16,214,14],[110,19,214,17],[111,6,215,4],[111,7,215,5],[111,13,215,11],[111,17,215,15,"focusedParams"],[111,30,215,28],[111,32,215,30],[112,8,216,6],[112,13,216,11],[112,17,216,15,"param"],[112,22,216,20],[112,26,216,24,"focusedParams"],[112,39,216,37],[112,41,216,39],[113,10,217,8],[113,14,217,12,"focusedParams"],[113,27,217,25],[113,28,217,26,"param"],[113,33,217,31],[113,34,217,32],[113,39,217,37],[113,50,217,48],[113,52,217,50],[114,12,219,10],[114,19,219,17,"focusedParams"],[114,32,219,30],[114,33,219,31,"param"],[114,38,219,36],[114,39,219,37],[115,10,220,8],[116,8,221,6],[117,8,223,6],[117,12,223,12,"query"],[117,17,223,17],[117,20,223,20,"queryString"],[117,31,223,31],[117,32,223,32,"stringify"],[117,41,223,41],[117,42,223,42,"focusedParams"],[117,55,223,55],[117,57,223,57],[118,10,223,59,"sort"],[118,14,223,63],[118,16,223,65],[119,8,223,71],[119,9,223,72],[119,10,223,73],[120,8,225,6],[120,12,225,10,"query"],[120,17,225,15],[120,19,225,17],[121,10,226,8,"path"],[121,14,226,12],[121,18,226,17],[121,22,226,20,"query"],[121,27,226,26],[121,29,226,27],[122,8,227,6],[123,6,228,4],[124,6,230,4,"current"],[124,13,230,11],[124,16,230,14,"route"],[124,21,230,19],[124,22,230,20,"state"],[124,27,230,25],[125,4,231,2],[125,5,231,3],[126,4,93,2],[126,11,93,9,"current"],[126,18,93,16],[127,6,93,16],[128,4,93,16],[129,4,234,2,"path"],[129,8,234,6],[129,11,234,9,"path"],[129,15,234,13],[129,16,234,14,"replace"],[129,23,234,21],[129,24,234,22],[129,30,234,28],[129,32,234,30],[129,35,234,33],[129,36,234,34],[130,4,235,2,"path"],[130,8,235,6],[130,11,235,9,"path"],[130,15,235,13],[130,16,235,14,"length"],[130,22,235,20],[130,25,235,23],[130,26,235,24],[130,29,235,27,"path"],[130,33,235,31],[130,34,235,32,"replace"],[130,41,235,39],[130,42,235,40],[130,47,235,45],[130,49,235,47],[130,51,235,49],[130,52,235,50],[130,55,235,53,"path"],[130,59,235,57],[131,4,237,2],[131,11,237,9,"path"],[131,15,237,13],[132,2,238,0],[133,2,240,0],[133,6,240,6,"getParamName"],[133,18,240,18],[133,21,240,21],[133,30,240,6,"getParamName"],[133,42,240,18],[133,43,240,22,"pattern"],[133,50,240,37],[134,4,240,37],[134,11,241,2,"pattern"],[134,18,241,9],[134,19,241,10,"replace"],[134,26,241,17],[134,27,241,18],[134,31,241,22],[134,33,241,24],[134,35,241,26],[134,36,241,27],[134,37,241,28,"replace"],[134,44,241,35],[134,45,241,36],[134,50,241,41],[134,52,241,43],[134,54,241,45],[134,55,241,46],[135,2,241,46],[136,2,243,0],[136,6,243,6,"joinPaths"],[136,15,243,15],[136,18,243,18],[136,27,243,6,"joinPaths"],[136,36,243,15],[137,4,243,15],[138,4,243,15],[138,38,243,22,"paths"],[138,43,243,27],[139,6,243,22,"paths"],[139,11,243,27],[140,4,243,27],[141,4,243,27],[141,11,244,2],[141,20,244,3],[141,22,244,5],[141,24,245,5,"concat"],[141,30,245,11],[141,77,245,15,"paths"],[141,82,245,20],[141,83,245,21,"map"],[141,86,245,24],[141,87,245,25],[141,97,245,26,"p"],[141,98,245,27],[142,6,245,27],[142,13,245,32,"p"],[142,14,245,33],[142,15,245,34,"split"],[142,20,245,39],[142,21,245,40],[142,24,245,43],[142,25,245,44],[143,4,245,44],[143,6,245,45],[143,8,245,46],[143,9,246,5,"filter"],[143,15,246,11],[143,16,246,12,"Boolean"],[143,23,246,19],[143,24,246,20],[143,25,247,5,"join"],[143,29,247,9],[143,30,247,10],[143,33,247,13],[143,34,247,14],[144,2,247,14],[145,2,249,0],[145,6,249,6,"createConfigItem"],[145,22,249,22],[145,25,249,25],[145,34,249,6,"createConfigItem"],[145,50,249,22],[145,51,250,2,"config"],[145,57,250,37],[145,59,251,2,"parentPattern"],[145,72,251,24],[145,74,252,17],[146,4,252,17],[147,4,253,2],[147,8,253,6],[147,15,253,13,"config"],[147,21,253,19],[147,26,253,24],[147,34,253,32],[147,36,253,34],[148,6,255,4],[148,10,255,10,"pattern"],[148,19,255,17],[148,22,255,20,"parentPattern"],[148,35,255,33],[148,38,255,36,"joinPaths"],[148,47,255,45],[148,48,255,46,"parentPattern"],[148,61,255,59],[148,63,255,61,"config"],[148,69,255,67],[148,70,255,68],[148,73,255,71,"config"],[148,79,255,77],[149,6,257,4],[149,13,257,11],[150,8,257,13,"pattern"],[150,15,257,20],[150,17,257,13,"pattern"],[151,6,257,21],[151,7,257,22],[152,4,258,2],[153,4,262,2],[153,8,262,6,"pattern"],[153,15,262,33],[154,4,264,2],[154,8,264,6,"config"],[154,14,264,12],[154,15,264,13,"exact"],[154,20,264,18],[154,24,264,22,"config"],[154,30,264,28],[154,31,264,29,"path"],[154,35,264,33],[154,40,264,38,"undefined"],[154,49,264,47],[154,51,264,49],[155,6,265,4],[155,12,265,10],[155,16,265,14,"Error"],[155,21,265,19],[155,22,266,6],[155,172,266,156],[155,173,267,5],[156,4,268,2],[157,4,270,2,"pattern"],[157,11,270,9],[157,14,271,4,"config"],[157,20,271,10],[157,21,271,11,"exact"],[157,26,271,16],[157,31,271,21],[157,35,271,25],[157,38,272,8,"joinPaths"],[157,47,272,17],[157,48,272,18,"parentPattern"],[157,61,272,31],[157,65,272,35],[157,67,272,37],[157,69,272,39,"config"],[157,75,272,45],[157,76,272,46,"path"],[157,80,272,50],[157,84,272,54],[157,86,272,56],[157,87,272,57],[157,90,273,8,"config"],[157,96,273,14],[157,97,273,15,"path"],[157,101,273,19],[157,105,273,23],[157,107,273,25],[158,4,275,2],[158,8,275,8,"screens"],[158,15,275,15],[158,18,275,18,"config"],[158,24,275,24],[158,25,275,25,"screens"],[158,32,275,32],[158,35,276,6,"createNormalizedConfigs"],[158,58,276,29],[158,59,276,30,"config"],[158,65,276,36],[158,66,276,37,"screens"],[158,73,276,44],[158,75,276,46,"pattern"],[158,82,276,53],[158,83,276,54],[158,86,277,6,"undefined"],[158,95,277,15],[159,4,279,2],[159,11,279,9],[160,6,281,4,"pattern"],[160,13,281,11],[160,28,281,13,"pattern"],[160,35,281,20],[160,56,281,13],[160,66,281,22,"split"],[160,71,281,27],[160,72,281,28],[160,75,281,31],[160,76,281,32],[160,77,281,33,"filter"],[160,83,281,39],[160,84,281,40,"Boolean"],[160,91,281,47],[160,92,281,48],[160,93,281,49,"join"],[160,97,281,53],[160,98,281,54],[160,101,281,57],[160,102,281,58],[161,6,282,4,"stringify"],[161,15,282,13],[161,17,282,15,"config"],[161,23,282,21],[161,24,282,22,"stringify"],[161,33,282,31],[162,6,283,4,"screens"],[162,13,283,11],[162,15,283,4,"screens"],[163,4,284,2],[163,5,284,3],[164,2,285,0],[164,3,285,1],[165,2,287,0],[165,6,287,6,"createNormalizedConfigs"],[165,29,287,29],[165,32,287,32],[165,41,287,6,"createNormalizedConfigs"],[165,64,287,29],[165,65,288,2,"options"],[165,72,288,32],[165,74,289,2,"pattern"],[165,81,289,18],[166,4,289,18],[166,11,291,2],[166,15,291,2,"fromEntries"],[166,35,291,13],[166,37,292,4,"Object"],[166,43,292,10],[166,44,292,11,"entries"],[166,51,292,18],[166,52,292,19,"options"],[166,59,292,26],[166,60,292,27],[166,61,292,28,"map"],[166,64,292,31],[166,65,292,32],[166,82,292,47],[167,6,292,47],[168,8,292,34,"name"],[168,12,292,38],[169,8,292,40,"c"],[169,9,292,41],[170,6,293,6],[170,10,293,12,"result"],[170,16,293,18],[170,19,293,21,"createConfigItem"],[170,35,293,37],[170,36,293,38,"c"],[170,37,293,39],[170,39,293,41,"pattern"],[170,46,293,48],[170,47,293,49],[171,6,295,6],[171,13,295,13],[171,14,295,14,"name"],[171,18,295,18],[171,20,295,20,"result"],[171,26,295,26],[171,27,295,27],[172,4,296,4],[172,5,296,5],[172,6,296,6],[172,7,297,3],[173,2,297,3],[174,0,297,4]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","pattern.split.filter$argument_0","pattern.split.filter.forEach$argument_0","pattern.split.map$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBC0B;CDW;eE+B;2CCkD;WDG;oBEc,wBF;qBGE;aHQ;aIkC;SJuB;CFmC;qBOE;8CPC;kBQE;yBCE,mBD;cRE;yBUE;CVoC;gCWE;gCRK;KQI;GXC"}},"type":"js/module"}]}