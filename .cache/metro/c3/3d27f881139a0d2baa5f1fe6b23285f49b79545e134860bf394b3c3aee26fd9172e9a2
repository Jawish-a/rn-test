{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":107,"index":147}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native/Libraries/Components/View/ReactNativeStyleAttributes","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":107,"index":147}}],"key":"1ABRebneJw1GoqHT4XDfe2ZXz6I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.processFonts = processFonts;\n  var _ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\"));\n  function processFonts(fontFamilies) {\n    var _ReactNativeStyleAttr;\n    var fontFamilyProcessor = (_ReactNativeStyleAttr = _ReactNativeStyleAttributes.default.fontFamily) == null ? void 0 : _ReactNativeStyleAttr.process;\n    if (typeof fontFamilyProcessor === 'function') {\n      return fontFamilies.map(fontFamilyProcessor);\n    }\n    return fontFamilies;\n  }\n});","lineCount":15,"map":[[6,2,2,0],[7,2,4,7],[7,11,4,16,"processFonts"],[7,23,4,28],[7,24,5,2,"fontFamilies"],[7,36,5,38],[7,38,6,26],[8,4,6,26],[9,4,8,2],[9,8,8,8,"fontFamilyProcessor"],[9,27,8,27],[9,55,8,30,"ReactNativeStyleAttributes"],[9,90,8,56],[9,91,8,57,"fontFamily"],[9,101,8,67],[9,122,8,30],[9,144,8,69,"process"],[9,151,8,76],[10,4,9,2],[10,8,9,6],[10,15,9,13,"fontFamilyProcessor"],[10,34,9,32],[10,39,9,37],[10,49,9,47],[10,51,9,49],[11,6,10,4],[11,13,10,11,"fontFamilies"],[11,25,10,23],[11,26,10,24,"map"],[11,29,10,27],[11,30,10,28,"fontFamilyProcessor"],[11,49,10,47],[11,50,10,48],[12,4,11,2],[13,4,12,2],[13,11,12,9,"fontFamilies"],[13,23,12,21],[14,2,13,0],[15,0,13,1]],"functionMap":{"names":["<global>","processFonts"],"mappings":"AAA;OCG;CDS"}},"type":"js/module"}]}