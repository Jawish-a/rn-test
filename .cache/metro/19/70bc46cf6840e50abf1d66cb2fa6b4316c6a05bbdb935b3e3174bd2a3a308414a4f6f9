{"dependencies":[{"name":"./lib/markup","data":{"asyncType":null,"locs":[{"start":{"line":71,"column":15,"index":1869},"end":{"line":71,"column":32,"index":1886}},{"start":{"line":75,"column":15,"index":1957},"end":{"line":75,"column":35,"index":1977}},{"start":{"line":83,"column":15,"index":2150},"end":{"line":83,"column":41,"index":2176}},{"start":{"line":86,"column":13,"index":2211},"end":{"line":86,"column":33,"index":2231}},{"start":{"line":88,"column":8,"index":2252},"end":{"line":88,"column":26,"index":2270}},{"start":{"line":106,"column":8,"index":2717},"end":{"line":106,"column":29,"index":2738}}],"key":"0OASQXKiBa31R599Q71JZrfBlUk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.default = exports.serialize = exports.test = void 0;\n  var ELEMENT_NODE = 1;\n  var TEXT_NODE = 3;\n  var COMMENT_NODE = 8;\n  var FRAGMENT_NODE = 11;\n  var ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n  var testNode = function testNode(val) {\n    var _val$hasAttribute;\n    var constructorName = val.constructor.name;\n    var nodeType = val.nodeType,\n      tagName = val.tagName;\n    var isCustomElement = typeof tagName === 'string' && tagName.includes('-') || ((_val$hasAttribute = val.hasAttribute) === null || _val$hasAttribute === void 0 ? void 0 : _val$hasAttribute.call(val, 'is'));\n    return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n  };\n  var test = function test(val) {\n    var _val$constructor;\n    return (val === null || val === void 0 ? void 0 : (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) && testNode(val);\n  };\n  exports.test = test;\n  function nodeIsText(node) {\n    return node.nodeType === TEXT_NODE;\n  }\n  function nodeIsComment(node) {\n    return node.nodeType === COMMENT_NODE;\n  }\n  function nodeIsFragment(node) {\n    return node.nodeType === FRAGMENT_NODE;\n  }\n  var serialize = function serialize(node, config, indentation, depth, refs, printer) {\n    if (nodeIsText(node)) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printText)(node.data, config);\n    }\n    if (nodeIsComment(node)) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printComment)(node.data, config);\n    }\n    var type = nodeIsFragment(node) ? `DocumentFragment` : node.tagName.toLowerCase();\n    if (++depth > config.maxDepth) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printElementAsLeaf)(type, config);\n    }\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printElement)(type, (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(function (attr) {\n      return attr.name;\n    }).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce(function (props, attribute) {\n      props[attribute.name] = attribute.value;\n      return props;\n    }, {}), config, indentation + config.indent, depth, refs, printer), (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n  exports.serialize = serialize;\n  var plugin = {\n    serialize: serialize,\n    test: test\n  };\n  var _default = plugin;\n  exports.default = _default;\n});","lineCount":60,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"exports"],[7,27,6,25],[7,28,6,26,"serialize"],[7,37,6,35],[7,40,6,38,"exports"],[7,47,6,45],[7,48,6,46,"test"],[7,52,6,50],[7,55,6,53],[7,60,6,58],[7,61,6,59],[8,2,16,0],[8,6,16,6,"ELEMENT_NODE"],[8,18,16,18],[8,21,16,21],[8,22,16,22],[9,2,17,0],[9,6,17,6,"TEXT_NODE"],[9,15,17,15],[9,18,17,18],[9,19,17,19],[10,2,18,0],[10,6,18,6,"COMMENT_NODE"],[10,18,18,18],[10,21,18,21],[10,22,18,22],[11,2,19,0],[11,6,19,6,"FRAGMENT_NODE"],[11,19,19,19],[11,22,19,22],[11,24,19,24],[12,2,20,0],[12,6,20,6,"ELEMENT_REGEXP"],[12,20,20,20],[12,23,20,23],[12,50,20,50],[13,2,22,0],[13,6,22,6,"testNode"],[13,14,22,14],[13,17,22,17],[13,26,22,6,"testNode"],[13,34,22,14],[13,35,22,17,"val"],[13,38,22,20],[13,40,22,24],[14,4,23,2],[14,8,23,6,"_val$hasAttribute"],[14,25,23,23],[15,4,25,2],[15,8,25,8,"constructorName"],[15,23,25,23],[15,26,25,26,"val"],[15,29,25,29],[15,30,25,30,"constructor"],[15,41,25,41],[15,42,25,42,"name"],[15,46,25,46],[16,4,26,2],[16,8,26,9,"nodeType"],[16,16,26,17],[16,19,26,30,"val"],[16,22,26,33],[16,23,26,9,"nodeType"],[16,31,26,17],[17,6,26,19,"tagName"],[17,13,26,26],[17,16,26,30,"val"],[17,19,26,33],[17,20,26,19,"tagName"],[17,27,26,26],[18,4,27,2],[18,8,27,8,"isCustomElement"],[18,23,27,23],[18,26,28,5],[18,33,28,12,"tagName"],[18,40,28,19],[18,45,28,24],[18,53,28,32],[18,57,28,36,"tagName"],[18,64,28,43],[18,65,28,44,"includes"],[18,73,28,52],[18,74,28,53],[18,77,28,56],[18,78,28,57],[18,83,29,5],[18,84,29,6,"_val$hasAttribute"],[18,101,29,23],[18,104,29,26,"val"],[18,107,29,29],[18,108,29,30,"hasAttribute"],[18,120,29,42],[18,126,29,48],[18,130,29,52],[18,134,30,4,"_val$hasAttribute"],[18,151,30,21],[18,156,30,26],[18,161,30,31],[18,162,30,32],[18,165,31,8],[18,170,31,13],[18,171,31,14],[18,174,32,8,"_val$hasAttribute"],[18,191,32,25],[18,192,32,26,"call"],[18,196,32,30],[18,197,32,31,"val"],[18,200,32,34],[18,202,32,36],[18,206,32,40],[18,207,32,41],[18,208,32,42],[19,4,33,2],[19,11,34,5,"nodeType"],[19,19,34,13],[19,24,34,18,"ELEMENT_NODE"],[19,36,34,30],[19,41,35,7,"ELEMENT_REGEXP"],[19,55,35,21],[19,56,35,22,"test"],[19,60,35,26],[19,61,35,27,"constructorName"],[19,76,35,42],[19,77,35,43],[19,81,35,47,"isCustomElement"],[19,96,35,62],[19,97,35,63],[19,101,36,5,"nodeType"],[19,109,36,13],[19,114,36,18,"TEXT_NODE"],[19,123,36,27],[19,127,36,31,"constructorName"],[19,142,36,46],[19,147,36,51],[19,153,36,58],[19,157,37,5,"nodeType"],[19,165,37,13],[19,170,37,18,"COMMENT_NODE"],[19,182,37,30],[19,186,37,34,"constructorName"],[19,201,37,49],[19,206,37,54],[19,215,37,64],[19,219,38,5,"nodeType"],[19,227,38,13],[19,232,38,18,"FRAGMENT_NODE"],[19,245,38,31],[19,249,38,35,"constructorName"],[19,264,38,50],[19,269,38,55],[19,287,38,74],[20,2,40,0],[20,3,40,1],[21,2,42,0],[21,6,42,6,"test"],[21,10,42,10],[21,13,42,13],[21,22,42,6,"test"],[21,26,42,10],[21,27,42,13,"val"],[21,30,42,16],[21,32,42,20],[22,4,43,2],[22,8,43,6,"_val$constructor"],[22,24,43,22],[23,4,45,2],[23,11,46,4],[23,12,46,5,"val"],[23,15,46,8],[23,20,46,13],[23,24,46,17],[23,28,46,21,"val"],[23,31,46,24],[23,36,46,29],[23,41,46,34],[23,42,46,35],[23,45,47,8],[23,50,47,13],[23,51,47,14],[23,54,48,8],[23,55,48,9,"_val$constructor"],[23,71,48,25],[23,74,48,28,"val"],[23,77,48,31],[23,78,48,32,"constructor"],[23,89,48,43],[23,95,48,49],[23,99,48,53],[23,103,49,8,"_val$constructor"],[23,119,49,24],[23,124,49,29],[23,129,49,34],[23,130,49,35],[23,133,50,8],[23,138,50,13],[23,139,50,14],[23,142,51,8,"_val$constructor"],[23,158,51,24],[23,159,51,25,"name"],[23,163,51,29],[23,168,51,34,"testNode"],[23,176,51,42],[23,177,51,43,"val"],[23,180,51,46],[23,181,51,47],[24,2,53,0],[24,3,53,1],[25,2,55,0,"exports"],[25,9,55,7],[25,10,55,8,"test"],[25,14,55,12],[25,17,55,15,"test"],[25,21,55,19],[26,2,57,0],[26,11,57,9,"nodeIsText"],[26,21,57,19],[26,22,57,20,"node"],[26,26,57,24],[26,28,57,26],[27,4,58,2],[27,11,58,9,"node"],[27,15,58,13],[27,16,58,14,"nodeType"],[27,24,58,22],[27,29,58,27,"TEXT_NODE"],[27,38,58,36],[28,2,59,0],[29,2,61,0],[29,11,61,9,"nodeIsComment"],[29,24,61,22],[29,25,61,23,"node"],[29,29,61,27],[29,31,61,29],[30,4,62,2],[30,11,62,9,"node"],[30,15,62,13],[30,16,62,14,"nodeType"],[30,24,62,22],[30,29,62,27,"COMMENT_NODE"],[30,41,62,39],[31,2,63,0],[32,2,65,0],[32,11,65,9,"nodeIsFragment"],[32,25,65,23],[32,26,65,24,"node"],[32,30,65,28],[32,32,65,30],[33,4,66,2],[33,11,66,9,"node"],[33,15,66,13],[33,16,66,14,"nodeType"],[33,24,66,22],[33,29,66,27,"FRAGMENT_NODE"],[33,42,66,40],[34,2,67,0],[35,2,69,0],[35,6,69,6,"serialize"],[35,15,69,15],[35,18,69,18],[35,27,69,6,"serialize"],[35,36,69,15],[35,37,69,19,"node"],[35,41,69,23],[35,43,69,25,"config"],[35,49,69,31],[35,51,69,33,"indentation"],[35,62,69,44],[35,64,69,46,"depth"],[35,69,69,51],[35,71,69,53,"refs"],[35,75,69,57],[35,77,69,59,"printer"],[35,84,69,66],[35,86,69,71],[36,4,70,2],[36,8,70,6,"nodeIsText"],[36,18,70,16],[36,19,70,17,"node"],[36,23,70,21],[36,24,70,22],[36,26,70,24],[37,6,71,4],[37,13,71,11],[37,14,71,12],[37,15,71,13],[37,17,71,15],[37,64,71,23,"printText"],[37,73,71,32],[37,75,71,34,"node"],[37,79,71,38],[37,80,71,39,"data"],[37,84,71,43],[37,86,71,45,"config"],[37,92,71,51],[37,93,71,52],[38,4,72,2],[39,4,74,2],[39,8,74,6,"nodeIsComment"],[39,21,74,19],[39,22,74,20,"node"],[39,26,74,24],[39,27,74,25],[39,29,74,27],[40,6,75,4],[40,13,75,11],[40,14,75,12],[40,15,75,13],[40,17,75,15],[40,64,75,23,"printComment"],[40,76,75,35],[40,78,75,37,"node"],[40,82,75,41],[40,83,75,42,"data"],[40,87,75,46],[40,89,75,48,"config"],[40,95,75,54],[40,96,75,55],[41,4,76,2],[42,4,78,2],[42,8,78,8,"type"],[42,12,78,12],[42,15,78,15,"nodeIsFragment"],[42,29,78,29],[42,30,78,30,"node"],[42,34,78,34],[42,35,78,35],[42,38,79,7],[42,56,79,24],[42,59,80,6,"node"],[42,63,80,10],[42,64,80,11,"tagName"],[42,71,80,18],[42,72,80,19,"toLowerCase"],[42,83,80,30],[42,85,80,32],[43,4,82,2],[43,8,82,6],[43,10,82,8,"depth"],[43,15,82,13],[43,18,82,16,"config"],[43,24,82,22],[43,25,82,23,"maxDepth"],[43,33,82,31],[43,35,82,33],[44,6,83,4],[44,13,83,11],[44,14,83,12],[44,15,83,13],[44,17,83,15],[44,64,83,23,"printElementAsLeaf"],[44,82,83,41],[44,84,83,43,"type"],[44,88,83,47],[44,90,83,49,"config"],[44,96,83,55],[44,97,83,56],[45,4,84,2],[46,4,86,2],[46,11,86,9],[46,12,86,10],[46,13,86,11],[46,15,86,13],[46,62,86,21,"printElement"],[46,74,86,33],[46,76,87,4,"type"],[46,80,87,8],[46,82,88,4],[46,83,88,5],[46,84,88,6],[46,86,88,8],[46,133,88,16,"printProps"],[46,143,88,26],[46,145,89,6,"nodeIsFragment"],[46,159,89,20],[46,160,89,21,"node"],[46,164,89,25],[46,165,89,26],[46,168,90,10],[46,170,90,12],[46,173,91,10,"Array"],[46,178,91,15],[46,179,91,16,"from"],[46,183,91,20],[46,184,91,21,"node"],[46,188,91,25],[46,189,91,26,"attributes"],[46,199,91,36],[46,200,91,37],[46,201,92,13,"map"],[46,204,92,16],[46,205,92,17],[46,215,92,17,"attr"],[46,219,92,21],[47,6,92,21],[47,13,92,25,"attr"],[47,17,92,29],[47,18,92,30,"name"],[47,22,92,34],[48,4,92,34],[48,6,92,35],[48,7,93,13,"sort"],[48,11,93,17],[48,13,93,19],[48,15,94,6,"nodeIsFragment"],[48,29,94,20],[48,30,94,21,"node"],[48,34,94,25],[48,35,94,26],[48,38,95,10],[48,39,95,11],[48,40,95,12],[48,43,96,10,"Array"],[48,48,96,15],[48,49,96,16,"from"],[48,53,96,20],[48,54,96,21,"node"],[48,58,96,25],[48,59,96,26,"attributes"],[48,69,96,36],[48,70,96,37],[48,71,96,38,"reduce"],[48,77,96,44],[48,78,96,45],[48,88,96,46,"props"],[48,93,96,51],[48,95,96,53,"attribute"],[48,104,96,62],[48,106,96,67],[49,6,97,12,"props"],[49,11,97,17],[49,12,97,18,"attribute"],[49,21,97,27],[49,22,97,28,"name"],[49,26,97,32],[49,27,97,33],[49,30,97,36,"attribute"],[49,39,97,45],[49,40,97,46,"value"],[49,45,97,51],[50,6,98,12],[50,13,98,19,"props"],[50,18,98,24],[51,4,99,10],[51,5,99,11],[51,7,99,13],[51,8,99,14],[51,9,99,15],[51,10,99,16],[51,12,100,6,"config"],[51,18,100,12],[51,20,101,6,"indentation"],[51,31,101,17],[51,34,101,20,"config"],[51,40,101,26],[51,41,101,27,"indent"],[51,47,101,33],[51,49,102,6,"depth"],[51,54,102,11],[51,56,103,6,"refs"],[51,60,103,10],[51,62,104,6,"printer"],[51,69,104,13],[51,70,105,5],[51,72,106,4],[51,73,106,5],[51,74,106,6],[51,76,106,8],[51,123,106,16,"printChildren"],[51,136,106,29],[51,138,107,6,"Array"],[51,143,107,11],[51,144,107,12,"prototype"],[51,153,107,21],[51,154,107,22,"slice"],[51,159,107,27],[51,160,107,28,"call"],[51,164,107,32],[51,165,107,33,"node"],[51,169,107,37],[51,170,107,38,"childNodes"],[51,180,107,48],[51,184,107,52,"node"],[51,188,107,56],[51,189,107,57,"children"],[51,197,107,65],[51,198,107,66],[51,200,108,6,"config"],[51,206,108,12],[51,208,109,6,"indentation"],[51,219,109,17],[51,222,109,20,"config"],[51,228,109,26],[51,229,109,27,"indent"],[51,235,109,33],[51,237,110,6,"depth"],[51,242,110,11],[51,244,111,6,"refs"],[51,248,111,10],[51,250,112,6,"printer"],[51,257,112,13],[51,258,113,5],[51,260,114,4,"config"],[51,266,114,10],[51,268,115,4,"indentation"],[51,279,115,15],[51,280,116,3],[52,2,117,0],[52,3,117,1],[53,2,119,0,"exports"],[53,9,119,7],[53,10,119,8,"serialize"],[53,19,119,17],[53,22,119,20,"serialize"],[53,31,119,29],[54,2,120,0],[54,6,120,6,"plugin"],[54,12,120,12],[54,15,120,15],[55,4,121,2,"serialize"],[55,13,121,11],[55,15,121,2,"serialize"],[55,24,121,11],[56,4,122,2,"test"],[56,8,122,6],[56,10,122,2,"test"],[57,2,123,0],[57,3,123,1],[58,2,124,0],[58,6,124,4,"_default"],[58,14,124,12],[58,17,124,15,"plugin"],[58,23,124,21],[59,2,125,0,"exports"],[59,9,125,7],[59,10,125,8,"default"],[59,17,125,15],[59,20,125,18,"_default"],[59,28,125,26],[60,0,125,27]],"functionMap":{"names":["<global>","testNode","test","nodeIsText","nodeIsComment","nodeIsFragment","serialize","Array.from.map$argument_0","Array.from.reduce$argument_0"],"mappings":"AAA;iBCqB;CDkB;aEE;CFW;AGI;CHE;AIE;CJE;AKE;CLE;kBME;iBCuB,iBD;6CEI;WFG;CNkB"}},"type":"js/module"}]}