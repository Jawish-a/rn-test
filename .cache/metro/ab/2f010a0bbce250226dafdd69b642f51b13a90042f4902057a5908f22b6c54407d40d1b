{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":10199}},{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":10199}},{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":10199}},{"start":{"line":34,"column":0,"index":692},"end":{"line":34,"column":67,"index":759}},{"start":{"line":35,"column":0,"index":760},"end":{"line":35,"column":63,"index":823}},{"start":{"line":36,"column":0,"index":824},"end":{"line":36,"column":73,"index":897}},{"start":{"line":37,"column":0,"index":898},"end":{"line":37,"column":44,"index":942}},{"start":{"line":38,"column":0,"index":943},"end":{"line":38,"column":54,"index":997}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":10199}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":10199}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":10199}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":241},"end":{"line":14,"column":31,"index":272}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":273},"end":{"line":21,"column":22,"index":368}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"react-native-reanimated","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":369},"end":{"line":22,"column":54,"index":423}},{"start":{"line":89,"column":4,"index":2529},"end":{"line":89,"column":38,"index":2563}}],"key":"hLQGRybdteaZIXsECztquPSPONU="}},{"name":"../utils/DrawerPositionContext","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":692},"end":{"line":34,"column":67,"index":759}}],"key":"iITg4fFWIdsYaEHVArF6K9U4P4E="}},{"name":"../utils/DrawerStatusContext","data":{"asyncType":null,"locs":[{"start":{"line":35,"column":0,"index":760},"end":{"line":35,"column":63,"index":823}}],"key":"d3RtWpYoS3NuT2zgD2eh+be31Ws="}},{"name":"../utils/getDrawerStatusFromState","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":0,"index":824},"end":{"line":36,"column":73,"index":897}}],"key":"/9RjUzwtC6nSJKTNxr2jZuy3sIM="}},{"name":"./DrawerContent","data":{"asyncType":null,"locs":[{"start":{"line":37,"column":0,"index":898},"end":{"line":37,"column":44,"index":942}}],"key":"JAauGb5No6qpPdMtijyRT4u0chs="}},{"name":"./DrawerToggleButton","data":{"asyncType":null,"locs":[{"start":{"line":38,"column":0,"index":943},"end":{"line":38,"column":54,"index":997}}],"key":"4rHM7SxTPMuAsczVOtkNe/EP+HM="}},{"name":"./GestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":70,"column":30,"index":1951},"end":{"line":70,"column":52,"index":1973},"identifierName":"GestureHandlerRootView"},{"start":{"line":70,"column":30,"index":1951},"end":{"line":70,"column":52,"index":1973},"identifierName":"GestureHandlerRootView"}],"key":"4B0jHrYWz0C4eDQeoenxBlX3gGg="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":78,"column":4,"index":2129},"end":{"line":78,"column":32,"index":2157}},{"start":{"line":201,"column":6,"index":5801},"end":{"line":207,"column":39,"index":6027}},{"start":{"line":213,"column":6,"index":6097},"end":{"line":280,"column":29,"index":8391}},{"start":{"line":235,"column":14,"index":6825},"end":{"line":243,"column":16,"index":7122}},{"start":{"line":241,"column":30,"index":7053},"end":{"line":241,"column":63,"index":7086}},{"start":{"line":252,"column":12,"index":7328},"end":{"line":277,"column":26,"index":8336}},{"start":{"line":259,"column":14,"index":7601},"end":{"line":276,"column":23,"index":8309}},{"start":{"line":285,"column":4,"index":8420},"end":{"line":322,"column":35,"index":9828}},{"start":{"line":286,"column":6,"index":8478},"end":{"line":321,"column":8,"index":9792}},{"start":{"line":328,"column":4,"index":9921},"end":{"line":332,"column":29,"index":10120}},{"start":{"line":329,"column":6,"index":9952},"end":{"line":331,"column":30,"index":10090}},{"start":{"line":330,"column":8,"index":10007},"end":{"line":330,"column":60,"index":10059}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./legacy/Drawer","data":{"asyncType":null,"locs":[{"start":{"line":98,"column":6,"index":2994},"end":{"line":98,"column":32,"index":3020}}],"key":"HYuO009QIiMLqf4HhyA5TcEtvBk="}},{"name":"./modern/Drawer","data":{"asyncType":null,"locs":[{"start":{"line":99,"column":6,"index":3035},"end":{"line":99,"column":32,"index":3061}}],"key":"GYC4q9rarF2HEvW5XrKU45QyYGI="}},{"name":"react-native-safe-area-context","data":{"asyncType":null,"locs":[{"start":{"line":124,"column":21,"index":3869},"end":{"line":124,"column":37,"index":3885},"identifierName":"useSafeAreaFrame"}],"key":"FOfe6gBabL/LiCfqhKz07vC4AgU="}},{"name":"@react-navigation/native","data":{"asyncType":null,"locs":[{"start":{"line":126,"column":21,"index":3911},"end":{"line":126,"column":29,"index":3919},"identifierName":"useTheme"},{"start":{"line":132,"column":9,"index":4069},"end":{"line":132,"column":22,"index":4082},"identifierName":"DrawerActions"},{"start":{"line":139,"column":9,"index":4251},"end":{"line":139,"column":22,"index":4264},"identifierName":"DrawerActions"}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}},{"name":"./ScreenFallback","data":{"asyncType":null,"locs":[{"start":{"line":213,"column":7,"index":6098},"end":{"line":213,"column":27,"index":6118}},{"start":{"line":252,"column":13,"index":7329},"end":{"line":252,"column":24,"index":7340}}],"key":"rEdAAiF8GyV9UuZqnZFj8awmJvM="}},{"name":"@react-navigation/elements","data":{"asyncType":null,"locs":[{"start":{"line":235,"column":15,"index":6826},"end":{"line":235,"column":21,"index":6832}},{"start":{"line":238,"column":23,"index":6917},"end":{"line":238,"column":37,"index":6931},"identifierName":"getHeaderTitle"},{"start":{"line":259,"column":15,"index":7602},"end":{"line":259,"column":21,"index":7608}},{"start":{"line":328,"column":5,"index":9922},"end":{"line":328,"column":27,"index":9944}}],"key":"XzRQpoy1C31Mfpu7inWeyRdDP4k="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerView;\n  var _objectWithoutProperties2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n  var Reanimated = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react-native-reanimated\"));\n  var _DrawerPositionContext = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"../utils/DrawerPositionContext\"));\n  var _DrawerStatusContext = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[8], \"../utils/DrawerStatusContext\"));\n  var _getDrawerStatusFromState = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[9], \"../utils/getDrawerStatusFromState\"));\n  var _DrawerContent = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[10], \"./DrawerContent\"));\n  var _DrawerToggleButton = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[11], \"./DrawerToggleButton\"));\n  var _excluded = [\"navigation\"];\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  var getDefaultDrawerWidth = function getDefaultDrawerWidth(_ref) {\n    var height = _ref.height,\n      width = _ref.width;\n    var smallerAxisSize = Math.min(height, width);\n    var isLandscape = width > height;\n    var isTablet = smallerAxisSize >= 600;\n    var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    var maxWidth = isTablet ? 320 : 280;\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  };\n  var GestureHandlerWrapper = _$$_REQUIRE(_dependencyMap[12], \"./GestureHandler\").GestureHandlerRootView != null ? _$$_REQUIRE(_dependencyMap[12], \"./GestureHandler\").GestureHandlerRootView : _reactNative.View;\n  function DrawerViewBase(_ref2) {\n    var state = _ref2.state,\n      navigation = _ref2.navigation,\n      descriptors = _ref2.descriptors,\n      defaultStatus = _ref2.defaultStatus,\n      _ref2$drawerContent = _ref2.drawerContent,\n      drawerContent = _ref2$drawerContent === void 0 ? function (props) {\n        return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_DrawerContent.default, Object.assign({}, props));\n      } : _ref2$drawerContent,\n      _ref2$detachInactiveS = _ref2.detachInactiveScreens,\n      detachInactiveScreens = _ref2$detachInactiveS === void 0 ? _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' : _ref2$detachInactiveS,\n      _ref2$useLegacyImplem = _ref2.useLegacyImplementation,\n      useLegacyImplementation = _ref2$useLegacyImplem === void 0 ? !(Reanimated.isConfigured != null && Reanimated.isConfigured()) : _ref2$useLegacyImplem;\n    var legacyImplemenationNotAvailable = _$$_REQUIRE(_dependencyMap[6], \"react-native-reanimated\").abs === undefined;\n    if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n      throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');\n    }\n    var Drawer = useLegacyImplementation ? _$$_REQUIRE(_dependencyMap[14], \"./legacy/Drawer\").default : _$$_REQUIRE(_dependencyMap[15], \"./modern/Drawer\").default;\n    var focusedRouteKey = state.routes[state.index].key;\n    var _descriptors$focusedR = descriptors[focusedRouteKey].options,\n      _descriptors$focusedR2 = _descriptors$focusedR.drawerHideStatusBarOnOpen,\n      drawerHideStatusBarOnOpen = _descriptors$focusedR2 === void 0 ? false : _descriptors$focusedR2,\n      _descriptors$focusedR3 = _descriptors$focusedR.drawerPosition,\n      drawerPosition = _descriptors$focusedR3 === void 0 ? _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left' : _descriptors$focusedR3,\n      _descriptors$focusedR4 = _descriptors$focusedR.drawerStatusBarAnimation,\n      drawerStatusBarAnimation = _descriptors$focusedR4 === void 0 ? 'slide' : _descriptors$focusedR4,\n      drawerStyle = _descriptors$focusedR.drawerStyle,\n      _descriptors$focusedR5 = _descriptors$focusedR.drawerType,\n      drawerType = _descriptors$focusedR5 === void 0 ? _reactNative.Platform.select({\n        ios: 'slide',\n        default: 'front'\n      }) : _descriptors$focusedR5,\n      gestureHandlerProps = _descriptors$focusedR.gestureHandlerProps,\n      _descriptors$focusedR6 = _descriptors$focusedR.keyboardDismissMode,\n      keyboardDismissMode = _descriptors$focusedR6 === void 0 ? 'on-drag' : _descriptors$focusedR6,\n      _descriptors$focusedR7 = _descriptors$focusedR.overlayColor,\n      overlayColor = _descriptors$focusedR7 === void 0 ? 'rgba(0, 0, 0, 0.5)' : _descriptors$focusedR7,\n      _descriptors$focusedR8 = _descriptors$focusedR.swipeEdgeWidth,\n      swipeEdgeWidth = _descriptors$focusedR8 === void 0 ? 32 : _descriptors$focusedR8,\n      _descriptors$focusedR9 = _descriptors$focusedR.swipeEnabled,\n      swipeEnabled = _descriptors$focusedR9 === void 0 ? _reactNative.Platform.OS !== 'web' && _reactNative.Platform.OS !== 'windows' && _reactNative.Platform.OS !== 'macos' : _descriptors$focusedR9,\n      _descriptors$focusedR10 = _descriptors$focusedR.swipeMinDistance,\n      swipeMinDistance = _descriptors$focusedR10 === void 0 ? 60 : _descriptors$focusedR10;\n    var _React$useState = React.useState([focusedRouteKey]),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n    if (!loaded.includes(focusedRouteKey)) {\n      setLoaded([].concat((0, _toConsumableArray2.default)(loaded), [focusedRouteKey]));\n    }\n    var dimensions = (0, _$$_REQUIRE(_dependencyMap[16], \"react-native-safe-area-context\").useSafeAreaFrame)();\n    var _useTheme = (0, _$$_REQUIRE(_dependencyMap[17], \"@react-navigation/native\").useTheme)(),\n      colors = _useTheme.colors;\n    var drawerStatus = (0, _getDrawerStatusFromState.default)(state);\n    var handleDrawerOpen = React.useCallback(function () {\n      navigation.dispatch(Object.assign({}, _$$_REQUIRE(_dependencyMap[17], \"@react-navigation/native\").DrawerActions.openDrawer(), {\n        target: state.key\n      }));\n    }, [navigation, state.key]);\n    var handleDrawerClose = React.useCallback(function () {\n      navigation.dispatch(Object.assign({}, _$$_REQUIRE(_dependencyMap[17], \"@react-navigation/native\").DrawerActions.closeDrawer(), {\n        target: state.key\n      }));\n    }, [navigation, state.key]);\n    React.useEffect(function () {\n      if (drawerStatus === defaultStatus || drawerType === 'permanent') {\n        return;\n      }\n      var handleHardwareBack = function handleHardwareBack() {\n        if (!navigation.isFocused()) {\n          return false;\n        }\n        if (defaultStatus === 'open') {\n          handleDrawerOpen();\n        } else {\n          handleDrawerClose();\n        }\n        return true;\n      };\n      var handleEscape = function handleEscape(e) {\n        if (e.key === 'Escape') {\n          handleHardwareBack();\n        }\n      };\n      var subscription = _reactNative.BackHandler.addEventListener('hardwareBackPress', handleHardwareBack);\n      if (_reactNative.Platform.OS === 'web') {\n        var _document, _document$body;\n        (_document = document) == null ? void 0 : (_document$body = _document.body) == null ? void 0 : _document$body.addEventListener == null ? void 0 : _document$body.addEventListener('keyup', handleEscape);\n      }\n      return function () {\n        subscription.remove();\n        if (_reactNative.Platform.OS === 'web') {\n          var _document2, _document2$body;\n          (_document2 = document) == null ? void 0 : (_document2$body = _document2.body) == null ? void 0 : _document2$body.removeEventListener == null ? void 0 : _document2$body.removeEventListener('keyup', handleEscape);\n        }\n      };\n    }, [defaultStatus, drawerStatus, drawerType, handleDrawerClose, handleDrawerOpen, navigation]);\n    var renderDrawerContent = function renderDrawerContent() {\n      return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_DrawerPositionContext.default.Provider, {\n        value: drawerPosition,\n        children: drawerContent({\n          state: state,\n          navigation: navigation,\n          descriptors: descriptors\n        })\n      });\n    };\n    var renderSceneContent = function renderSceneContent() {\n      return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[18], \"./ScreenFallback\").MaybeScreenContainer, {\n        enabled: detachInactiveScreens,\n        hasTwoStates: true,\n        style: styles.content,\n        children: state.routes.map(function (route, index) {\n          var descriptor = descriptors[route.key];\n          var _descriptor$options = descriptor.options,\n            _descriptor$options$l = _descriptor$options.lazy,\n            lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n            unmountOnBlur = _descriptor$options.unmountOnBlur;\n          var isFocused = state.index === index;\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            return null;\n          }\n          var _descriptor$options2 = descriptor.options,\n            freezeOnBlur = _descriptor$options2.freezeOnBlur,\n            _descriptor$options2$ = _descriptor$options2.header,\n            header = _descriptor$options2$ === void 0 ? function (_ref3) {\n              var _options$headerLeft;\n              var layout = _ref3.layout,\n                options = _ref3.options;\n              return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[19], \"@react-navigation/elements\").Header, Object.assign({}, options, {\n                layout: layout,\n                title: (0, _$$_REQUIRE(_dependencyMap[19], \"@react-navigation/elements\").getHeaderTitle)(options, route.name),\n                headerLeft: (_options$headerLeft = options.headerLeft) != null ? _options$headerLeft : function (props) {\n                  return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_DrawerToggleButton.default, Object.assign({}, props));\n                }\n              }));\n            } : _descriptor$options2$,\n            headerShown = _descriptor$options2.headerShown,\n            headerStatusBarHeight = _descriptor$options2.headerStatusBarHeight,\n            headerTransparent = _descriptor$options2.headerTransparent,\n            sceneContainerStyle = _descriptor$options2.sceneContainerStyle;\n          return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[18], \"./ScreenFallback\").MaybeScreen, {\n            style: [_reactNative.StyleSheet.absoluteFill, {\n              zIndex: isFocused ? 0 : -1\n            }],\n            visible: isFocused,\n            enabled: detachInactiveScreens,\n            freezeOnBlur: freezeOnBlur,\n            children: (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[19], \"@react-navigation/elements\").Screen, {\n              focused: isFocused,\n              route: descriptor.route,\n              navigation: descriptor.navigation,\n              headerShown: headerShown,\n              headerStatusBarHeight: headerStatusBarHeight,\n              headerTransparent: headerTransparent,\n              header: header({\n                layout: dimensions,\n                route: descriptor.route,\n                navigation: descriptor.navigation,\n                options: descriptor.options\n              }),\n              style: sceneContainerStyle,\n              children: descriptor.render()\n            })\n          }, route.key);\n        })\n      });\n    };\n    return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_DrawerStatusContext.default.Provider, {\n      value: drawerStatus,\n      children: (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(Drawer, {\n        open: drawerStatus !== 'closed',\n        onOpen: handleDrawerOpen,\n        onClose: handleDrawerClose,\n        gestureHandlerProps: gestureHandlerProps,\n        swipeEnabled: swipeEnabled,\n        swipeEdgeWidth: swipeEdgeWidth,\n        swipeVelocityThreshold: 500,\n        swipeDistanceThreshold: swipeMinDistance,\n        hideStatusBarOnOpen: drawerHideStatusBarOnOpen,\n        statusBarAnimation: drawerStatusBarAnimation,\n        keyboardDismissMode: keyboardDismissMode,\n        drawerType: drawerType,\n        drawerPosition: drawerPosition,\n        drawerStyle: [{\n          width: getDefaultDrawerWidth(dimensions),\n          backgroundColor: colors.card\n        }, drawerType === 'permanent' && (drawerPosition === 'left' ? {\n          borderRightColor: colors.border,\n          borderRightWidth: _reactNative.StyleSheet.hairlineWidth\n        } : {\n          borderLeftColor: colors.border,\n          borderLeftWidth: _reactNative.StyleSheet.hairlineWidth\n        }), drawerStyle],\n        overlayStyle: {\n          backgroundColor: overlayColor\n        },\n        renderDrawerContent: renderDrawerContent,\n        renderSceneContent: renderSceneContent,\n        dimensions: dimensions\n      })\n    });\n  }\n  function DrawerView(_ref4) {\n    var navigation = _ref4.navigation,\n      rest = (0, _objectWithoutProperties2.default)(_ref4, _excluded);\n    return (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[19], \"@react-navigation/elements\").SafeAreaProviderCompat, {\n      children: (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(GestureHandlerWrapper, {\n        style: styles.content,\n        children: (0, _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\").jsx)(DrawerViewBase, Object.assign({\n          navigation: navigation\n        }, rest))\n      })\n    });\n  }\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      flex: 1\n    }\n  });\n});","lineCount":254,"map":[[9,2,14,0],[10,2,15,0],[11,2,22,0],[12,2,34,0],[13,2,35,0],[14,2,36,0],[15,2,37,0],[16,2,38,0],[17,2,38,54],[18,2,38,54],[19,2,38,54],[20,2,49,0],[20,6,49,6,"getDefaultDrawerWidth"],[20,27,49,27],[20,30,49,30],[20,39,49,6,"getDefaultDrawerWidth"],[20,60,49,27],[20,67,55,6],[21,4,55,6],[21,8,50,2,"height"],[21,14,50,8],[21,22,50,2,"height"],[21,28,50,8],[22,6,51,2,"width"],[22,11,51,7],[22,19,51,2,"width"],[22,24,51,7],[23,4,61,2],[23,8,61,8,"smallerAxisSize"],[23,23,61,23],[23,26,61,26,"Math"],[23,30,61,30],[23,31,61,31,"min"],[23,34,61,34],[23,35,61,35,"height"],[23,41,61,41],[23,43,61,43,"width"],[23,48,61,48],[23,49,61,49],[24,4,62,2],[24,8,62,8,"isLandscape"],[24,19,62,19],[24,22,62,22,"width"],[24,27,62,27],[24,30,62,30,"height"],[24,36,62,36],[25,4,63,2],[25,8,63,8,"isTablet"],[25,16,63,16],[25,19,63,19,"smallerAxisSize"],[25,34,63,34],[25,38,63,38],[25,41,63,41],[26,4,64,2],[26,8,64,8,"appBarHeight"],[26,20,64,20],[26,23,64,23,"Platform"],[26,44,64,31],[26,45,64,32,"OS"],[26,47,64,34],[26,52,64,39],[26,57,64,44],[26,60,64,48,"isLandscape"],[26,71,64,59],[26,74,64,62],[26,76,64,64],[26,79,64,67],[26,81,64,69],[26,84,64,73],[26,86,64,75],[27,4,65,2],[27,8,65,8,"maxWidth"],[27,16,65,16],[27,19,65,19,"isTablet"],[27,27,65,27],[27,30,65,30],[27,33,65,33],[27,36,65,36],[27,39,65,39],[28,4,67,2],[28,11,67,9,"Math"],[28,15,67,13],[28,16,67,14,"min"],[28,19,67,17],[28,20,67,18,"smallerAxisSize"],[28,35,67,33],[28,38,67,36,"appBarHeight"],[28,50,67,48],[28,52,67,50,"maxWidth"],[28,60,67,58],[28,61,67,59],[29,2,68,0],[29,3,68,1],[30,2,70,0],[30,6,70,6,"GestureHandlerWrapper"],[30,27,70,27],[30,30,70,30,"GestureHandlerRootView"],[30,104,70,52],[30,115,70,30,"GestureHandlerRootView"],[30,189,70,52],[30,192,70,56,"View"],[30,209,70,60],[31,2,72,0],[31,11,72,9,"DrawerViewBase"],[31,25,72,23],[31,33,86,10],[32,4,86,10],[32,8,73,2,"state"],[32,13,73,7],[32,22,73,2,"state"],[32,27,73,7],[33,6,74,2,"navigation"],[33,16,74,12],[33,25,74,2,"navigation"],[33,35,74,12],[34,6,75,2,"descriptors"],[34,17,75,13],[34,26,75,2,"descriptors"],[34,37,75,13],[35,6,76,2,"defaultStatus"],[35,19,76,15],[35,28,76,2,"defaultStatus"],[35,41,76,15],[36,6,76,15],[36,34,77,2,"drawerContent"],[36,47,77,15],[37,6,77,2,"drawerContent"],[37,19,77,15],[37,55,77,18],[37,65,77,19,"props"],[37,70,77,53],[38,8,77,53],[38,15,78,4],[38,77,78,5],[38,99,78,18],[38,119,78,23,"props"],[38,124,78,28],[38,126,78,32],[39,6,78,32],[39,7,79,3],[40,6,79,3],[40,36,80,2,"detachInactiveScreens"],[40,57,80,23],[41,6,80,2,"detachInactiveScreens"],[41,27,80,23],[41,65,80,26,"Platform"],[41,86,80,34],[41,87,80,35,"OS"],[41,89,80,37],[41,94,80,42],[41,99,80,47],[41,103,81,4,"Platform"],[41,124,81,12],[41,125,81,13,"OS"],[41,127,81,15],[41,132,81,20],[41,141,81,29],[41,145,82,4,"Platform"],[41,166,82,12],[41,167,82,13,"OS"],[41,169,82,15],[41,174,82,20],[41,179,82,25],[42,6,82,25],[42,36,85,2,"useLegacyImplementation"],[42,59,85,25],[43,6,85,2,"useLegacyImplementation"],[43,29,85,25],[43,67,85,28],[43,69,85,29,"Reanimated"],[43,79,85,39],[43,80,85,40,"isConfigured"],[43,92,85,52],[43,104,85,29,"Reanimated"],[43,114,85,39],[43,115,85,40,"isConfigured"],[43,127,85,52],[43,129,85,56],[44,4,88,2],[44,8,88,8,"legacyImplemenationNotAvailable"],[44,39,88,39],[44,42,89,4,"require"],[44,53,89,11],[44,99,89,38],[44,100,89,39,"abs"],[44,103,89,42],[44,108,89,47,"undefined"],[44,117,89,56],[45,4,91,2],[45,8,91,6,"useLegacyImplementation"],[45,31,91,29],[45,35,91,33,"legacyImplemenationNotAvailable"],[45,66,91,64],[45,68,91,66],[46,6,92,4],[46,12,92,10],[46,16,92,14,"Error"],[46,21,92,19],[46,22,93,6],[46,243,93,227],[46,244,94,5],[47,4,95,2],[48,4,97,2],[48,8,97,8,"Drawer"],[48,14,97,48],[48,17,97,51,"useLegacyImplementation"],[48,40,97,74],[48,43,98,6,"require"],[48,54,98,13],[48,93,98,32],[48,94,98,33,"default"],[48,101,98,40],[48,104,99,6,"require"],[48,115,99,13],[48,154,99,32],[48,155,99,33,"default"],[48,162,99,40],[49,4,101,2],[49,8,101,8,"focusedRouteKey"],[49,23,101,23],[49,26,101,26,"state"],[49,31,101,31],[49,32,101,32,"routes"],[49,38,101,38],[49,39,101,39,"state"],[49,44,101,44],[49,45,101,45,"index"],[49,50,101,50],[49,51,101,51],[49,52,101,52,"key"],[49,55,101,55],[50,4,102,2],[50,32,116,6,"descriptors"],[50,43,116,17],[50,44,116,18,"focusedRouteKey"],[50,59,116,33],[50,60,116,34],[50,61,116,35,"options"],[50,68,116,42],[51,6,116,42],[51,53,103,4,"drawerHideStatusBarOnOpen"],[51,78,103,29],[52,6,103,4,"drawerHideStatusBarOnOpen"],[52,31,103,29],[52,70,103,32],[52,75,103,37],[53,6,103,37],[53,53,104,4,"drawerPosition"],[53,67,104,18],[54,6,104,4,"drawerPosition"],[54,20,104,18],[54,59,104,21,"I18nManager"],[54,83,104,32],[54,84,104,33,"getConstants"],[54,96,104,45],[54,98,104,47],[54,99,104,48,"isRTL"],[54,104,104,53],[54,107,104,56],[54,114,104,63],[54,117,104,66],[54,123,104,72],[55,6,104,72],[55,53,105,4,"drawerStatusBarAnimation"],[55,77,105,28],[56,6,105,4,"drawerStatusBarAnimation"],[56,30,105,28],[56,69,105,31],[56,76,105,38],[57,6,106,4,"drawerStyle"],[57,17,106,15],[57,42,106,4,"drawerStyle"],[57,53,106,15],[58,6,106,15],[58,53,107,4,"drawerType"],[58,63,107,14],[59,6,107,4,"drawerType"],[59,16,107,14],[59,55,107,17,"Platform"],[59,76,107,25],[59,77,107,26,"select"],[59,83,107,32],[59,84,107,33],[60,8,107,35,"ios"],[60,11,107,38],[60,13,107,40],[60,20,107,47],[61,8,107,49,"default"],[61,15,107,56],[61,17,107,58],[62,6,107,66],[62,7,107,67],[62,8,107,68],[63,6,108,4,"gestureHandlerProps"],[63,25,108,23],[63,50,108,4,"gestureHandlerProps"],[63,69,108,23],[64,6,108,23],[64,53,109,4,"keyboardDismissMode"],[64,72,109,23],[65,6,109,4,"keyboardDismissMode"],[65,25,109,23],[65,64,109,26],[65,73,109,35],[66,6,109,35],[66,53,110,4,"overlayColor"],[66,65,110,16],[67,6,110,4,"overlayColor"],[67,18,110,16],[67,57,110,19],[67,77,110,39],[68,6,110,39],[68,53,111,4,"swipeEdgeWidth"],[68,67,111,18],[69,6,111,4,"swipeEdgeWidth"],[69,20,111,18],[69,59,111,21],[69,61,111,23],[70,6,111,23],[70,53,112,4,"swipeEnabled"],[70,65,112,16],[71,6,112,4,"swipeEnabled"],[71,18,112,16],[71,57,112,19,"Platform"],[71,78,112,27],[71,79,112,28,"OS"],[71,81,112,30],[71,86,112,35],[71,91,112,40],[71,95,113,6,"Platform"],[71,116,113,14],[71,117,113,15,"OS"],[71,119,113,17],[71,124,113,22],[71,133,113,31],[71,137,114,6,"Platform"],[71,158,114,14],[71,159,114,15,"OS"],[71,161,114,17],[71,166,114,22],[71,173,114,29],[72,6,114,29],[72,54,115,4,"swipeMinDistance"],[72,70,115,20],[73,6,115,4,"swipeMinDistance"],[73,22,115,20],[73,62,115,23],[73,64,115,25],[74,4,118,2],[74,26,118,30,"React"],[74,31,118,35],[74,32,118,36,"useState"],[74,40,118,44],[74,41,118,45],[74,42,118,46,"focusedRouteKey"],[74,57,118,61],[74,58,118,62],[74,59,118,63],[75,6,118,63],[76,6,118,9,"loaded"],[76,12,118,15],[77,6,118,17,"setLoaded"],[77,15,118,26],[78,4,120,2],[78,8,120,6],[78,9,120,7,"loaded"],[78,15,120,13],[78,16,120,14,"includes"],[78,24,120,22],[78,25,120,23,"focusedRouteKey"],[78,40,120,38],[78,41,120,39],[78,43,120,41],[79,6,121,4,"setLoaded"],[79,15,121,13],[79,59,121,18,"loaded"],[79,65,121,24],[79,69,121,26,"focusedRouteKey"],[79,84,121,41],[79,87,121,43],[80,4,122,2],[81,4,124,2],[81,8,124,8,"dimensions"],[81,18,124,18],[81,21,124,21],[81,25,124,21,"useSafeAreaFrame"],[81,107,124,37],[81,110,124,39],[82,4,126,2],[82,20,126,21],[82,24,126,21,"useTheme"],[82,92,126,29],[82,95,126,31],[83,6,126,10,"colors"],[83,12,126,16],[83,25,126,10,"colors"],[83,31,126,16],[84,4,128,2],[84,8,128,8,"drawerStatus"],[84,20,128,20],[84,23,128,23],[84,27,128,23,"getDrawerStatusFromState"],[84,60,128,47],[84,62,128,48,"state"],[84,67,128,53],[84,68,128,54],[85,4,130,2],[85,8,130,8,"handleDrawerOpen"],[85,24,130,24],[85,27,130,27,"React"],[85,32,130,32],[85,33,130,33,"useCallback"],[85,44,130,44],[85,45,130,45],[85,57,130,51],[86,6,131,4,"navigation"],[86,16,131,14],[86,17,131,15,"dispatch"],[86,25,131,23],[86,44,132,9,"DrawerActions"],[86,117,132,22],[86,118,132,23,"openDrawer"],[86,128,132,33],[86,130,132,35],[87,8,133,6,"target"],[87,14,133,12],[87,16,133,14,"state"],[87,21,133,19],[87,22,133,20,"key"],[88,6,133,23],[88,9,134,6],[89,4,135,2],[89,5,135,3],[89,7,135,5],[89,8,135,6,"navigation"],[89,18,135,16],[89,20,135,18,"state"],[89,25,135,23],[89,26,135,24,"key"],[89,29,135,27],[89,30,135,28],[89,31,135,29],[90,4,137,2],[90,8,137,8,"handleDrawerClose"],[90,25,137,25],[90,28,137,28,"React"],[90,33,137,33],[90,34,137,34,"useCallback"],[90,45,137,45],[90,46,137,46],[90,58,137,52],[91,6,138,4,"navigation"],[91,16,138,14],[91,17,138,15,"dispatch"],[91,25,138,23],[91,44,139,9,"DrawerActions"],[91,117,139,22],[91,118,139,23,"closeDrawer"],[91,129,139,34],[91,131,139,36],[92,8,140,6,"target"],[92,14,140,12],[92,16,140,14,"state"],[92,21,140,19],[92,22,140,20,"key"],[93,6,140,23],[93,9,141,6],[94,4,142,2],[94,5,142,3],[94,7,142,5],[94,8,142,6,"navigation"],[94,18,142,16],[94,20,142,18,"state"],[94,25,142,23],[94,26,142,24,"key"],[94,29,142,27],[94,30,142,28],[94,31,142,29],[95,4,144,2,"React"],[95,9,144,7],[95,10,144,8,"useEffect"],[95,19,144,17],[95,20,144,18],[95,32,144,24],[96,6,145,4],[96,10,145,8,"drawerStatus"],[96,22,145,20],[96,27,145,25,"defaultStatus"],[96,40,145,38],[96,44,145,42,"drawerType"],[96,54,145,52],[96,59,145,57],[96,70,145,68],[96,72,145,70],[97,8,146,6],[98,6,147,4],[99,6,149,4],[99,10,149,10,"handleHardwareBack"],[99,28,149,28],[99,31,149,31],[99,40,149,10,"handleHardwareBack"],[99,58,149,28],[99,61,149,37],[100,8,152,6],[100,12,152,10],[100,13,152,11,"navigation"],[100,23,152,21],[100,24,152,22,"isFocused"],[100,33,152,31],[100,35,152,33],[100,37,152,35],[101,10,153,8],[101,17,153,15],[101,22,153,20],[102,8,154,6],[103,8,156,6],[103,12,156,10,"defaultStatus"],[103,25,156,23],[103,30,156,28],[103,36,156,34],[103,38,156,36],[104,10,157,8,"handleDrawerOpen"],[104,26,157,24],[104,28,157,26],[105,8,158,6],[105,9,158,7],[105,15,158,13],[106,10,159,8,"handleDrawerClose"],[106,27,159,25],[106,29,159,27],[107,8,160,6],[108,8,162,6],[108,15,162,13],[108,19,162,17],[109,6,163,4],[109,7,163,5],[110,6,165,4],[110,10,165,10,"handleEscape"],[110,22,165,22],[110,25,165,25],[110,34,165,10,"handleEscape"],[110,46,165,22],[110,47,165,26,"e"],[110,48,165,42],[110,50,165,47],[111,8,166,6],[111,12,166,10,"e"],[111,13,166,11],[111,14,166,12,"key"],[111,17,166,15],[111,22,166,20],[111,30,166,28],[111,32,166,30],[112,10,167,8,"handleHardwareBack"],[112,28,167,26],[112,30,167,28],[113,8,168,6],[114,6,169,4],[114,7,169,5],[115,6,174,4],[115,10,174,10,"subscription"],[115,22,174,22],[115,25,174,25,"BackHandler"],[115,49,174,36],[115,50,174,37,"addEventListener"],[115,66,174,53],[115,67,175,6],[115,86,175,25],[115,88,176,6,"handleHardwareBack"],[115,106,176,24],[115,107,177,5],[116,6,179,4],[116,10,179,8,"Platform"],[116,31,179,16],[116,32,179,17,"OS"],[116,34,179,19],[116,39,179,24],[116,44,179,29],[116,46,179,31],[117,8,179,31],[118,8,180,6],[118,21,180,6,"document"],[118,29,180,14],[118,68,180,6],[118,78,180,16,"body"],[118,82,180,20],[118,103,180,6],[118,118,180,22,"addEventListener"],[118,134,180,38],[118,154,180,6],[118,169,180,22,"addEventListener"],[118,185,180,38],[118,186,180,41],[118,193,180,48],[118,195,180,50,"handleEscape"],[118,207,180,62],[118,208,180,63],[119,6,181,4],[120,6,183,4],[120,13,183,11],[120,25,183,17],[121,8,184,6,"subscription"],[121,20,184,18],[121,21,184,19,"remove"],[121,27,184,25],[121,29,184,27],[122,8,186,6],[122,12,186,10,"Platform"],[122,33,186,18],[122,34,186,19,"OS"],[122,36,186,21],[122,41,186,26],[122,46,186,31],[122,48,186,33],[123,10,186,33],[124,10,187,8],[124,24,187,8,"document"],[124,32,187,16],[124,72,187,8],[124,83,187,18,"body"],[124,87,187,22],[124,108,187,8],[124,124,187,24,"removeEventListener"],[124,143,187,43],[124,163,187,8],[124,179,187,24,"removeEventListener"],[124,198,187,43],[124,199,187,46],[124,206,187,53],[124,208,187,55,"handleEscape"],[124,220,187,67],[124,221,187,68],[125,8,188,6],[126,6,189,4],[126,7,189,5],[127,4,190,2],[127,5,190,3],[127,7,190,5],[127,8,191,4,"defaultStatus"],[127,21,191,17],[127,23,192,4,"drawerStatus"],[127,35,192,16],[127,37,193,4,"drawerType"],[127,47,193,14],[127,49,194,4,"handleDrawerClose"],[127,66,194,21],[127,68,195,4,"handleDrawerOpen"],[127,84,195,20],[127,86,196,4,"navigation"],[127,96,196,14],[127,97,197,3],[127,98,197,4],[128,4,199,2],[128,8,199,8,"renderDrawerContent"],[128,27,199,27],[128,30,199,30],[128,39,199,8,"renderDrawerContent"],[128,58,199,27],[128,61,199,36],[129,6,200,4],[129,13,201,6],[129,75,201,7],[129,105,201,28],[129,106,201,29],[129,114,201,37],[130,8,201,38],[130,13,201,43],[130,15,201,45,"drawerPosition"],[130,29,201,60],[131,8,201,60],[131,18,202,9,"drawerContent"],[131,31,202,22],[131,32,202,23],[132,10,203,10,"state"],[132,15,203,15],[132,17,203,17,"state"],[132,22,203,22],[133,10,204,10,"navigation"],[133,20,204,20],[133,22,204,22,"navigation"],[133,32,204,32],[134,10,205,10,"descriptors"],[134,21,205,21],[134,23,205,23,"descriptors"],[135,8,206,8],[135,9,206,9],[136,6,206,10],[136,8,207,39],[137,4,209,2],[137,5,209,3],[138,4,211,2],[138,8,211,8,"renderSceneContent"],[138,26,211,26],[138,29,211,29],[138,38,211,8,"renderSceneContent"],[138,56,211,26],[138,59,211,35],[139,6,212,4],[139,13,213,6],[139,75,213,7],[139,147,213,27],[140,8,214,8],[140,15,214,15],[140,17,214,17,"detachInactiveScreens"],[140,38,214,39],[141,8,215,8],[141,20,215,20],[142,8,216,8],[142,13,216,13],[142,15,216,15,"styles"],[142,21,216,21],[142,22,216,22,"content"],[142,29,216,30],[143,8,216,30],[143,18,218,9,"state"],[143,23,218,14],[143,24,218,15,"routes"],[143,30,218,21],[143,31,218,22,"map"],[143,34,218,25],[143,35,218,26],[143,45,218,27,"route"],[143,50,218,32],[143,52,218,34,"index"],[143,57,218,39],[143,59,218,44],[144,10,219,10],[144,14,219,16,"descriptor"],[144,24,219,26],[144,27,219,29,"descriptors"],[144,38,219,40],[144,39,219,41,"route"],[144,44,219,46],[144,45,219,47,"key"],[144,48,219,50],[144,49,219,51],[145,10,220,10],[145,36,220,49,"descriptor"],[145,46,220,59],[145,47,220,60,"options"],[145,54,220,67],[146,12,220,67],[146,56,220,18,"lazy"],[146,60,220,22],[147,12,220,18,"lazy"],[147,16,220,22],[147,54,220,25],[147,58,220,29],[148,12,220,31,"unmountOnBlur"],[148,25,220,44],[148,48,220,31,"unmountOnBlur"],[148,61,220,44],[149,10,221,10],[149,14,221,16,"isFocused"],[149,23,221,25],[149,26,221,28,"state"],[149,31,221,33],[149,32,221,34,"index"],[149,37,221,39],[149,42,221,44,"index"],[149,47,221,49],[150,10,223,10],[150,14,223,14,"unmountOnBlur"],[150,27,223,27],[150,31,223,31],[150,32,223,32,"isFocused"],[150,41,223,41],[150,43,223,43],[151,12,224,12],[151,19,224,19],[151,23,224,23],[152,10,225,10],[153,10,227,10],[153,14,227,14,"lazy"],[153,18,227,18],[153,22,227,22],[153,23,227,23,"loaded"],[153,29,227,29],[153,30,227,30,"includes"],[153,38,227,38],[153,39,227,39,"route"],[153,44,227,44],[153,45,227,45,"key"],[153,48,227,48],[153,49,227,49],[153,53,227,53],[153,54,227,54,"isFocused"],[153,63,227,63],[153,65,227,65],[154,12,229,12],[154,19,229,19],[154,23,229,23],[155,10,230,10],[156,10,232,10],[156,37,249,14,"descriptor"],[156,47,249,24],[156,48,249,25,"options"],[156,55,249,32],[157,12,233,12,"freezeOnBlur"],[157,24,233,24],[157,48,233,12,"freezeOnBlur"],[157,60,233,24],[158,12,233,24],[158,57,234,12,"header"],[158,63,234,18],[159,12,234,12,"header"],[159,18,234,18],[159,56,234,21],[160,14,234,21],[161,14,234,21],[161,18,234,24,"layout"],[161,24,234,30],[161,33,234,24,"layout"],[161,39,234,30],[162,16,234,32,"options"],[162,23,234,39],[162,32,234,32,"options"],[162,39,234,39],[163,14,234,39],[163,21,235,14],[163,83,235,15],[163,151,235,21],[163,171,236,20,"options"],[163,178,236,27],[164,16,237,16],[164,22,237,22],[164,24,237,24,"layout"],[164,30,237,31],[165,16,238,16],[165,21,238,21],[165,23,238,23],[165,27,238,23,"getHeaderTitle"],[165,103,238,37],[165,105,238,38,"options"],[165,112,238,45],[165,114,238,47,"route"],[165,119,238,52],[165,120,238,53,"name"],[165,124,238,57],[165,125,238,59],[166,16,239,16],[166,26,239,26],[166,51,240,18,"options"],[166,58,240,25],[166,59,240,26,"headerLeft"],[166,69,240,36],[166,103,241,19],[166,113,241,20,"props"],[166,118,241,25],[167,18,241,25],[167,25,241,30],[167,87,241,31],[167,114,241,49],[167,134,241,54,"props"],[167,139,241,59],[167,141,241,63],[168,16,241,63],[169,14,242,17],[169,17,243,16],[170,12,243,16],[170,13,244,13],[171,12,245,12,"headerShown"],[171,23,245,23],[171,47,245,12,"headerShown"],[171,58,245,23],[172,12,246,12,"headerStatusBarHeight"],[172,33,246,33],[172,57,246,12,"headerStatusBarHeight"],[172,78,246,33],[173,12,247,12,"headerTransparent"],[173,29,247,29],[173,53,247,12,"headerTransparent"],[173,70,247,29],[174,12,248,12,"sceneContainerStyle"],[174,31,248,31],[174,55,248,12,"sceneContainerStyle"],[174,74,248,31],[175,10,251,10],[175,17,252,12],[175,79,252,13],[175,142,252,24],[176,12,254,14],[176,17,254,19],[176,19,254,21],[176,20,254,22,"StyleSheet"],[176,43,254,32],[176,44,254,33,"absoluteFill"],[176,56,254,45],[176,58,254,47],[177,14,254,49,"zIndex"],[177,20,254,55],[177,22,254,57,"isFocused"],[177,31,254,66],[177,34,254,69],[177,35,254,70],[177,38,254,73],[177,39,254,74],[178,12,254,76],[178,13,254,77],[178,14,254,79],[179,12,255,14],[179,19,255,21],[179,21,255,23,"isFocused"],[179,30,255,33],[180,12,256,14],[180,19,256,21],[180,21,256,23,"detachInactiveScreens"],[180,42,256,45],[181,12,257,14],[181,24,257,26],[181,26,257,28,"freezeOnBlur"],[181,38,257,41],[182,12,257,41],[182,22,259,14],[182,84,259,15],[182,152,259,21],[183,14,260,16],[183,21,260,23],[183,23,260,25,"isFocused"],[183,32,260,35],[184,14,261,16],[184,19,261,21],[184,21,261,23,"descriptor"],[184,31,261,33],[184,32,261,34,"route"],[184,37,261,40],[185,14,262,16],[185,24,262,26],[185,26,262,28,"descriptor"],[185,36,262,38],[185,37,262,39,"navigation"],[185,47,262,50],[186,14,263,16],[186,25,263,27],[186,27,263,29,"headerShown"],[186,38,263,41],[187,14,264,16],[187,35,264,37],[187,37,264,39,"headerStatusBarHeight"],[187,58,264,61],[188,14,265,16],[188,31,265,33],[188,33,265,35,"headerTransparent"],[188,50,265,53],[189,14,266,16],[189,20,266,22],[189,22,266,24,"header"],[189,28,266,30],[189,29,266,31],[190,16,267,18,"layout"],[190,22,267,24],[190,24,267,26,"dimensions"],[190,34,267,36],[191,16,268,18,"route"],[191,21,268,23],[191,23,268,25,"descriptor"],[191,33,268,35],[191,34,268,36,"route"],[191,39,268,41],[192,16,269,18,"navigation"],[192,26,269,28],[192,28,270,20,"descriptor"],[192,38,270,30],[192,39,270,31,"navigation"],[192,49,270,80],[193,16,271,18,"options"],[193,23,271,25],[193,25,271,27,"descriptor"],[193,35,271,37],[193,36,271,38,"options"],[194,14,272,16],[194,15,272,17],[194,16,272,19],[195,14,273,16],[195,19,273,21],[195,21,273,23,"sceneContainerStyle"],[195,40,273,43],[196,14,273,43],[196,24,275,17,"descriptor"],[196,34,275,27],[196,35,275,28,"render"],[196,41,275,34],[197,12,275,36],[198,10,276,23],[198,13,253,19,"route"],[198,18,253,24],[198,19,253,25,"key"],[198,22,253,28],[198,23,277,26],[199,8,279,8],[199,9,279,9],[200,6,279,10],[200,8,280,29],[201,4,282,2],[201,5,282,3],[202,4,284,2],[202,11,285,4],[202,73,285,5],[202,101,285,24],[202,102,285,25],[202,110,285,33],[203,6,285,34],[203,11,285,39],[203,13,285,41,"drawerStatus"],[203,25,285,54],[204,6,285,54],[204,16,286,6],[204,78,286,7],[204,84,286,13],[205,8,287,8],[205,12,287,12],[205,14,287,14,"drawerStatus"],[205,26,287,26],[205,31,287,31],[205,39,287,40],[206,8,288,8],[206,14,288,14],[206,16,288,16,"handleDrawerOpen"],[206,32,288,33],[207,8,289,8],[207,15,289,15],[207,17,289,17,"handleDrawerClose"],[207,34,289,35],[208,8,290,8],[208,27,290,27],[208,29,290,29,"gestureHandlerProps"],[208,48,290,49],[209,8,291,8],[209,20,291,20],[209,22,291,22,"swipeEnabled"],[209,34,291,35],[210,8,292,8],[210,22,292,22],[210,24,292,24,"swipeEdgeWidth"],[210,38,292,39],[211,8,293,8],[211,30,293,30],[211,32,293,32],[211,35,293,36],[212,8,294,8],[212,30,294,30],[212,32,294,32,"swipeMinDistance"],[212,48,294,49],[213,8,295,8],[213,27,295,27],[213,29,295,29,"drawerHideStatusBarOnOpen"],[213,54,295,55],[214,8,296,8],[214,26,296,26],[214,28,296,28,"drawerStatusBarAnimation"],[214,52,296,53],[215,8,297,8],[215,27,297,27],[215,29,297,29,"keyboardDismissMode"],[215,48,297,49],[216,8,298,8],[216,18,298,18],[216,20,298,20,"drawerType"],[216,30,298,31],[217,8,299,8],[217,22,299,22],[217,24,299,24,"drawerPosition"],[217,38,299,39],[218,8,300,8],[218,19,300,19],[218,21,300,21],[218,22,301,10],[219,10,302,12,"width"],[219,15,302,17],[219,17,302,19,"getDefaultDrawerWidth"],[219,38,302,40],[219,39,302,41,"dimensions"],[219,49,302,51],[219,50,302,52],[220,10,303,12,"backgroundColor"],[220,25,303,27],[220,27,303,29,"colors"],[220,33,303,35],[220,34,303,36,"card"],[221,8,304,10],[221,9,304,11],[221,11,305,10,"drawerType"],[221,21,305,20],[221,26,305,25],[221,37,305,36],[221,42,306,13,"drawerPosition"],[221,56,306,27],[221,61,306,32],[221,67,306,38],[221,70,307,16],[222,10,308,18,"borderRightColor"],[222,26,308,34],[222,28,308,36,"colors"],[222,34,308,42],[222,35,308,43,"border"],[222,41,308,49],[223,10,309,18,"borderRightWidth"],[223,26,309,34],[223,28,309,36,"StyleSheet"],[223,51,309,46],[223,52,309,47,"hairlineWidth"],[224,8,310,16],[224,9,310,17],[224,12,311,16],[225,10,312,18,"borderLeftColor"],[225,25,312,33],[225,27,312,35,"colors"],[225,33,312,41],[225,34,312,42,"border"],[225,40,312,48],[226,10,313,18,"borderLeftWidth"],[226,25,313,33],[226,27,313,35,"StyleSheet"],[226,50,313,45],[226,51,313,46,"hairlineWidth"],[227,8,314,16],[227,9,314,17],[227,10,314,18],[227,12,315,10,"drawerStyle"],[227,23,315,21],[227,24,316,10],[228,8,317,8],[228,20,317,20],[228,22,317,22],[229,10,317,24,"backgroundColor"],[229,25,317,39],[229,27,317,41,"overlayColor"],[230,8,317,54],[230,9,317,56],[231,8,318,8],[231,27,318,27],[231,29,318,29,"renderDrawerContent"],[231,48,318,49],[232,8,319,8],[232,26,319,26],[232,28,319,28,"renderSceneContent"],[232,46,319,47],[233,8,320,8],[233,18,320,18],[233,20,320,20,"dimensions"],[234,6,320,31],[235,4,321,8],[235,6,322,35],[236,2,324,0],[237,2,326,15],[237,11,326,24,"DrawerView"],[237,21,326,34],[237,29,326,67],[238,4,326,67],[238,8,326,37,"navigation"],[238,18,326,47],[238,27,326,37,"navigation"],[238,37,326,47],[239,6,326,52,"rest"],[239,10,326,56],[240,4,327,2],[240,11,328,4],[240,73,328,5],[240,157,328,27],[241,6,328,27],[241,16,329,6],[241,78,329,7],[241,99,329,28],[242,8,329,29],[242,13,329,34],[242,15,329,36,"styles"],[242,21,329,42],[242,22,329,43,"content"],[242,29,329,51],[243,8,329,51],[243,18,330,8],[243,80,330,9],[243,94,330,23],[244,10,330,24],[244,20,330,34],[244,22,330,36,"navigation"],[245,8,330,47],[245,11,330,52,"rest"],[245,15,330,56],[246,6,330,60],[247,4,331,30],[247,6,332,29],[248,2,334,0],[249,2,336,0],[249,6,336,6,"styles"],[249,12,336,12],[249,15,336,15,"StyleSheet"],[249,38,336,25],[249,39,336,26,"create"],[249,45,336,32],[249,46,336,33],[250,4,337,2,"content"],[250,11,337,9],[250,13,337,11],[251,6,338,4,"flex"],[251,10,338,8],[251,12,338,10],[252,4,339,2],[253,2,340,0],[253,3,340,1],[253,4,340,2],[254,0,340,3]],"functionMap":{"names":["<global>","getDefaultDrawerWidth","DrawerViewBase","<anonymous>","handleDrawerOpen","handleDrawerClose","React.useEffect$argument_0","handleHardwareBack","handleEscape","renderDrawerContent","renderSceneContent","state.routes.map$argument_0","DrawerView"],"mappings":"AAA;8BCgD;CDmB;AEI;kBCK;GDE;6CEmD;GFK;8CGE;GHK;kBIE;+BCK;KDc;yBEE;KFI;WHc;KGM;GJC;8BOS;GPU;6BQE;0BCO;qBRgB;aQU;SDmC;GRG;CF0C;eYE;CZQ"}},"type":"js/module"}]}