{"dependencies":[{"name":"./utils.js","data":{"asyncType":null,"locs":[{"start":{"line":40,"column":6,"index":633},"end":{"line":40,"column":29,"index":656}},{"start":{"line":63,"column":6,"index":1030},"end":{"line":63,"column":29,"index":1053}}],"key":"03VO7/E+L2S6CYQuFHTg8eKUrwk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function createNotifyManager() {\n    var queue = [];\n    var transactions = 0;\n    var notifyFn = function notifyFn(callback) {\n      callback();\n    };\n    var batchNotifyFn = function batchNotifyFn(callback) {\n      callback();\n    };\n    var batch = function batch(callback) {\n      var result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    };\n    var schedule = function schedule(callback) {\n      if (transactions) {\n        queue.push(callback);\n      } else {\n        _$$_REQUIRE(_dependencyMap[0], \"./utils.js\").scheduleMicrotask(function () {\n          notifyFn(callback);\n        });\n      }\n    };\n    var batchCalls = function batchCalls(callback) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        schedule(function () {\n          callback.apply(void 0, args);\n        });\n      };\n    };\n    var flush = function flush() {\n      var originalQueue = queue;\n      queue = [];\n      if (originalQueue.length) {\n        _$$_REQUIRE(_dependencyMap[0], \"./utils.js\").scheduleMicrotask(function () {\n          batchNotifyFn(function () {\n            originalQueue.forEach(function (callback) {\n              notifyFn(callback);\n            });\n          });\n        });\n      }\n    };\n    var setNotifyFunction = function setNotifyFunction(fn) {\n      notifyFn = fn;\n    };\n    var setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n      batchNotifyFn = fn;\n    };\n    return {\n      batch: batch,\n      batchCalls: batchCalls,\n      schedule: schedule,\n      setNotifyFunction: setNotifyFunction,\n      setBatchNotifyFunction: setBatchNotifyFunction\n    };\n  }\n  var notifyManager = createNotifyManager();\n  exports.createNotifyManager = createNotifyManager;\n  exports.notifyManager = notifyManager;\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,3,47,"value"],[5,9,3,52],[5,11,3,54],[6,2,3,59],[6,3,3,60],[6,4,3,61],[7,2,7,0],[7,11,7,9,"createNotifyManager"],[7,30,7,28],[7,33,7,31],[8,4,8,2],[8,8,8,6,"queue"],[8,13,8,11],[8,16,8,14],[8,18,8,16],[9,4,9,2],[9,8,9,6,"transactions"],[9,20,9,18],[9,23,9,21],[9,24,9,22],[10,4,11,2],[10,8,11,6,"notifyFn"],[10,16,11,14],[10,19,11,17],[10,37,11,17,"callback"],[10,45,11,25],[10,47,11,29],[11,6,12,4,"callback"],[11,14,12,12],[11,16,12,14],[12,4,13,2],[12,5,13,3],[13,4,15,2],[13,8,15,6,"batchNotifyFn"],[13,21,15,19],[13,24,15,22],[13,47,15,22,"callback"],[13,55,15,30],[13,57,15,34],[14,6,16,4,"callback"],[14,14,16,12],[14,16,16,14],[15,4,17,2],[15,5,17,3],[16,4,19,2],[16,8,19,8,"batch"],[16,13,19,13],[16,16,19,16],[16,25,19,8,"batch"],[16,30,19,13],[16,31,19,16,"callback"],[16,39,19,24],[16,41,19,28],[17,6,20,4],[17,10,20,8,"result"],[17,16,20,14],[18,6,21,4,"transactions"],[18,18,21,16],[18,20,21,18],[19,6,23,4],[19,10,23,8],[20,8,24,6,"result"],[20,14,24,12],[20,17,24,15,"callback"],[20,25,24,23],[20,27,24,25],[21,6,25,4],[21,7,25,5],[21,16,25,14],[22,8,26,6,"transactions"],[22,20,26,18],[22,22,26,20],[23,8,28,6],[23,12,28,10],[23,13,28,11,"transactions"],[23,25,28,23],[23,27,28,25],[24,10,29,8,"flush"],[24,15,29,13],[24,17,29,15],[25,8,30,6],[26,6,31,4],[27,6,33,4],[27,13,33,11,"result"],[27,19,33,17],[28,4,34,2],[28,5,34,3],[29,4,36,2],[29,8,36,8,"schedule"],[29,16,36,16],[29,19,36,19],[29,28,36,8,"schedule"],[29,36,36,16],[29,37,36,19,"callback"],[29,45,36,27],[29,47,36,31],[30,6,37,4],[30,10,37,8,"transactions"],[30,22,37,20],[30,24,37,22],[31,8,38,6,"queue"],[31,13,38,11],[31,14,38,12,"push"],[31,18,38,16],[31,19,38,17,"callback"],[31,27,38,25],[31,28,38,26],[32,6,39,4],[32,7,39,5],[32,13,39,11],[33,8,40,6],[33,53,40,12,"scheduleMicrotask"],[33,70,40,29],[33,71,40,30],[33,83,40,36],[34,10,41,8,"notifyFn"],[34,18,41,16],[34,19,41,17,"callback"],[34,27,41,25],[34,28,41,26],[35,8,42,6],[35,9,42,7],[35,10,42,8],[36,6,43,4],[37,4,44,2],[37,5,44,3],[38,4,50,2],[38,8,50,8,"batchCalls"],[38,18,50,18],[38,21,50,21],[38,30,50,8,"batchCalls"],[38,40,50,18],[38,41,50,21,"callback"],[38,49,50,29],[38,51,50,33],[39,6,51,4],[39,13,51,11],[39,25,51,24],[40,8,51,24],[40,42,51,15,"args"],[40,46,51,19],[41,10,51,15,"args"],[41,14,51,19],[42,8,51,19],[43,8,52,6,"schedule"],[43,16,52,14],[43,17,52,15],[43,29,52,21],[44,10,53,8,"callback"],[44,18,53,16],[44,33,53,20,"args"],[44,37,53,24],[44,38,53,25],[45,8,54,6],[45,9,54,7],[45,10,54,8],[46,6,55,4],[46,7,55,5],[47,4,56,2],[47,5,56,3],[48,4,58,2],[48,8,58,8,"flush"],[48,13,58,13],[48,16,58,16],[48,25,58,8,"flush"],[48,30,58,13],[48,33,58,22],[49,6,59,4],[49,10,59,10,"originalQueue"],[49,23,59,23],[49,26,59,26,"queue"],[49,31,59,31],[50,6,60,4,"queue"],[50,11,60,9],[50,14,60,12],[50,16,60,14],[51,6,62,4],[51,10,62,8,"originalQueue"],[51,23,62,21],[51,24,62,22,"length"],[51,30,62,28],[51,32,62,30],[52,8,63,6],[52,53,63,12,"scheduleMicrotask"],[52,70,63,29],[52,71,63,30],[52,83,63,36],[53,10,64,8,"batchNotifyFn"],[53,23,64,21],[53,24,64,22],[53,36,64,28],[54,12,65,10,"originalQueue"],[54,25,65,23],[54,26,65,24,"forEach"],[54,33,65,31],[54,34,65,32],[54,44,65,32,"callback"],[54,52,65,40],[54,54,65,44],[55,14,66,12,"notifyFn"],[55,22,66,20],[55,23,66,21,"callback"],[55,31,66,29],[55,32,66,30],[56,12,67,10],[56,13,67,11],[56,14,67,12],[57,10,68,8],[57,11,68,9],[57,12,68,10],[58,8,69,6],[58,9,69,7],[58,10,69,8],[59,6,70,4],[60,4,71,2],[60,5,71,3],[61,4,78,2],[61,8,78,8,"setNotifyFunction"],[61,25,78,25],[61,28,78,28],[61,37,78,8,"setNotifyFunction"],[61,54,78,25],[61,55,78,28,"fn"],[61,57,78,30],[61,59,78,34],[62,6,79,4,"notifyFn"],[62,14,79,12],[62,17,79,15,"fn"],[62,19,79,17],[63,4,80,2],[63,5,80,3],[64,4,87,2],[64,8,87,8,"setBatchNotifyFunction"],[64,30,87,30],[64,33,87,33],[64,42,87,8,"setBatchNotifyFunction"],[64,64,87,30],[64,65,87,33,"fn"],[64,67,87,35],[64,69,87,39],[65,6,88,4,"batchNotifyFn"],[65,19,88,17],[65,22,88,20,"fn"],[65,24,88,22],[66,4,89,2],[66,5,89,3],[67,4,91,2],[67,11,91,9],[68,6,92,4,"batch"],[68,11,92,9],[68,13,92,4,"batch"],[68,18,92,9],[69,6,93,4,"batchCalls"],[69,16,93,14],[69,18,93,4,"batchCalls"],[69,28,93,14],[70,6,94,4,"schedule"],[70,14,94,12],[70,16,94,4,"schedule"],[70,24,94,12],[71,6,95,4,"setNotifyFunction"],[71,23,95,21],[71,25,95,4,"setNotifyFunction"],[71,42,95,21],[72,6,96,4,"setBatchNotifyFunction"],[72,28,96,26],[72,30,96,4,"setBatchNotifyFunction"],[73,4,97,2],[73,5,97,3],[74,2,98,0],[75,2,100,0],[75,6,100,6,"notifyManager"],[75,19,100,19],[75,22,100,22,"createNotifyManager"],[75,41,100,41],[75,43,100,43],[76,2,102,0,"exports"],[76,9,102,7],[76,10,102,8,"createNotifyManager"],[76,29,102,27],[76,32,102,30,"createNotifyManager"],[76,51,102,49],[77,2,103,0,"exports"],[77,9,103,7],[77,10,103,8,"notifyManager"],[77,23,103,21],[77,26,103,24,"notifyManager"],[77,39,103,37],[78,0,103,38]],"functionMap":{"names":["<global>","createNotifyManager","notifyFn","batchNotifyFn","batch","schedule","utils.scheduleMicrotask$argument_0","batchCalls","<anonymous>","schedule$argument_0","flush","batchNotifyFn$argument_0","originalQueue.forEach$argument_0","setNotifyFunction","setBatchNotifyFunction"],"mappings":"AAA;ACM;iBCI;GDE;sBEE;GFE;gBGE;GHe;mBIE;8BCI;ODE;GJE;qBMM;WCC;eCC;ODE;KDC;GNC;gBSE;8BJK;sBKC;gCCC;WDE;SLC;OIC;GTE;4BYO;GZE;iCaO;GbE;CDS"}},"type":"js/module"}]}