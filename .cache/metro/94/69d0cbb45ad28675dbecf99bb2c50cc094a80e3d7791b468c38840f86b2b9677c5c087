{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0,"index":101},"end":{"line":7,"column":31,"index":132}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"@react-navigation/core","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":21,"index":1684},"end":{"line":53,"column":34,"index":1697},"identifierName":"useNavigation"},{"start":{"line":54,"column":16,"index":1717},"end":{"line":54,"column":24,"index":1725},"identifierName":"useRoute"}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useScrollToTop;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = (0, _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\").useNavigation)();\n    var route = (0, _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\").useRoute)();\n    React.useEffect(function () {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(function (tab) {\n        return tab.addListener('tabPress', function (e) {\n          var isFocused = navigation.isFocused();\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n          requestAnimationFrame(function () {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return function () {\n        unsubscribers.forEach(function (unsubscribe) {\n          return unsubscribe();\n        });\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":74,"map":[[6,2,7,0],[7,2,7,31],[8,2,7,31],[9,2,22,0],[9,11,22,9,"getScrollableNode"],[9,28,22,26],[9,29,22,27,"ref"],[9,32,22,66],[9,34,22,68],[10,4,23,2],[10,8,23,6,"ref"],[10,11,23,9],[10,12,23,10,"current"],[10,19,23,17],[10,23,23,21],[10,27,23,25],[10,29,23,27],[11,6,24,4],[11,13,24,11],[11,17,24,15],[12,4,25,2],[13,4,27,2],[13,8,28,4],[13,21,28,17],[13,25,28,21,"ref"],[13,28,28,24],[13,29,28,25,"current"],[13,36,28,32],[13,40,29,4],[13,50,29,14],[13,54,29,18,"ref"],[13,57,29,21],[13,58,29,22,"current"],[13,65,29,29],[13,69,30,4],[13,85,30,20],[13,89,30,24,"ref"],[13,92,30,27],[13,93,30,28,"current"],[13,100,30,35],[13,104,31,4],[13,129,31,29],[13,133,31,33,"ref"],[13,136,31,36],[13,137,31,37,"current"],[13,144,31,44],[13,146,32,4],[14,6,34,4],[14,13,34,11,"ref"],[14,16,34,14],[14,17,34,15,"current"],[14,24,34,22],[15,4,35,2],[15,5,35,3],[15,11,35,9],[15,15,35,13],[15,35,35,33],[15,39,35,37,"ref"],[15,42,35,40],[15,43,35,41,"current"],[15,50,35,48],[15,52,35,50],[16,6,38,4],[16,13,38,11,"ref"],[16,16,38,14],[16,17,38,15,"current"],[16,24,38,22],[16,25,38,23,"getScrollResponder"],[16,43,38,41],[16,45,38,43],[17,4,39,2],[17,5,39,3],[17,11,39,9],[17,15,39,13],[17,24,39,22],[17,28,39,26,"ref"],[17,31,39,29],[17,32,39,30,"current"],[17,39,39,37],[17,41,39,39],[18,6,44,4],[18,13,44,11,"ref"],[18,16,44,14],[18,17,44,15,"current"],[18,24,44,22],[18,25,44,23,"getNode"],[18,32,44,30],[18,34,44,32],[19,4,45,2],[19,5,45,3],[19,11,45,9],[20,6,46,4],[20,13,46,11,"ref"],[20,16,46,14],[20,17,46,15,"current"],[20,24,46,22],[21,4,47,2],[22,2,48,0],[23,2,50,15],[23,11,50,24,"useScrollToTop"],[23,25,50,38],[23,26,51,2,"ref"],[23,29,51,41],[23,31,52,2],[24,4,53,2],[24,8,53,8,"navigation"],[24,18,53,18],[24,21,53,21],[24,25,53,21,"useNavigation"],[24,95,53,34],[24,98,53,36],[25,4,54,2],[25,8,54,8,"route"],[25,13,54,13],[25,16,54,16],[25,20,54,16,"useRoute"],[25,85,54,24],[25,88,54,26],[26,4,56,2,"React"],[26,9,56,7],[26,10,56,8,"useEffect"],[26,19,56,17],[26,20,56,18],[26,32,56,24],[27,6,57,4],[27,10,57,8,"tabNavigations"],[27,24,57,71],[27,27,57,74],[27,29,57,76],[28,6,58,4],[28,10,58,8,"currentNavigation"],[28,27,58,25],[28,30,58,28,"navigation"],[28,40,58,38],[29,6,62,4],[29,13,62,11,"currentNavigation"],[29,30,62,28],[29,32,62,30],[30,8,63,6],[30,12,63,10,"currentNavigation"],[30,29,63,27],[30,30,63,28,"getState"],[30,38,63,36],[30,40,63,38],[30,41,63,39,"type"],[30,45,63,43],[30,50,63,48],[30,55,63,53],[30,57,63,55],[31,10,64,8,"tabNavigations"],[31,24,64,22],[31,25,64,23,"push"],[31,29,64,27],[31,30,64,28,"currentNavigation"],[31,47,64,45],[31,48,64,46],[32,8,65,6],[33,8,67,6,"currentNavigation"],[33,25,67,23],[33,28,67,26,"currentNavigation"],[33,45,67,43],[33,46,67,44,"getParent"],[33,55,67,53],[33,57,67,55],[34,6,68,4],[35,6,70,4],[35,10,70,8,"tabNavigations"],[35,24,70,22],[35,25,70,23,"length"],[35,31,70,29],[35,36,70,34],[35,37,70,35],[35,39,70,37],[36,8,71,6],[37,6,72,4],[38,6,74,4],[38,10,74,10,"unsubscribers"],[38,23,74,23],[38,26,74,26,"tabNavigations"],[38,40,74,40],[38,41,74,41,"map"],[38,44,74,44],[38,45,74,45],[38,55,74,46,"tab"],[38,58,74,49],[38,60,74,54],[39,8,75,6],[39,15,75,13,"tab"],[39,18,75,16],[39,19,75,17,"addListener"],[39,30,75,28],[39,31,79,8],[39,41,79,18],[39,43,80,8],[39,53,80,9,"e"],[39,54,80,38],[39,56,80,43],[40,10,82,10],[40,14,82,16,"isFocused"],[40,23,82,25],[40,26,82,28,"navigation"],[40,36,82,38],[40,37,82,39,"isFocused"],[40,46,82,48],[40,48,82,50],[41,10,86,10],[41,14,86,16,"isFirst"],[41,21,86,23],[41,24,87,12,"tabNavigations"],[41,38,87,26],[41,39,87,27,"includes"],[41,47,87,35],[41,48,87,36,"navigation"],[41,58,87,46],[41,59,87,47],[41,63,88,12,"navigation"],[41,73,88,22],[41,74,88,23,"getState"],[41,82,88,31],[41,84,88,33],[41,85,88,34,"routes"],[41,91,88,40],[41,92,88,41],[41,93,88,42],[41,94,88,43],[41,95,88,44,"key"],[41,98,88,47],[41,103,88,52,"route"],[41,108,88,57],[41,109,88,58,"key"],[41,112,88,61],[42,10,92,10,"requestAnimationFrame"],[42,31,92,31],[42,32,92,32],[42,44,92,38],[43,12,93,12],[43,16,93,18,"scrollable"],[43,26,93,28],[43,29,93,31,"getScrollableNode"],[43,46,93,48],[43,47,93,49,"ref"],[43,50,93,52],[43,51,93,74],[44,12,95,12],[44,16,95,16,"isFocused"],[44,25,95,25],[44,29,95,29,"isFirst"],[44,36,95,36],[44,40,95,40,"scrollable"],[44,50,95,50],[44,54,95,54],[44,55,95,55,"e"],[44,56,95,56],[44,57,95,57,"defaultPrevented"],[44,73,95,73],[44,75,95,75],[45,14,96,14],[45,18,96,18],[45,31,96,31],[45,35,96,35,"scrollable"],[45,45,96,45],[45,47,96,47],[46,16,97,16,"scrollable"],[46,26,97,26],[46,27,97,27,"scrollToTop"],[46,38,97,38],[46,40,97,40],[47,14,98,14],[47,15,98,15],[47,21,98,21],[47,25,98,25],[47,35,98,35],[47,39,98,39,"scrollable"],[47,49,98,49],[47,51,98,51],[48,16,99,16,"scrollable"],[48,26,99,26],[48,27,99,27,"scrollTo"],[48,35,99,35],[48,36,99,36],[49,18,99,38,"y"],[49,19,99,39],[49,21,99,41],[49,22,99,42],[50,18,99,44,"animated"],[50,26,99,52],[50,28,99,54],[51,16,99,59],[51,17,99,60],[51,18,99,61],[52,14,100,14],[52,15,100,15],[52,21,100,21],[52,25,100,25],[52,41,100,41],[52,45,100,45,"scrollable"],[52,55,100,55],[52,57,100,57],[53,16,101,16,"scrollable"],[53,26,101,26],[53,27,101,27,"scrollToOffset"],[53,41,101,41],[53,42,101,42],[54,18,101,44,"offset"],[54,24,101,50],[54,26,101,52],[54,27,101,53],[55,18,101,55,"animated"],[55,26,101,63],[55,28,101,65],[56,16,101,70],[56,17,101,71],[56,18,101,72],[57,14,102,14],[57,15,102,15],[57,21,102,21],[57,25,102,25],[57,50,102,50],[57,54,102,54,"scrollable"],[57,64,102,64],[57,66,102,66],[58,16,103,16,"scrollable"],[58,26,103,26],[58,27,103,27,"scrollResponderScrollTo"],[58,50,103,50],[58,51,103,51],[59,18,103,53,"y"],[59,19,103,54],[59,21,103,56],[59,22,103,57],[60,18,103,59,"animated"],[60,26,103,67],[60,28,103,69],[61,16,103,74],[61,17,103,75],[61,18,103,76],[62,14,104,14],[63,12,105,12],[64,10,106,10],[64,11,106,11],[64,12,106,12],[65,8,107,8],[65,9,107,9],[65,10,108,7],[66,6,109,4],[66,7,109,5],[66,8,109,6],[67,6,111,4],[67,13,111,11],[67,25,111,17],[68,8,112,6,"unsubscribers"],[68,21,112,19],[68,22,112,20,"forEach"],[68,29,112,27],[68,30,112,28],[68,40,112,29,"unsubscribe"],[68,51,112,40],[69,10,112,40],[69,17,112,45,"unsubscribe"],[69,28,112,56],[69,30,112,58],[70,8,112,58],[70,10,112,59],[71,6,113,4],[71,7,113,5],[72,4,114,2],[72,5,114,3],[72,7,114,5],[72,8,114,6,"navigation"],[72,18,114,16],[72,20,114,18,"ref"],[72,23,114,21],[72,25,114,23,"route"],[72,30,114,28],[72,31,114,29,"key"],[72,34,114,32],[72,35,114,33],[72,36,114,34],[73,2,115,0],[74,0,115,1]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACqB;CD0B;eEE;kBCM;6CCkB;QCM;gCCY;WDc;SDC;KDE;WIE;4BCC,8BD;KJC;GDC;CFC"}},"type":"js/module"}]}