{"dependencies":[{"name":"./interpolation","data":{"asyncType":null,"locs":[{"start":{"line":63,"column":7,"index":1865},"end":{"line":63,"column":18,"index":1876},"identifierName":"interpolate"},{"start":{"line":67,"column":8,"index":1979},"end":{"line":67,"column":19,"index":1990},"identifierName":"interpolate"},{"start":{"line":69,"column":12,"index":2056},"end":{"line":69,"column":23,"index":2067},"identifierName":"interpolate"},{"start":{"line":70,"column":12,"index":2129},"end":{"line":70,"column":23,"index":2140},"identifierName":"interpolate"},{"start":{"line":71,"column":12,"index":2202},"end":{"line":71,"column":23,"index":2213},"identifierName":"interpolate"},{"start":{"line":37,"column":12,"index":1635},"end":{"line":37,"column":23,"index":1646},"identifierName":"interpolate"},{"start":{"line":99,"column":12,"index":2982},"end":{"line":99,"column":23,"index":2993},"identifierName":"interpolate"},{"start":{"line":100,"column":12,"index":3054},"end":{"line":100,"column":23,"index":3065},"identifierName":"interpolate"},{"start":{"line":101,"column":12,"index":3126},"end":{"line":101,"column":23,"index":3137},"identifierName":"interpolate"},{"start":{"line":102,"column":12,"index":3198},"end":{"line":102,"column":23,"index":3209},"identifierName":"interpolate"},{"start":{"line":18,"column":12,"index":606},"end":{"line":18,"column":23,"index":617},"identifierName":"interpolate"}],"key":"5KRLrhVQXaJOV32iaOfUx5s1nxg="}},{"name":"./Colors","data":{"asyncType":null,"locs":[{"start":{"line":72,"column":9,"index":2272},"end":{"line":72,"column":19,"index":2282},"identifierName":"hsvToColor"},{"start":{"line":38,"column":9,"index":1705},"end":{"line":38,"column":19,"index":1715},"identifierName":"hsvToColor"},{"start":{"line":104,"column":11,"index":3291},"end":{"line":104,"column":20,"index":3300},"identifierName":"rgbaColor"},{"start":{"line":106,"column":9,"index":3327},"end":{"line":106,"column":18,"index":3336},"identifierName":"rgbaColor"},{"start":{"line":22,"column":9,"index":735},"end":{"line":22,"column":18,"index":744},"identifierName":"rgbaColor"},{"start":{"line":132,"column":27,"index":3795},"end":{"line":132,"column":39,"index":3807},"identifierName":"processColor"},{"start":{"line":135,"column":13,"index":3949},"end":{"line":135,"column":16,"index":3952},"identifierName":"red"},{"start":{"line":136,"column":13,"index":3984},"end":{"line":136,"column":18,"index":3989},"identifierName":"green"},{"start":{"line":137,"column":13,"index":4021},"end":{"line":137,"column":17,"index":4025},"identifierName":"blue"},{"start":{"line":138,"column":13,"index":4057},"end":{"line":138,"column":20,"index":4064},"identifierName":"opacity"},{"start":{"line":8,"column":27,"index":225},"end":{"line":8,"column":39,"index":237},"identifierName":"processColor"},{"start":{"line":11,"column":13,"index":379},"end":{"line":11,"column":16,"index":382},"identifierName":"red"},{"start":{"line":12,"column":13,"index":414},"end":{"line":12,"column":18,"index":419},"identifierName":"green"},{"start":{"line":13,"column":13,"index":451},"end":{"line":13,"column":17,"index":455},"identifierName":"blue"},{"start":{"line":14,"column":13,"index":487},"end":{"line":14,"column":20,"index":494},"identifierName":"opacity"},{"start":{"line":161,"column":27,"index":4479},"end":{"line":161,"column":39,"index":4491},"identifierName":"processColor"},{"start":{"line":163,"column":32,"index":4585},"end":{"line":163,"column":40,"index":4593},"identifierName":"RGBtoHSV"},{"start":{"line":164,"column":8,"index":4603},"end":{"line":164,"column":11,"index":4606},"identifierName":"red"},{"start":{"line":165,"column":8,"index":4632},"end":{"line":165,"column":13,"index":4637},"identifierName":"green"},{"start":{"line":166,"column":8,"index":4663},"end":{"line":166,"column":12,"index":4667},"identifierName":"blue"},{"start":{"line":172,"column":13,"index":4812},"end":{"line":172,"column":20,"index":4819},"identifierName":"opacity"},{"start":{"line":8,"column":28,"index":226},"end":{"line":8,"column":40,"index":238},"identifierName":"processColor"},{"start":{"line":10,"column":32,"index":333},"end":{"line":10,"column":40,"index":341},"identifierName":"RGBtoHSV"},{"start":{"line":10,"column":41,"index":342},"end":{"line":10,"column":44,"index":345},"identifierName":"red"},{"start":{"line":10,"column":62,"index":363},"end":{"line":10,"column":67,"index":368},"identifierName":"green"},{"start":{"line":10,"column":85,"index":386},"end":{"line":10,"column":89,"index":390},"identifierName":"blue"},{"start":{"line":14,"column":13,"index":527},"end":{"line":14,"column":20,"index":534},"identifierName":"opacity"}],"key":"Ts5FNuh/ubICtDfDKOkT/F0hTbU="}},{"name":"./hook/useSharedValue","data":{"asyncType":null,"locs":[{"start":{"line":225,"column":9,"index":6068},"end":{"line":225,"column":23,"index":6082},"identifierName":"useSharedValue"}],"key":"MGihI2CfxkKmXyRJEdmpdGXG7EY="}},{"name":"./core","data":{"asyncType":null,"locs":[{"start":{"line":229,"column":11,"index":6164},"end":{"line":229,"column":22,"index":6175},"identifierName":"makeMutable"}],"key":"RjYcaDElboxfMRSohSLhnV9EO/E="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.interpolateSharableColor = exports.interpolateColor = exports.Extrapolate = exports.ColorSpace = void 0;\n  exports.useInterpolateConfig = useInterpolateConfig;\n  var Extrapolate = {\n    EXTEND: 'extend',\n    CLAMP: 'clamp',\n    IDENTITY: 'identity'\n  };\n  exports.Extrapolate = Extrapolate;\n  var _worklet_6906798994928_init_data = {\n    code: \"function anonymous(value, inputRange, colors, options) {\\n  const {\\n    interpolate,\\n    Extrapolate,\\n    hsvToColor\\n  } = this._closure;\\n  let h = 0;\\n  const {\\n    useCorrectedHSVInterpolation = true\\n  } = options;\\n  if (useCorrectedHSVInterpolation) {\\n    const correctedInputRange = [inputRange[0]];\\n    const originalH = colors.h;\\n    const correctedH = [originalH[0]];\\n    for (let i = 1; i < originalH.length; ++i) {\\n      const d = originalH[i] - originalH[i - 1];\\n      if (originalH[i] > originalH[i - 1] && d > 0.5) {\\n        correctedInputRange.push(inputRange[i]);\\n        correctedInputRange.push(inputRange[i] + 0.00001);\\n        correctedH.push(originalH[i] - 1);\\n        correctedH.push(originalH[i]);\\n      } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\\n        correctedInputRange.push(inputRange[i]);\\n        correctedInputRange.push(inputRange[i] + 0.00001);\\n        correctedH.push(originalH[i] + 1);\\n        correctedH.push(originalH[i]);\\n      } else {\\n        correctedInputRange.push(inputRange[i]);\\n        correctedH.push(originalH[i]);\\n      }\\n    }\\n    h = (interpolate(value, correctedInputRange, correctedH, Extrapolate.CLAMP) + 1) % 1;\\n  } else {\\n    h = interpolate(value, inputRange, colors.h, Extrapolate.CLAMP);\\n  }\\n  const s = interpolate(value, inputRange, colors.s, Extrapolate.CLAMP);\\n  const v = interpolate(value, inputRange, colors.v, Extrapolate.CLAMP);\\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\\n  return hsvToColor(h, s, v, a);\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA0B6B,SAC3BA,SACAC,kBACsB,EACtBC,QAA6BA,OAC1B;EAAA;IAAA;IAAA;IAAA;EAAA;EAEH,IAAIC,CAAC,GAAG,CAAC;EACT,MAAM;IAAEC,4BAA4B,GAAG;EAAK,CAAC,GAAGF,OAAO;EACvD,IAAIE,4BAA4B,EAAE;IAKhC,MAAMC,mBAAmB,GAAG,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMK,SAAS,GAAGC,MAAM,CAACJ,CAAC;IAC1B,MAAMK,UAAU,GAAG,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC;IAEjC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACI,MAAM,EAAE,EAAED,CAAC,EAAE;MACzC,MAAME,CAAC,GAAGL,SAAS,CAACG,CAAC,CAAC,GAAGH,SAAS,CAACG,CAAC,GAAG,CAAC,CAAC;MACzC,IAAIH,SAAS,CAACG,CAAC,CAAC,GAAGH,SAAS,CAACG,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAG,GAAG,EAAE;QAC9CN,mBAAmB,CAACO,IAAI,CAACX,UAAU,CAACQ,CAAC,CAAC,CAAC;QACvCJ,mBAAmB,CAACO,IAAI,CAACX,UAAU,CAACQ,CAAC,CAAC,GAAG,OAAO,CAAC;QACjDD,UAAU,CAACI,IAAI,CAACN,SAAS,CAACG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjCD,UAAU,CAACI,IAAI,CAACN,SAAS,CAACG,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIH,SAAS,CAACG,CAAC,CAAC,GAAGH,SAAS,CAACG,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAG,CAAC,GAAG,EAAE;QACtDN,mBAAmB,CAACO,IAAI,CAACX,UAAU,CAACQ,CAAC,CAAC,CAAC;QACvCJ,mBAAmB,CAACO,IAAI,CAACX,UAAU,CAACQ,CAAC,CAAC,GAAG,OAAO,CAAC;QACjDD,UAAU,CAACI,IAAI,CAACN,SAAS,CAACG,CAAC,CAAC,GAAG,CAAC,CAAC;QACjCD,UAAU,CAACI,IAAI,CAACN,SAAS,CAACG,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLJ,mBAAmB,CAACO,IAAI,CAACX,UAAU,CAACQ,CAAC,CAAC,CAAC;QACvCD,UAAU,CAACI,IAAI,CAACN,SAAS,CAACG,CAAC,CAAC,CAAC;MAC/B;IACF;IACAN,CAAC,GACC,CAACU,WAAW,CAACb,KAAK,EAAEK,mBAAmB,EAAEG,UAAU,EAAEM,WAAW,CAACC,KAAK,CAAC,GACrE,CAAC,IACH,CAAC;EACL,CAAC,MAAM;IACLZ,CAAC,GAAGU,WAAW,CAACb,KAAK,EAAEC,UAAU,EAAEM,MAAM,CAACJ,CAAC,EAAEW,WAAW,CAACC,KAAK,CAAC;EACjE;EACA,MAAMC,CAAC,GAAGH,WAAW,CAACb,KAAK,EAAEC,UAAU,EAAEM,MAAM,CAACS,CAAC,EAAEF,WAAW,CAACC,KAAK,CAAC;EACrE,MAAME,CAAC,GAAGJ,WAAW,CAACb,KAAK,EAAEC,UAAU,EAAEM,MAAM,CAACU,CAAC,EAAEH,WAAW,CAACC,KAAK,CAAC;EACrE,MAAMG,CAAC,GAAGL,WAAW,CAACb,KAAK,EAAEC,UAAU,EAAEM,MAAM,CAACW,CAAC,EAAEJ,WAAW,CAACC,KAAK,CAAC;EACrE,OAAOI,UAAU,CAAChB,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AAC/B\\\",\\\"names\\\":[\\\"value\\\",\\\"inputRange\\\",\\\"options\\\",\\\"h\\\",\\\"useCorrectedHSVInterpolation\\\",\\\"correctedInputRange\\\",\\\"originalH\\\",\\\"colors\\\",\\\"correctedH\\\",\\\"i\\\",\\\"length\\\",\\\"d\\\",\\\"push\\\",\\\"interpolate\\\",\\\"Extrapolate\\\",\\\"CLAMP\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\",\\\"hsvToColor\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var interpolateColorsHSV = function () {\n    var _e = [new Error(), -4, -20];\n    var _f = function _f(value, inputRange, colors, options) {\n      var h = 0;\n      var _options$useCorrected = options.useCorrectedHSVInterpolation,\n        useCorrectedHSVInterpolation = _options$useCorrected === void 0 ? true : _options$useCorrected;\n      if (useCorrectedHSVInterpolation) {\n        var correctedInputRange = [inputRange[0]];\n        var originalH = colors.h;\n        var correctedH = [originalH[0]];\n        for (var i = 1; i < originalH.length; ++i) {\n          var d = originalH[i] - originalH[i - 1];\n          if (originalH[i] > originalH[i - 1] && d > 0.5) {\n            correctedInputRange.push(inputRange[i]);\n            correctedInputRange.push(inputRange[i] + 0.00001);\n            correctedH.push(originalH[i] - 1);\n            correctedH.push(originalH[i]);\n          } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n            correctedInputRange.push(inputRange[i]);\n            correctedInputRange.push(inputRange[i] + 0.00001);\n            correctedH.push(originalH[i] + 1);\n            correctedH.push(originalH[i]);\n          } else {\n            correctedInputRange.push(inputRange[i]);\n            correctedH.push(originalH[i]);\n          }\n        }\n        h = ((0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, correctedInputRange, correctedH, Extrapolate.CLAMP) + 1) % 1;\n      } else {\n        h = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, colors.h, Extrapolate.CLAMP);\n      }\n      var s = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, colors.s, Extrapolate.CLAMP);\n      var v = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, colors.v, Extrapolate.CLAMP);\n      var a = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, colors.a, Extrapolate.CLAMP);\n      return (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").hsvToColor)(h, s, v, a);\n    };\n    _f._closure = {\n      interpolate: _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate,\n      Extrapolate: Extrapolate,\n      hsvToColor: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").hsvToColor\n    };\n    _f.__initData = _worklet_6906798994928_init_data;\n    _f.__workletHash = 6906798994928;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_11271606745997_init_data = {\n    code: \"function anonymous(x, gamma) {\\n  return x.map(function (v) {\\n    return Math.pow(v / 255, gamma);\\n  });\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA0EsB,SAACA,SAAaC,CAAcD,GAAcC;EAE9D,OAAOD,CAAC,CAACE,GAAG,CAAEC,WAAC;IAAA,OAAKC,IAAI,CAACC,GAAG,CAACF,CAAC,GAAG,GAAG,EAAEF,KAAK,CAAC;EAAA,EAAC;AAC/C\\\",\\\"names\\\":[\\\"x\\\",\\\"gamma\\\",\\\"map\\\",\\\"v\\\",\\\"Math\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var toLinearSpace = function () {\n    var _e = [new Error(), 1, -20];\n    var _f = function _f(x, gamma) {\n      return x.map(function (v) {\n        return Math.pow(v / 255, gamma);\n      });\n    };\n    _f._closure = {};\n    _f.__initData = _worklet_11271606745997_init_data;\n    _f.__workletHash = 11271606745997;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_3404264460492_init_data = {\n    code: \"function anonymous(x, gamma) {\\n  return Math.round(Math.pow(x, 1 / gamma) * 255);\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA+EqB,SAACA,SAAWC,CAAcD,GAAYC;EAEzD,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,EAAE,CAAC,GAAGC,KAAK,CAAC,GAAG,GAAG,CAAC;AACjD\\\",\\\"names\\\":[\\\"x\\\",\\\"gamma\\\",\\\"Math\\\",\\\"round\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var toGammaSpace = function () {\n    var _e = [new Error(), 1, -20];\n    var _f = function _f(x, gamma) {\n      return Math.round(Math.pow(x, 1 / gamma) * 255);\n    };\n    _f._closure = {};\n    _f.__initData = _worklet_3404264460492_init_data;\n    _f.__workletHash = 3404264460492;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_5547345126831_init_data = {\n    code: \"function anonymous(value, inputRange, colors, options) {\\n  const {\\n    toLinearSpace,\\n    interpolate,\\n    Extrapolate,\\n    rgbaColor,\\n    toGammaSpace\\n  } = this._closure;\\n  const {\\n    gamma = 2.2\\n  } = options;\\n  let {\\n    r: outputR,\\n    g: outputG,\\n    b: outputB\\n  } = colors;\\n  if (gamma !== 1) {\\n    outputR = toLinearSpace(outputR, gamma);\\n    outputG = toLinearSpace(outputG, gamma);\\n    outputB = toLinearSpace(outputB, gamma);\\n  }\\n  const r = interpolate(value, inputRange, outputR, Extrapolate.CLAMP);\\n  const g = interpolate(value, inputRange, outputG, Extrapolate.CLAMP);\\n  const b = interpolate(value, inputRange, outputB, Extrapolate.CLAMP);\\n  const a = interpolate(value, inputRange, colors.a, Extrapolate.CLAMP);\\n  if (gamma === 1) {\\n    return rgbaColor(r, g, b, a);\\n  }\\n  return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAoF6B,SAC3BA,SACAC,kBACsB,EACtBC,QAA6BA,OAC1B;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAEH,MAAM;IAAEC,KAAK,GAAG;EAAI,CAAC,GAAGD,OAAO;EAC/B,IAAI;IAAEE,CAAC,EAAEC,OAAO;IAAEC,CAAC,EAAEC,OAAO;IAAEC,CAAC,EAAEC;EAAQ,CAAC,GAAGC,MAAM;EACnD,IAAIP,KAAK,KAAK,CAAC,EAAE;IACfE,OAAO,GAAGM,aAAa,CAACN,OAAO,EAAEF,KAAK,CAAC;IACvCI,OAAO,GAAGI,aAAa,CAACJ,OAAO,EAAEJ,KAAK,CAAC;IACvCM,OAAO,GAAGE,aAAa,CAACF,OAAO,EAAEN,KAAK,CAAC;EACzC;EACA,MAAMC,CAAC,GAAGQ,WAAW,CAACZ,KAAK,EAAEC,UAAU,EAAEI,OAAO,EAAEQ,WAAW,CAACC,KAAK,CAAC;EACpE,MAAMR,CAAC,GAAGM,WAAW,CAACZ,KAAK,EAAEC,UAAU,EAAEM,OAAO,EAAEM,WAAW,CAACC,KAAK,CAAC;EACpE,MAAMN,CAAC,GAAGI,WAAW,CAACZ,KAAK,EAAEC,UAAU,EAAEQ,OAAO,EAAEI,WAAW,CAACC,KAAK,CAAC;EACpE,MAAMC,CAAC,GAAGH,WAAW,CAACZ,KAAK,EAAEC,UAAU,EAAES,MAAM,CAACK,CAAC,EAAEF,WAAW,CAACC,KAAK,CAAC;EACrE,IAAIX,KAAK,KAAK,CAAC,EAAE;IACf,OAAOa,SAAS,CAACZ,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEO,CAAC,CAAC;EAC9B;EACA,OAAOC,SAAS,CACdC,YAAY,CAACb,CAAC,EAAED,KAAK,CAAC,EACtBc,YAAY,CAACX,CAAC,EAAEH,KAAK,CAAC,EACtBc,YAAY,CAACT,CAAC,EAAEL,KAAK,CAAC,EACtBY,CAAC,CACF;AACH\\\",\\\"names\\\":[\\\"value\\\",\\\"inputRange\\\",\\\"options\\\",\\\"gamma\\\",\\\"r\\\",\\\"outputR\\\",\\\"g\\\",\\\"outputG\\\",\\\"b\\\",\\\"outputB\\\",\\\"colors\\\",\\\"toLinearSpace\\\",\\\"interpolate\\\",\\\"Extrapolate\\\",\\\"CLAMP\\\",\\\"a\\\",\\\"rgbaColor\\\",\\\"toGammaSpace\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var interpolateColorsRGB = function () {\n    var _e = [new Error(), -6, -20];\n    var _f = function _f(value, inputRange, colors, options) {\n      var _options$gamma = options.gamma,\n        gamma = _options$gamma === void 0 ? 2.2 : _options$gamma;\n      var outputR = colors.r,\n        outputG = colors.g,\n        outputB = colors.b;\n      if (gamma !== 1) {\n        outputR = toLinearSpace(outputR, gamma);\n        outputG = toLinearSpace(outputG, gamma);\n        outputB = toLinearSpace(outputB, gamma);\n      }\n      var r = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, outputR, Extrapolate.CLAMP);\n      var g = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, outputG, Extrapolate.CLAMP);\n      var b = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, outputB, Extrapolate.CLAMP);\n      var a = (0, _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate)(value, inputRange, colors.a, Extrapolate.CLAMP);\n      if (gamma === 1) {\n        return (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").rgbaColor)(r, g, b, a);\n      }\n      return (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").rgbaColor)(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n    };\n    _f._closure = {\n      toLinearSpace: toLinearSpace,\n      interpolate: _$$_REQUIRE(_dependencyMap[0], \"./interpolation\").interpolate,\n      Extrapolate: Extrapolate,\n      rgbaColor: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").rgbaColor,\n      toGammaSpace: toGammaSpace\n    };\n    _f.__initData = _worklet_5547345126831_init_data;\n    _f.__workletHash = 5547345126831;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_1256647937052_init_data = {\n    code: \"function anonymous(colors) {\\n  const {\\n    processColor,\\n    red,\\n    green,\\n    blue,\\n    opacity\\n  } = this._closure;\\n  const r = [];\\n  const g = [];\\n  const b = [];\\n  const a = [];\\n  for (let i = 0; i < colors.length; ++i) {\\n    const color = colors[i];\\n    const processedColor = processColor(color);\\n    if (processedColor !== null && processedColor !== undefined) {\\n      r.push(red(processedColor));\\n      g.push(green(processedColor));\\n      b.push(blue(processedColor));\\n      a.push(opacity(processedColor));\\n    }\\n  }\\n  return {\\n    r: r,\\n    g: g,\\n    b: b,\\n    a: a\\n  };\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAwH0B,SACxBA,SACD,CAAoBA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAGnB,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGP,MAAM,CAACK,CAAC,CAAC;IACvB,MAAMG,cAAc,GAAGC,YAAY,CAACF,KAAK,CAAC;IAE1C,IAAIC,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKE,SAAS,EAAE;MAC3DT,CAAC,CAACU,IAAI,CAACC,GAAG,CAACJ,cAAc,CAAC,CAAC;MAC3BN,CAAC,CAACS,IAAI,CAACE,KAAK,CAACL,cAAc,CAAC,CAAC;MAC7BL,CAAC,CAACQ,IAAI,CAACG,IAAI,CAACN,cAAc,CAAC,CAAC;MAC5BJ,CAAC,CAACO,IAAI,CAACI,OAAO,CAACP,cAAc,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IAAEP,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA,CAAC;IAAEC;EAAE,CAAC;AACvB\\\",\\\"names\\\":[\\\"colors\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"a\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"processColor\\\",\\\"undefined\\\",\\\"push\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var getInterpolateRGB = function () {\n    var _e = [new Error(), -6, -20];\n    var _f = function _f(colors) {\n      var r = [];\n      var g = [];\n      var b = [];\n      var a = [];\n      for (var i = 0; i < colors.length; ++i) {\n        var color = colors[i];\n        var processedColor = (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").processColor)(color);\n        if (processedColor !== null && processedColor !== undefined) {\n          r.push((0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").red)(processedColor));\n          g.push((0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").green)(processedColor));\n          b.push((0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").blue)(processedColor));\n          a.push((0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").opacity)(processedColor));\n        }\n      }\n      return {\n        r: r,\n        g: g,\n        b: b,\n        a: a\n      };\n    };\n    _f._closure = {\n      processColor: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").processColor,\n      red: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").red,\n      green: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").green,\n      blue: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").blue,\n      opacity: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").opacity\n    };\n    _f.__initData = _worklet_1256647937052_init_data;\n    _f.__workletHash = 1256647937052;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_4205888180392_init_data = {\n    code: \"function anonymous(colors) {\\n  const {\\n    processColor,\\n    RGBtoHSV,\\n    red,\\n    green,\\n    blue,\\n    opacity\\n  } = this._closure;\\n  const h = [];\\n  const s = [];\\n  const v = [];\\n  const a = [];\\n  for (let i = 0; i < colors.length; ++i) {\\n    const color = colors[i];\\n    const processedColor = processColor(color);\\n    if (typeof processedColor === 'number') {\\n      const processedHSVColor = RGBtoHSV(red(processedColor), green(processedColor), blue(processedColor));\\n      h.push(processedHSVColor.h);\\n      s.push(processedHSVColor.s);\\n      v.push(processedHSVColor.v);\\n      a.push(opacity(processedColor));\\n    }\\n  }\\n  return {\\n    h: h,\\n    s: s,\\n    v: v,\\n    a: a\\n  };\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAsJ0B,SACxBA,SACD,CAAoBA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAEnB,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,KAAK,GAAGP,MAAM,CAACK,CAAC,CAAC;IACvB,MAAMG,cAAc,GAAGC,YAAY,CAACF,KAAK,CAAQ;IACjD,IAAI,OAAOC,cAAc,KAAK,QAAQ,EAAE;MACtC,MAAME,iBAAiB,GAAGC,QAAQ,CAChCC,GAAG,CAACJ,cAAc,CAAC,EACnBK,KAAK,CAACL,cAAc,CAAC,EACrBM,IAAI,CAACN,cAAc,CAAC,CACrB;MAEDP,CAAC,CAACc,IAAI,CAACL,iBAAiB,CAACT,CAAC,CAAC;MAC3BC,CAAC,CAACa,IAAI,CAACL,iBAAiB,CAACR,CAAC,CAAC;MAC3BC,CAAC,CAACY,IAAI,CAACL,iBAAiB,CAACP,CAAC,CAAC;MAC3BC,CAAC,CAACW,IAAI,CAACC,OAAO,CAACR,cAAc,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IAAEP,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA,CAAC;IAAEC;EAAE,CAAC;AACvB\\\",\\\"names\\\":[\\\"colors\\\",\\\"h\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"processColor\\\",\\\"processedHSVColor\\\",\\\"RGBtoHSV\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"push\\\",\\\"opacity\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var getInterpolateHSV = function () {\n    var _e = [new Error(), -7, -20];\n    var _f = function _f(colors) {\n      var h = [];\n      var s = [];\n      var v = [];\n      var a = [];\n      for (var i = 0; i < colors.length; ++i) {\n        var color = colors[i];\n        var processedColor = (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").processColor)(color);\n        if (typeof processedColor === 'number') {\n          var processedHSVColor = (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").RGBtoHSV)((0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").red)(processedColor), (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").green)(processedColor), (0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").blue)(processedColor));\n          h.push(processedHSVColor.h);\n          s.push(processedHSVColor.s);\n          v.push(processedHSVColor.v);\n          a.push((0, _$$_REQUIRE(_dependencyMap[1], \"./Colors\").opacity)(processedColor));\n        }\n      }\n      return {\n        h: h,\n        s: s,\n        v: v,\n        a: a\n      };\n    };\n    _f._closure = {\n      processColor: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").processColor,\n      RGBtoHSV: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").RGBtoHSV,\n      red: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").red,\n      green: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").green,\n      blue: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").blue,\n      opacity: _$$_REQUIRE(_dependencyMap[1], \"./Colors\").opacity\n    };\n    _f.__initData = _worklet_4205888180392_init_data;\n    _f.__workletHash = 4205888180392;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_14557572449499_init_data = {\n    code: \"function anonymous(value, inputRange, outputRange, colorSpace = 'RGB', options = {}) {\\n  const {\\n    interpolateColorsHSV,\\n    getInterpolateHSV,\\n    interpolateColorsRGB,\\n    getInterpolateRGB\\n  } = this._closure;\\n  if (colorSpace === 'HSV') {\\n    return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\\n  } else if (colorSpace === 'RGB') {\\n    return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\\n  }\\n  throw new Error(\\\"Invalid color space provided: \\\" + colorSpace + \\\". Supported values are: ['RGB', 'HSV']\\\");\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAiLgC,SAC9BA,SACAC,kBACAC,aACAC,YAAiC,GACjCC,OAA6BA,OACT;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAEpB,IAAID,UAAU,KAAK,KAAK,EAAE;IACxB,OAAOE,oBAAoB,CACzBL,KAAK,EACLC,UAAU,EACVK,iBAAiB,CAACJ,WAAW,CAAC,EAC9BE,OAAO,CACR;EACH,CAAC,MAAM,IAAID,UAAU,KAAK,KAAK,EAAE;IAC/B,OAAOI,oBAAoB,CACzBP,KAAK,EACLC,UAAU,EACVO,iBAAiB,CAACN,WAAW,CAAC,EAC9BE,OAAO,CACR;EACH;EACA,MAAM,IAAIK,KAAK,oCACoBN,UAAW,4CAC7C;AACH\\\",\\\"names\\\":[\\\"value\\\",\\\"inputRange\\\",\\\"outputRange\\\",\\\"colorSpace\\\",\\\"options\\\",\\\"interpolateColorsHSV\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsRGB\\\",\\\"getInterpolateRGB\\\",\\\"Error\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var interpolateColor = function () {\n    var _e = [new Error(), -5, -20];\n    var _f = function _f(value, inputRange, outputRange) {\n      var colorSpace = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'RGB';\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      if (colorSpace === 'HSV') {\n        return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n      } else if (colorSpace === 'RGB') {\n        return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n      }\n      throw new Error(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV']`);\n    };\n    _f._closure = {\n      interpolateColorsHSV: interpolateColorsHSV,\n      getInterpolateHSV: getInterpolateHSV,\n      interpolateColorsRGB: interpolateColorsRGB,\n      getInterpolateRGB: getInterpolateRGB\n    };\n    _f.__initData = _worklet_14557572449499_init_data;\n    _f.__workletHash = 14557572449499;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  exports.interpolateColor = interpolateColor;\n  var ColorSpace;\n  exports.ColorSpace = ColorSpace;\n  (function (ColorSpace) {\n    ColorSpace[ColorSpace[\"RGB\"] = 0] = \"RGB\";\n    ColorSpace[ColorSpace[\"HSV\"] = 1] = \"HSV\";\n  })(ColorSpace || (exports.ColorSpace = ColorSpace = {}));\n  function useInterpolateConfig(inputRange, outputRange) {\n    var colorSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ColorSpace.RGB;\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return (0, _$$_REQUIRE(_dependencyMap[2], \"./hook/useSharedValue\").useSharedValue)({\n      inputRange: inputRange,\n      outputRange: outputRange,\n      colorSpace: colorSpace,\n      cache: (0, _$$_REQUIRE(_dependencyMap[3], \"./core\").makeMutable)(null),\n      options: options\n    });\n  }\n  var _worklet_13643278367522_init_data = {\n    code: \"function anonymous(value, interpolateConfig) {\\n  const {\\n    ColorSpace,\\n    getInterpolateRGB,\\n    interpolateColorsRGB,\\n    getInterpolateHSV,\\n    interpolateColorsHSV\\n  } = this._closure;\\n  let colors = interpolateConfig.value.cache.value;\\n  if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {\\n    if (!colors) {\\n      colors = getInterpolateRGB(interpolateConfig.value.outputRange);\\n      interpolateConfig.value.cache.value = colors;\\n    }\\n    return interpolateColorsRGB(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\\n  } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {\\n    if (!colors) {\\n      colors = getInterpolateHSV(interpolateConfig.value.outputRange);\\n      interpolateConfig.value.cache.value = colors;\\n    }\\n    return interpolateColorsHSV(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\\n  }\\n  throw new Error(\\\"Invalid color space provided: \\\" + interpolateConfig.value.colorSpace + \\\". Supported values are: ['RGB', 'HSV']\\\");\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAyOwC,SACtCA,SACAC,yBACoB;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAEpB,IAAIC,MAAM,GAAGD,iBAAiB,CAACD,KAAK,CAACG,KAAK,CAACH,KAAK;EAChD,IAAIC,iBAAiB,CAACD,KAAK,CAACI,UAAU,KAAKC,UAAU,CAACC,GAAG,EAAE;IACzD,IAAI,CAACJ,MAAM,EAAE;MACXA,MAAM,GAAGK,iBAAiB,CAACN,iBAAiB,CAACD,KAAK,CAACQ,WAAW,CAAC;MAC/DP,iBAAiB,CAACD,KAAK,CAACG,KAAK,CAACH,KAAK,GAAGE,MAAM;IAC9C;IACA,OAAOO,oBAAoB,CACzBT,KAAK,EACLC,iBAAiB,CAACD,KAAK,CAACU,UAAU,EAClCR,MAAM,EACND,iBAAiB,CAACD,KAAK,CAACW,OAAO,CAChC;EACH,CAAC,MAAM,IAAIV,iBAAiB,CAACD,KAAK,CAACI,UAAU,KAAKC,UAAU,CAACO,GAAG,EAAE;IAChE,IAAI,CAACV,MAAM,EAAE;MACXA,MAAM,GAAGW,iBAAiB,CAACZ,iBAAiB,CAACD,KAAK,CAACQ,WAAW,CAAC;MAC/DP,iBAAiB,CAACD,KAAK,CAACG,KAAK,CAACH,KAAK,GAAGE,MAAM;IAC9C;IACA,OAAOY,oBAAoB,CACzBd,KAAK,EACLC,iBAAiB,CAACD,KAAK,CAACU,UAAU,EAClCR,MAAM,EACND,iBAAiB,CAACD,KAAK,CAACW,OAAO,CAChC;EACH;EACA,MAAM,IAAII,KAAK,oCACoBd,iBAAiB,CAACD,KAAK,CAACI,UAAW,4CACrE;AACH\\\",\\\"names\\\":[\\\"value\\\",\\\"interpolateConfig\\\",\\\"colors\\\",\\\"cache\\\",\\\"colorSpace\\\",\\\"ColorSpace\\\",\\\"RGB\\\",\\\"getInterpolateRGB\\\",\\\"outputRange\\\",\\\"interpolateColorsRGB\\\",\\\"inputRange\\\",\\\"options\\\",\\\"HSV\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsHSV\\\",\\\"Error\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/interpolateColor.ts\\\"]}\"\n  };\n  var interpolateSharableColor = function () {\n    var _e = [new Error(), -6, -20];\n    var _f = function _f(value, interpolateConfig) {\n      var colors = interpolateConfig.value.cache.value;\n      if (interpolateConfig.value.colorSpace === ColorSpace.RGB) {\n        if (!colors) {\n          colors = getInterpolateRGB(interpolateConfig.value.outputRange);\n          interpolateConfig.value.cache.value = colors;\n        }\n        return interpolateColorsRGB(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\n      } else if (interpolateConfig.value.colorSpace === ColorSpace.HSV) {\n        if (!colors) {\n          colors = getInterpolateHSV(interpolateConfig.value.outputRange);\n          interpolateConfig.value.cache.value = colors;\n        }\n        return interpolateColorsHSV(value, interpolateConfig.value.inputRange, colors, interpolateConfig.value.options);\n      }\n      throw new Error(`Invalid color space provided: ${interpolateConfig.value.colorSpace}. Supported values are: ['RGB', 'HSV']`);\n    };\n    _f._closure = {\n      ColorSpace: ColorSpace,\n      getInterpolateRGB: getInterpolateRGB,\n      interpolateColorsRGB: interpolateColorsRGB,\n      getInterpolateHSV: getInterpolateHSV,\n      interpolateColorsHSV: interpolateColorsHSV\n    };\n    _f.__initData = _worklet_13643278367522_init_data;\n    _f.__workletHash = 13643278367522;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  exports.interpolateSharableColor = interpolateSharableColor;\n});","lineCount":304,"map":[[7,2,16,7],[7,6,16,13,"Extrapolate"],[7,17,16,24],[7,20,16,27],[8,4,17,2,"EXTEND"],[8,10,17,8],[8,12,17,10],[8,20,17,18],[9,4,18,2,"CLAMP"],[9,9,18,7],[9,11,18,9],[9,18,18,16],[10,4,19,2,"IDENTITY"],[10,12,19,10],[10,14,19,12],[11,2,20,0],[11,3,20,1],[12,2,20,2],[13,2,20,2],[14,4,20,2],[15,4,20,2],[16,4,20,2],[17,2,20,2],[18,2,27,0],[18,6,27,6,"interpolateColorsHSV"],[18,26,27,26],[19,4,27,26],[20,4,27,26],[20,25,28,2,"value"],[20,30,28,15],[20,32,29,2,"inputRange"],[20,42,29,31],[20,44,30,2,"colors"],[20,50,30,24],[20,52,31,2,"options"],[20,59,31,31],[20,61,32,5],[21,6,34,2],[21,10,34,6,"h"],[21,11,34,7],[21,14,34,10],[21,15,34,11],[22,6,35,2],[22,34,35,50,"options"],[22,41,35,57],[22,42,35,10,"useCorrectedHSVInterpolation"],[22,70,35,38],[23,8,35,10,"useCorrectedHSVInterpolation"],[23,36,35,38],[23,74,35,41],[23,78,35,45],[24,6,36,2],[24,10,36,6,"useCorrectedHSVInterpolation"],[24,38,36,34],[24,40,36,36],[25,8,41,4],[25,12,41,10,"correctedInputRange"],[25,31,41,29],[25,34,41,32],[25,35,41,33,"inputRange"],[25,45,41,43],[25,46,41,44],[25,47,41,45],[25,48,41,46],[25,49,41,47],[26,8,42,4],[26,12,42,10,"originalH"],[26,21,42,19],[26,24,42,22,"colors"],[26,30,42,28],[26,31,42,29,"h"],[26,32,42,30],[27,8,43,4],[27,12,43,10,"correctedH"],[27,22,43,20],[27,25,43,23],[27,26,43,24,"originalH"],[27,35,43,33],[27,36,43,34],[27,37,43,35],[27,38,43,36],[27,39,43,37],[28,8,45,4],[28,13,45,9],[28,17,45,13,"i"],[28,18,45,14],[28,21,45,17],[28,22,45,18],[28,24,45,20,"i"],[28,25,45,21],[28,28,45,24,"originalH"],[28,37,45,33],[28,38,45,34,"length"],[28,44,45,40],[28,46,45,42],[28,48,45,44,"i"],[28,49,45,45],[28,51,45,47],[29,10,46,6],[29,14,46,12,"d"],[29,15,46,13],[29,18,46,16,"originalH"],[29,27,46,25],[29,28,46,26,"i"],[29,29,46,27],[29,30,46,28],[29,33,46,31,"originalH"],[29,42,46,40],[29,43,46,41,"i"],[29,44,46,42],[29,47,46,45],[29,48,46,46],[29,49,46,47],[30,10,47,6],[30,14,47,10,"originalH"],[30,23,47,19],[30,24,47,20,"i"],[30,25,47,21],[30,26,47,22],[30,29,47,25,"originalH"],[30,38,47,34],[30,39,47,35,"i"],[30,40,47,36],[30,43,47,39],[30,44,47,40],[30,45,47,41],[30,49,47,45,"d"],[30,50,47,46],[30,53,47,49],[30,56,47,52],[30,58,47,54],[31,12,48,8,"correctedInputRange"],[31,31,48,27],[31,32,48,28,"push"],[31,36,48,32],[31,37,48,33,"inputRange"],[31,47,48,43],[31,48,48,44,"i"],[31,49,48,45],[31,50,48,46],[31,51,48,47],[32,12,49,8,"correctedInputRange"],[32,31,49,27],[32,32,49,28,"push"],[32,36,49,32],[32,37,49,33,"inputRange"],[32,47,49,43],[32,48,49,44,"i"],[32,49,49,45],[32,50,49,46],[32,53,49,49],[32,60,49,56],[32,61,49,57],[33,12,50,8,"correctedH"],[33,22,50,18],[33,23,50,19,"push"],[33,27,50,23],[33,28,50,24,"originalH"],[33,37,50,33],[33,38,50,34,"i"],[33,39,50,35],[33,40,50,36],[33,43,50,39],[33,44,50,40],[33,45,50,41],[34,12,51,8,"correctedH"],[34,22,51,18],[34,23,51,19,"push"],[34,27,51,23],[34,28,51,24,"originalH"],[34,37,51,33],[34,38,51,34,"i"],[34,39,51,35],[34,40,51,36],[34,41,51,37],[35,10,52,6],[35,11,52,7],[35,17,52,13],[35,21,52,17,"originalH"],[35,30,52,26],[35,31,52,27,"i"],[35,32,52,28],[35,33,52,29],[35,36,52,32,"originalH"],[35,45,52,41],[35,46,52,42,"i"],[35,47,52,43],[35,50,52,46],[35,51,52,47],[35,52,52,48],[35,56,52,52,"d"],[35,57,52,53],[35,60,52,56],[35,61,52,57],[35,64,52,60],[35,66,52,62],[36,12,53,8,"correctedInputRange"],[36,31,53,27],[36,32,53,28,"push"],[36,36,53,32],[36,37,53,33,"inputRange"],[36,47,53,43],[36,48,53,44,"i"],[36,49,53,45],[36,50,53,46],[36,51,53,47],[37,12,54,8,"correctedInputRange"],[37,31,54,27],[37,32,54,28,"push"],[37,36,54,32],[37,37,54,33,"inputRange"],[37,47,54,43],[37,48,54,44,"i"],[37,49,54,45],[37,50,54,46],[37,53,54,49],[37,60,54,56],[37,61,54,57],[38,12,55,8,"correctedH"],[38,22,55,18],[38,23,55,19,"push"],[38,27,55,23],[38,28,55,24,"originalH"],[38,37,55,33],[38,38,55,34,"i"],[38,39,55,35],[38,40,55,36],[38,43,55,39],[38,44,55,40],[38,45,55,41],[39,12,56,8,"correctedH"],[39,22,56,18],[39,23,56,19,"push"],[39,27,56,23],[39,28,56,24,"originalH"],[39,37,56,33],[39,38,56,34,"i"],[39,39,56,35],[39,40,56,36],[39,41,56,37],[40,10,57,6],[40,11,57,7],[40,17,57,13],[41,12,58,8,"correctedInputRange"],[41,31,58,27],[41,32,58,28,"push"],[41,36,58,32],[41,37,58,33,"inputRange"],[41,47,58,43],[41,48,58,44,"i"],[41,49,58,45],[41,50,58,46],[41,51,58,47],[42,12,59,8,"correctedH"],[42,22,59,18],[42,23,59,19,"push"],[42,27,59,23],[42,28,59,24,"originalH"],[42,37,59,33],[42,38,59,34,"i"],[42,39,59,35],[42,40,59,36],[42,41,59,37],[43,10,60,6],[44,8,61,4],[45,8,62,4,"h"],[45,9,62,5],[45,12,63,6],[45,13,63,7],[45,17,63,7,"interpolate"],[45,78,63,18],[45,80,63,19,"value"],[45,85,63,24],[45,87,63,26,"correctedInputRange"],[45,106,63,45],[45,108,63,47,"correctedH"],[45,118,63,57],[45,120,63,59,"Extrapolate"],[45,131,63,70],[45,132,63,71,"CLAMP"],[45,137,63,76],[45,138,63,77],[45,141,64,8],[45,142,64,9],[45,146,65,6],[45,147,65,7],[46,6,66,2],[46,7,66,3],[46,13,66,9],[47,8,67,4,"h"],[47,9,67,5],[47,12,67,8],[47,16,67,8,"interpolate"],[47,77,67,19],[47,79,67,20,"value"],[47,84,67,25],[47,86,67,27,"inputRange"],[47,96,67,37],[47,98,67,39,"colors"],[47,104,67,45],[47,105,67,46,"h"],[47,106,67,47],[47,108,67,49,"Extrapolate"],[47,119,67,60],[47,120,67,61,"CLAMP"],[47,125,67,66],[47,126,67,67],[48,6,68,2],[49,6,69,2],[49,10,69,8,"s"],[49,11,69,9],[49,14,69,12],[49,18,69,12,"interpolate"],[49,79,69,23],[49,81,69,24,"value"],[49,86,69,29],[49,88,69,31,"inputRange"],[49,98,69,41],[49,100,69,43,"colors"],[49,106,69,49],[49,107,69,50,"s"],[49,108,69,51],[49,110,69,53,"Extrapolate"],[49,121,69,64],[49,122,69,65,"CLAMP"],[49,127,69,70],[49,128,69,71],[50,6,70,2],[50,10,70,8,"v"],[50,11,70,9],[50,14,70,12],[50,18,70,12,"interpolate"],[50,79,70,23],[50,81,70,24,"value"],[50,86,70,29],[50,88,70,31,"inputRange"],[50,98,70,41],[50,100,70,43,"colors"],[50,106,70,49],[50,107,70,50,"v"],[50,108,70,51],[50,110,70,53,"Extrapolate"],[50,121,70,64],[50,122,70,65,"CLAMP"],[50,127,70,70],[50,128,70,71],[51,6,71,2],[51,10,71,8,"a"],[51,11,71,9],[51,14,71,12],[51,18,71,12,"interpolate"],[51,79,71,23],[51,81,71,24,"value"],[51,86,71,29],[51,88,71,31,"inputRange"],[51,98,71,41],[51,100,71,43,"colors"],[51,106,71,49],[51,107,71,50,"a"],[51,108,71,51],[51,110,71,53,"Extrapolate"],[51,121,71,64],[51,122,71,65,"CLAMP"],[51,127,71,70],[51,128,71,71],[52,6,72,2],[52,13,72,9],[52,17,72,9,"hsvToColor"],[52,70,72,19],[52,72,72,20,"h"],[52,73,72,21],[52,75,72,23,"s"],[52,76,72,24],[52,78,72,26,"v"],[52,79,72,27],[52,81,72,29,"a"],[52,82,72,30],[52,83,72,31],[53,4,73,0],[53,5,73,1],[54,4,73,1],[55,6,73,1],[55,19,37,12,"interpolate"],[55,80,37,23],[56,6,37,23],[56,19,37,53,"Extrapolate"],[56,30,37,64],[57,6,37,64],[57,18,38,9,"hsvToColor"],[58,4,38,19],[59,4,38,19],[60,4,38,19],[61,4,38,19],[62,4,38,19],[63,2,38,19],[63,5,73,1],[64,2,73,2],[65,4,73,2],[66,4,73,2],[67,4,73,2],[68,2,73,2],[69,2,75,0],[69,6,75,6,"toLinearSpace"],[69,19,75,19],[70,4,75,19],[71,4,75,19],[71,25,75,23,"x"],[71,26,75,34],[71,28,75,36,"gamma"],[71,33,75,49],[71,35,75,64],[72,6,77,2],[72,13,77,9,"x"],[72,14,77,10],[72,15,77,11,"map"],[72,18,77,14],[72,19,77,15],[72,29,77,16,"v"],[72,30,77,17],[73,8,77,17],[73,15,77,22,"Math"],[73,19,77,26],[73,20,77,27,"pow"],[73,23,77,30],[73,24,77,31,"v"],[73,25,77,32],[73,28,77,35],[73,31,77,38],[73,33,77,40,"gamma"],[73,38,77,45],[73,39,77,46],[74,6,77,46],[74,8,77,47],[75,4,78,0],[75,5,78,1],[76,4,78,1],[77,4,78,1],[78,4,78,1],[79,4,78,1],[80,4,78,1],[81,2,78,1],[82,2,78,2],[83,4,78,2],[84,4,78,2],[85,4,78,2],[86,2,78,2],[87,2,80,0],[87,6,80,6,"toGammaSpace"],[87,18,80,18],[88,4,80,18],[89,4,80,18],[89,25,80,22,"x"],[89,26,80,31],[89,28,80,33,"gamma"],[89,33,80,46],[89,35,80,59],[90,6,82,2],[90,13,82,9,"Math"],[90,17,82,13],[90,18,82,14,"round"],[90,23,82,19],[90,24,82,20,"Math"],[90,28,82,24],[90,29,82,25,"pow"],[90,32,82,28],[90,33,82,29,"x"],[90,34,82,30],[90,36,82,32],[90,37,82,33],[90,40,82,36,"gamma"],[90,45,82,41],[90,46,82,42],[90,49,82,45],[90,52,82,48],[90,53,82,49],[91,4,83,0],[91,5,83,1],[92,4,83,1],[93,4,83,1],[94,4,83,1],[95,4,83,1],[96,4,83,1],[97,2,83,1],[98,2,83,2],[99,4,83,2],[100,4,83,2],[101,4,83,2],[102,2,83,2],[103,2,85,0],[103,6,85,6,"interpolateColorsRGB"],[103,26,85,26],[104,4,85,26],[105,4,85,26],[105,25,86,2,"value"],[105,30,86,15],[105,32,87,2,"inputRange"],[105,42,87,31],[105,44,88,2,"colors"],[105,50,88,24],[105,52,89,2,"options"],[105,59,89,31],[105,61,90,5],[106,6,92,2],[106,27,92,26,"options"],[106,34,92,33],[106,35,92,10,"gamma"],[106,40,92,15],[107,8,92,10,"gamma"],[107,13,92,15],[107,44,92,18],[107,47,92,21],[108,6,93,2],[108,10,93,11,"outputR"],[108,17,93,18],[108,20,93,47,"colors"],[108,26,93,53],[108,27,93,8,"r"],[108,28,93,9],[109,8,93,23,"outputG"],[109,15,93,30],[109,18,93,47,"colors"],[109,24,93,53],[109,25,93,20,"g"],[109,26,93,21],[110,8,93,35,"outputB"],[110,15,93,42],[110,18,93,47,"colors"],[110,24,93,53],[110,25,93,32,"b"],[110,26,93,33],[111,6,94,2],[111,10,94,6,"gamma"],[111,15,94,11],[111,20,94,16],[111,21,94,17],[111,23,94,19],[112,8,95,4,"outputR"],[112,15,95,11],[112,18,95,14,"toLinearSpace"],[112,31,95,27],[112,32,95,28,"outputR"],[112,39,95,35],[112,41,95,37,"gamma"],[112,46,95,42],[112,47,95,43],[113,8,96,4,"outputG"],[113,15,96,11],[113,18,96,14,"toLinearSpace"],[113,31,96,27],[113,32,96,28,"outputG"],[113,39,96,35],[113,41,96,37,"gamma"],[113,46,96,42],[113,47,96,43],[114,8,97,4,"outputB"],[114,15,97,11],[114,18,97,14,"toLinearSpace"],[114,31,97,27],[114,32,97,28,"outputB"],[114,39,97,35],[114,41,97,37,"gamma"],[114,46,97,42],[114,47,97,43],[115,6,98,2],[116,6,99,2],[116,10,99,8,"r"],[116,11,99,9],[116,14,99,12],[116,18,99,12,"interpolate"],[116,79,99,23],[116,81,99,24,"value"],[116,86,99,29],[116,88,99,31,"inputRange"],[116,98,99,41],[116,100,99,43,"outputR"],[116,107,99,50],[116,109,99,52,"Extrapolate"],[116,120,99,63],[116,121,99,64,"CLAMP"],[116,126,99,69],[116,127,99,70],[117,6,100,2],[117,10,100,8,"g"],[117,11,100,9],[117,14,100,12],[117,18,100,12,"interpolate"],[117,79,100,23],[117,81,100,24,"value"],[117,86,100,29],[117,88,100,31,"inputRange"],[117,98,100,41],[117,100,100,43,"outputG"],[117,107,100,50],[117,109,100,52,"Extrapolate"],[117,120,100,63],[117,121,100,64,"CLAMP"],[117,126,100,69],[117,127,100,70],[118,6,101,2],[118,10,101,8,"b"],[118,11,101,9],[118,14,101,12],[118,18,101,12,"interpolate"],[118,79,101,23],[118,81,101,24,"value"],[118,86,101,29],[118,88,101,31,"inputRange"],[118,98,101,41],[118,100,101,43,"outputB"],[118,107,101,50],[118,109,101,52,"Extrapolate"],[118,120,101,63],[118,121,101,64,"CLAMP"],[118,126,101,69],[118,127,101,70],[119,6,102,2],[119,10,102,8,"a"],[119,11,102,9],[119,14,102,12],[119,18,102,12,"interpolate"],[119,79,102,23],[119,81,102,24,"value"],[119,86,102,29],[119,88,102,31,"inputRange"],[119,98,102,41],[119,100,102,43,"colors"],[119,106,102,49],[119,107,102,50,"a"],[119,108,102,51],[119,110,102,53,"Extrapolate"],[119,121,102,64],[119,122,102,65,"CLAMP"],[119,127,102,70],[119,128,102,71],[120,6,103,2],[120,10,103,6,"gamma"],[120,15,103,11],[120,20,103,16],[120,21,103,17],[120,23,103,19],[121,8,104,4],[121,15,104,11],[121,19,104,11,"rgbaColor"],[121,71,104,20],[121,73,104,21,"r"],[121,74,104,22],[121,76,104,24,"g"],[121,77,104,25],[121,79,104,27,"b"],[121,80,104,28],[121,82,104,30,"a"],[121,83,104,31],[121,84,104,32],[122,6,105,2],[123,6,106,2],[123,13,106,9],[123,17,106,9,"rgbaColor"],[123,69,106,18],[123,71,107,4,"toGammaSpace"],[123,83,107,16],[123,84,107,17,"r"],[123,85,107,18],[123,87,107,20,"gamma"],[123,92,107,25],[123,93,107,26],[123,95,108,4,"toGammaSpace"],[123,107,108,16],[123,108,108,17,"g"],[123,109,108,18],[123,111,108,20,"gamma"],[123,116,108,25],[123,117,108,26],[123,119,109,4,"toGammaSpace"],[123,131,109,16],[123,132,109,17,"b"],[123,133,109,18],[123,135,109,20,"gamma"],[123,140,109,25],[123,141,109,26],[123,143,110,4,"a"],[123,144,110,5],[123,145,111,3],[124,4,112,0],[124,5,112,1],[125,4,112,1],[126,6,112,1],[126,21,13,14,"toLinearSpace"],[126,34,13,27],[127,6,13,27],[127,19,18,12,"interpolate"],[127,80,18,23],[128,6,18,23],[128,19,18,53,"Extrapolate"],[128,30,18,64],[129,6,18,64],[129,17,22,9,"rgbaColor"],[129,69,22,18],[130,6,22,18],[130,20,22,67,"toGammaSpace"],[131,4,22,79],[132,4,22,79],[133,4,22,79],[134,4,22,79],[135,4,22,79],[136,2,22,79],[136,5,112,1],[137,2,112,2],[138,4,112,2],[139,4,112,2],[140,4,112,2],[141,2,112,2],[142,2,121,0],[142,6,121,6,"getInterpolateRGB"],[142,23,121,23],[143,4,121,23],[144,4,121,23],[144,25,122,2,"colors"],[144,31,122,38],[144,33,123,21],[145,6,126,2],[145,10,126,8,"r"],[145,11,126,9],[145,14,126,12],[145,16,126,14],[146,6,127,2],[146,10,127,8,"g"],[146,11,127,9],[146,14,127,12],[146,16,127,14],[147,6,128,2],[147,10,128,8,"b"],[147,11,128,9],[147,14,128,12],[147,16,128,14],[148,6,129,2],[148,10,129,8,"a"],[148,11,129,9],[148,14,129,12],[148,16,129,14],[149,6,130,2],[149,11,130,7],[149,15,130,11,"i"],[149,16,130,12],[149,19,130,15],[149,20,130,16],[149,22,130,18,"i"],[149,23,130,19],[149,26,130,22,"colors"],[149,32,130,28],[149,33,130,29,"length"],[149,39,130,35],[149,41,130,37],[149,43,130,39,"i"],[149,44,130,40],[149,46,130,42],[150,8,131,4],[150,12,131,10,"color"],[150,17,131,15],[150,20,131,18,"colors"],[150,26,131,24],[150,27,131,25,"i"],[150,28,131,26],[150,29,131,27],[151,8,132,4],[151,12,132,10,"processedColor"],[151,26,132,24],[151,29,132,27],[151,33,132,27,"processColor"],[151,88,132,39],[151,90,132,40,"color"],[151,95,132,45],[151,96,132,46],[152,8,134,4],[152,12,134,8,"processedColor"],[152,26,134,22],[152,31,134,27],[152,35,134,31],[152,39,134,35,"processedColor"],[152,53,134,49],[152,58,134,54,"undefined"],[152,67,134,63],[152,69,134,65],[153,10,135,6,"r"],[153,11,135,7],[153,12,135,8,"push"],[153,16,135,12],[153,17,135,13],[153,21,135,13,"red"],[153,67,135,16],[153,69,135,17,"processedColor"],[153,83,135,31],[153,84,135,32],[153,85,135,33],[154,10,136,6,"g"],[154,11,136,7],[154,12,136,8,"push"],[154,16,136,12],[154,17,136,13],[154,21,136,13,"green"],[154,69,136,18],[154,71,136,19,"processedColor"],[154,85,136,33],[154,86,136,34],[154,87,136,35],[155,10,137,6,"b"],[155,11,137,7],[155,12,137,8,"push"],[155,16,137,12],[155,17,137,13],[155,21,137,13,"blue"],[155,68,137,17],[155,70,137,18,"processedColor"],[155,84,137,32],[155,85,137,33],[155,86,137,34],[156,10,138,6,"a"],[156,11,138,7],[156,12,138,8,"push"],[156,16,138,12],[156,17,138,13],[156,21,138,13,"opacity"],[156,71,138,20],[156,73,138,21,"processedColor"],[156,87,138,35],[156,88,138,36],[156,89,138,37],[157,8,139,4],[158,6,140,2],[159,6,141,2],[159,13,141,9],[160,8,141,11,"r"],[160,9,141,12],[160,11,141,11,"r"],[160,12,141,12],[161,8,141,14,"g"],[161,9,141,15],[161,11,141,14,"g"],[161,12,141,15],[162,8,141,17,"b"],[162,9,141,18],[162,11,141,17,"b"],[162,12,141,18],[163,8,141,20,"a"],[163,9,141,21],[163,11,141,20,"a"],[164,6,141,22],[164,7,141,23],[165,4,142,0],[165,5,142,1],[166,4,142,1],[167,6,142,1],[167,20,8,27,"processColor"],[167,75,8,39],[168,6,8,39],[168,11,11,13,"red"],[168,57,11,16],[169,6,11,16],[169,13,12,13,"green"],[169,61,12,18],[170,6,12,18],[170,12,13,13,"blue"],[170,59,13,17],[171,6,13,17],[171,15,14,13,"opacity"],[172,4,14,20],[173,4,14,20],[174,4,14,20],[175,4,14,20],[176,4,14,20],[177,2,14,20],[177,5,142,1],[178,2,142,2],[179,4,142,2],[180,4,142,2],[181,4,142,2],[182,2,142,2],[183,2,151,0],[183,6,151,6,"getInterpolateHSV"],[183,23,151,23],[184,4,151,23],[185,4,151,23],[185,25,152,2,"colors"],[185,31,152,38],[185,33,153,21],[186,6,155,2],[186,10,155,8,"h"],[186,11,155,9],[186,14,155,12],[186,16,155,14],[187,6,156,2],[187,10,156,8,"s"],[187,11,156,9],[187,14,156,12],[187,16,156,14],[188,6,157,2],[188,10,157,8,"v"],[188,11,157,9],[188,14,157,12],[188,16,157,14],[189,6,158,2],[189,10,158,8,"a"],[189,11,158,9],[189,14,158,12],[189,16,158,14],[190,6,159,2],[190,11,159,7],[190,15,159,11,"i"],[190,16,159,12],[190,19,159,15],[190,20,159,16],[190,22,159,18,"i"],[190,23,159,19],[190,26,159,22,"colors"],[190,32,159,28],[190,33,159,29,"length"],[190,39,159,35],[190,41,159,37],[190,43,159,39,"i"],[190,44,159,40],[190,46,159,42],[191,8,160,4],[191,12,160,10,"color"],[191,17,160,15],[191,20,160,18,"colors"],[191,26,160,24],[191,27,160,25,"i"],[191,28,160,26],[191,29,160,27],[192,8,161,4],[192,12,161,10,"processedColor"],[192,26,161,24],[192,29,161,27],[192,33,161,27,"processColor"],[192,88,161,39],[192,90,161,40,"color"],[192,95,161,45],[192,96,161,53],[193,8,162,4],[193,12,162,8],[193,19,162,15,"processedColor"],[193,33,162,29],[193,38,162,34],[193,46,162,42],[193,48,162,44],[194,10,163,6],[194,14,163,12,"processedHSVColor"],[194,31,163,29],[194,34,163,32],[194,38,163,32,"RGBtoHSV"],[194,89,163,40],[194,91,164,8],[194,95,164,8,"red"],[194,141,164,11],[194,143,164,12,"processedColor"],[194,157,164,26],[194,158,164,27],[194,160,165,8],[194,164,165,8,"green"],[194,212,165,13],[194,214,165,14,"processedColor"],[194,228,165,28],[194,229,165,29],[194,231,166,8],[194,235,166,8,"blue"],[194,282,166,12],[194,284,166,13,"processedColor"],[194,298,166,27],[194,299,166,28],[194,300,167,7],[195,10,169,6,"h"],[195,11,169,7],[195,12,169,8,"push"],[195,16,169,12],[195,17,169,13,"processedHSVColor"],[195,34,169,30],[195,35,169,31,"h"],[195,36,169,32],[195,37,169,33],[196,10,170,6,"s"],[196,11,170,7],[196,12,170,8,"push"],[196,16,170,12],[196,17,170,13,"processedHSVColor"],[196,34,170,30],[196,35,170,31,"s"],[196,36,170,32],[196,37,170,33],[197,10,171,6,"v"],[197,11,171,7],[197,12,171,8,"push"],[197,16,171,12],[197,17,171,13,"processedHSVColor"],[197,34,171,30],[197,35,171,31,"v"],[197,36,171,32],[197,37,171,33],[198,10,172,6,"a"],[198,11,172,7],[198,12,172,8,"push"],[198,16,172,12],[198,17,172,13],[198,21,172,13,"opacity"],[198,71,172,20],[198,73,172,21,"processedColor"],[198,87,172,35],[198,88,172,36],[198,89,172,37],[199,8,173,4],[200,6,174,2],[201,6,175,2],[201,13,175,9],[202,8,175,11,"h"],[202,9,175,12],[202,11,175,11,"h"],[202,12,175,12],[203,8,175,14,"s"],[203,9,175,15],[203,11,175,14,"s"],[203,12,175,15],[204,8,175,17,"v"],[204,9,175,18],[204,11,175,17,"v"],[204,12,175,18],[205,8,175,20,"a"],[205,9,175,21],[205,11,175,20,"a"],[206,6,175,22],[206,7,175,23],[207,4,176,0],[207,5,176,1],[208,4,176,1],[209,6,176,1],[209,20,8,28,"processColor"],[209,75,8,40],[210,6,8,40],[210,16,10,32,"RGBtoHSV"],[210,67,10,40],[211,6,10,40],[211,11,10,41,"red"],[211,57,10,44],[212,6,10,44],[212,13,10,62,"green"],[212,61,10,67],[213,6,10,67],[213,12,10,85,"blue"],[213,59,10,89],[214,6,10,89],[214,15,14,13,"opacity"],[215,4,14,20],[216,4,14,20],[217,4,14,20],[218,4,14,20],[219,4,14,20],[220,2,14,20],[220,5,176,1],[221,2,176,2],[222,4,176,2],[223,4,176,2],[224,4,176,2],[225,2,176,2],[226,2,178,7],[226,6,178,13,"interpolateColor"],[226,22,178,29],[227,4,178,29],[228,4,178,29],[228,25,179,2,"value"],[228,30,179,15],[228,32,180,2,"inputRange"],[228,42,180,31],[228,44,181,2,"outputRange"],[228,55,181,43],[228,57,184,22],[229,6,184,22],[229,10,182,2,"colorSpace"],[229,20,182,27],[229,91,182,30],[229,96,182,35],[230,6,182,35],[230,10,183,2,"options"],[230,17,183,31],[230,88,183,34],[230,89,183,35],[230,90,183,36],[231,6,186,2],[231,10,186,6,"colorSpace"],[231,20,186,16],[231,25,186,21],[231,30,186,26],[231,32,186,28],[232,8,187,4],[232,15,187,11,"interpolateColorsHSV"],[232,35,187,31],[232,36,188,6,"value"],[232,41,188,11],[232,43,189,6,"inputRange"],[232,53,189,16],[232,55,190,6,"getInterpolateHSV"],[232,72,190,23],[232,73,190,24,"outputRange"],[232,84,190,35],[232,85,190,36],[232,87,191,6,"options"],[232,94,191,13],[232,95,192,5],[233,6,193,2],[233,7,193,3],[233,13,193,9],[233,17,193,13,"colorSpace"],[233,27,193,23],[233,32,193,28],[233,37,193,33],[233,39,193,35],[234,8,194,4],[234,15,194,11,"interpolateColorsRGB"],[234,35,194,31],[234,36,195,6,"value"],[234,41,195,11],[234,43,196,6,"inputRange"],[234,53,196,16],[234,55,197,6,"getInterpolateRGB"],[234,72,197,23],[234,73,197,24,"outputRange"],[234,84,197,35],[234,85,197,36],[234,87,198,6,"options"],[234,94,198,13],[234,95,199,5],[235,6,200,2],[236,6,201,2],[236,12,201,8],[236,16,201,12,"Error"],[236,21,201,17],[236,22,202,5],[236,55,202,37,"colorSpace"],[236,65,202,48],[236,105,202,87],[236,106,203,3],[237,4,204,0],[237,5,204,1],[238,4,204,1],[239,6,204,1],[239,28,3,11,"interpolateColorsHSV"],[239,48,3,31],[240,6,3,31],[240,25,3,51,"getInterpolateHSV"],[240,42,3,68],[241,6,3,68],[241,28,5,11,"interpolateColorsRGB"],[241,48,5,31],[242,6,5,31],[242,25,5,51,"getInterpolateRGB"],[243,4,5,68],[244,4,5,68],[245,4,5,68],[246,4,5,68],[247,4,5,68],[248,2,5,68],[248,5,204,1],[249,2,204,2],[250,2,204,2],[250,6,206,12,"ColorSpace"],[250,16,206,22],[251,2,206,22],[252,2,206,22],[252,13,206,12,"ColorSpace"],[252,23,206,22],[253,4,206,12,"ColorSpace"],[253,14,206,22],[253,15,206,12,"ColorSpace"],[253,25,206,22],[254,4,206,12,"ColorSpace"],[254,14,206,22],[254,15,206,12,"ColorSpace"],[254,25,206,22],[255,2,206,22],[255,5,206,12,"ColorSpace"],[255,15,206,22],[255,41,206,12,"ColorSpace"],[255,51,206,22],[256,2,219,7],[256,11,219,16,"useInterpolateConfig"],[256,31,219,36],[256,32,220,2,"inputRange"],[256,42,220,31],[256,44,221,2,"outputRange"],[256,55,221,43],[256,57,224,34],[257,4,224,34],[257,8,222,2,"colorSpace"],[257,18,222,12],[257,89,222,15,"ColorSpace"],[257,99,222,25],[257,100,222,26,"RGB"],[257,103,222,29],[258,4,222,29],[258,8,223,2,"options"],[258,15,223,31],[258,86,223,34],[258,87,223,35],[258,88,223,36],[259,4,225,2],[259,11,225,9],[259,15,225,9,"useSharedValue"],[259,85,225,23],[259,87,225,43],[260,6,226,4,"inputRange"],[260,16,226,14],[260,18,226,4,"inputRange"],[260,28,226,14],[261,6,227,4,"outputRange"],[261,17,227,15],[261,19,227,4,"outputRange"],[261,30,227,15],[262,6,228,4,"colorSpace"],[262,16,228,14],[262,18,228,4,"colorSpace"],[262,28,228,14],[263,6,229,4,"cache"],[263,11,229,9],[263,13,229,11],[263,17,229,11,"makeMutable"],[263,69,229,22],[263,71,229,63],[263,75,229,67],[263,76,229,68],[264,6,230,4,"options"],[264,13,230,11],[264,15,230,4,"options"],[265,4,231,2],[265,5,231,3],[265,6,231,4],[266,2,232,0],[267,2,232,1],[268,4,232,1],[269,4,232,1],[270,4,232,1],[271,2,232,1],[272,2,234,7],[272,6,234,13,"interpolateSharableColor"],[272,30,234,37],[273,4,234,37],[274,4,234,37],[274,25,235,2,"value"],[274,30,235,15],[274,32,236,2,"interpolateConfig"],[274,49,236,51],[274,51,237,22],[275,6,239,2],[275,10,239,6,"colors"],[275,16,239,12],[275,19,239,15,"interpolateConfig"],[275,36,239,32],[275,37,239,33,"value"],[275,42,239,38],[275,43,239,39,"cache"],[275,48,239,44],[275,49,239,45,"value"],[275,54,239,50],[276,6,240,2],[276,10,240,6,"interpolateConfig"],[276,27,240,23],[276,28,240,24,"value"],[276,33,240,29],[276,34,240,30,"colorSpace"],[276,44,240,40],[276,49,240,45,"ColorSpace"],[276,59,240,55],[276,60,240,56,"RGB"],[276,63,240,59],[276,65,240,61],[277,8,241,4],[277,12,241,8],[277,13,241,9,"colors"],[277,19,241,15],[277,21,241,17],[278,10,242,6,"colors"],[278,16,242,12],[278,19,242,15,"getInterpolateRGB"],[278,36,242,32],[278,37,242,33,"interpolateConfig"],[278,54,242,50],[278,55,242,51,"value"],[278,60,242,56],[278,61,242,57,"outputRange"],[278,72,242,68],[278,73,242,69],[279,10,243,6,"interpolateConfig"],[279,27,243,23],[279,28,243,24,"value"],[279,33,243,29],[279,34,243,30,"cache"],[279,39,243,35],[279,40,243,36,"value"],[279,45,243,41],[279,48,243,44,"colors"],[279,54,243,50],[280,8,244,4],[281,8,245,4],[281,15,245,11,"interpolateColorsRGB"],[281,35,245,31],[281,36,246,6,"value"],[281,41,246,11],[281,43,247,6,"interpolateConfig"],[281,60,247,23],[281,61,247,24,"value"],[281,66,247,29],[281,67,247,30,"inputRange"],[281,77,247,40],[281,79,248,6,"colors"],[281,85,248,12],[281,87,249,6,"interpolateConfig"],[281,104,249,23],[281,105,249,24,"value"],[281,110,249,29],[281,111,249,30,"options"],[281,118,249,37],[281,119,250,5],[282,6,251,2],[282,7,251,3],[282,13,251,9],[282,17,251,13,"interpolateConfig"],[282,34,251,30],[282,35,251,31,"value"],[282,40,251,36],[282,41,251,37,"colorSpace"],[282,51,251,47],[282,56,251,52,"ColorSpace"],[282,66,251,62],[282,67,251,63,"HSV"],[282,70,251,66],[282,72,251,68],[283,8,252,4],[283,12,252,8],[283,13,252,9,"colors"],[283,19,252,15],[283,21,252,17],[284,10,253,6,"colors"],[284,16,253,12],[284,19,253,15,"getInterpolateHSV"],[284,36,253,32],[284,37,253,33,"interpolateConfig"],[284,54,253,50],[284,55,253,51,"value"],[284,60,253,56],[284,61,253,57,"outputRange"],[284,72,253,68],[284,73,253,69],[285,10,254,6,"interpolateConfig"],[285,27,254,23],[285,28,254,24,"value"],[285,33,254,29],[285,34,254,30,"cache"],[285,39,254,35],[285,40,254,36,"value"],[285,45,254,41],[285,48,254,44,"colors"],[285,54,254,50],[286,8,255,4],[287,8,256,4],[287,15,256,11,"interpolateColorsHSV"],[287,35,256,31],[287,36,257,6,"value"],[287,41,257,11],[287,43,258,6,"interpolateConfig"],[287,60,258,23],[287,61,258,24,"value"],[287,66,258,29],[287,67,258,30,"inputRange"],[287,77,258,40],[287,79,259,6,"colors"],[287,85,259,12],[287,87,260,6,"interpolateConfig"],[287,104,260,23],[287,105,260,24,"value"],[287,110,260,29],[287,111,260,30,"options"],[287,118,260,37],[287,119,261,5],[288,6,262,2],[289,6,263,2],[289,12,263,8],[289,16,263,12,"Error"],[289,21,263,17],[289,22,264,5],[289,55,264,37,"interpolateConfig"],[289,72,264,54],[289,73,264,55,"value"],[289,78,264,60],[289,79,264,61,"colorSpace"],[289,89,264,72],[289,129,264,111],[289,130,265,3],[290,4,266,0],[290,5,266,1],[291,4,266,1],[292,6,266,1],[292,18,9,52,"ColorSpace"],[292,28,9,62],[293,6,9,62],[293,25,5,15,"getInterpolateRGB"],[293,42,5,32],[294,6,5,32],[294,28,8,11,"interpolateColorsRGB"],[294,48,8,31],[295,6,8,31],[295,25,11,15,"getInterpolateHSV"],[295,42,11,32],[296,6,11,32],[296,28,14,11,"interpolateColorsHSV"],[297,4,14,31],[298,4,14,31],[299,4,14,31],[300,4,14,31],[301,4,14,31],[302,2,14,31],[302,5,266,1],[303,2,266,2],[304,0,266,2]],"functionMap":{"names":["<global>","interpolateColorsHSV","toLinearSpace","x.map$argument_0","toGammaSpace","interpolateColorsRGB","getInterpolateRGB","getInterpolateHSV","interpolateColor","useInterpolateConfig","interpolateSharableColor"],"mappings":"AAA;6BC0B;CD8C;sBEE;eCE,+BD;CFC;qBIE;CJG;6BKE;CL2B;0BMS;CNqB;0BOS;CPyB;gCQE;CR0B;OSe;CTa;wCUE;CVgC"}},"type":"js/module"}]}