{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}},{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}},{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}},{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}},{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}},{"start":{"line":22,"column":0,"index":451},"end":{"line":22,"column":66,"index":517}},{"start":{"line":23,"column":0,"index":518},"end":{"line":23,"column":66,"index":584}},{"start":{"line":24,"column":0,"index":585},"end":{"line":24,"column":36,"index":621}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12321}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":451},"end":{"line":22,"column":66,"index":517}}],"key":"FgxQzv74nv4TEARyMhTrzrRRqIo="}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":518},"end":{"line":23,"column":66,"index":584}}],"key":"gVaxfWXVRxL2zJT5JNlaaR/Xrgs="}},{"name":"./LogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":585},"end":{"line":24,"column":36,"index":621}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":677},"end":{"line":26,"column":31,"index":708}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../../Core/ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":102,"column":28,"index":2463},"end":{"line":102,"column":67,"index":2502}}],"key":"rh1lsYexuAEiAxWxhF9+r+tk2ws="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":224,"column":33,"index":5921},"end":{"line":224,"column":53,"index":5941},"identifierName":"parseLogBoxException"}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA=","isOptional":true}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":432,"column":8,"index":11055},"end":{"line":436,"column":10,"index":11230}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getAppInfo = getAppInfo;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setAppInfo = setAppInfo;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.setWarningFilter = setWarningFilter;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _parseErrorStack = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"../../Core/Devtools/parseErrorStack\"));\n  var _NativeLogBox = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"../../NativeModules/specs/NativeLogBox\"));\n  var _LogBoxLog = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[8], \"./LogBoxLog\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n  'use strict';\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[10], \"../../Core/ExceptionsManager\");\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error, true);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        _addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n    setImmediate(function () {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace == null ? void 0 : errorForStackTrace.stack);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _$$_REQUIRE(_dependencyMap[11], \"./parseLogBoxLog\").parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    patterns.forEach(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    logs = new Set(Array.from(logs).filter(function (log) {\n      return !isMessageIgnored(log.message.content);\n    }));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = function (_React$Component) {\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      var _super = _createSuper(LogBoxStateSubscription);\n      function LogBoxStateSubscription() {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        _this._handleDismiss = function () {\n          var _this$state = _this.state,\n            selectedLogIndex = _this$state.selectedLogIndex,\n            stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n        _this._handleMinimize = function () {\n          setSelectedLog(-1);\n        };\n        _this._handleSetSelectedLog = function (index) {\n          setSelectedLog(index);\n        };\n        return _this;\n      }\n      (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            return null;\n          }\n          return (0, _$$_REQUIRE(_dependencyMap[12], \"react/jsx-runtime\").jsx)(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n      return LogBoxStateSubscription;\n    }(React.Component);\n    return LogBoxStateSubscription;\n  }\n});","lineCount":377,"map":[[33,2,22,0],[34,2,23,0],[35,2,24,0],[36,2,26,0],[37,2,26,31],[38,2,26,31],[39,2,26,31],[40,2,26,31],[41,2,11,1],[41,14,11,13],[42,2,67,0],[42,6,67,6,"observers"],[42,15,67,47],[42,18,67,50],[42,22,67,54,"Set"],[42,25,67,57],[42,27,67,59],[43,2,68,0],[43,6,68,6,"ignorePatterns"],[43,20,68,40],[43,23,68,43],[43,27,68,47,"Set"],[43,30,68,50],[43,32,68,52],[44,2,69,0],[44,6,69,4,"appInfo"],[44,13,69,27],[44,16,69,30],[44,20,69,34],[45,2,70,0],[45,6,70,4,"logs"],[45,10,70,20],[45,13,70,23],[45,17,70,27,"Set"],[45,20,70,30],[45,22,70,32],[46,2,71,0],[46,6,71,4,"updateTimeout"],[46,19,71,36],[46,22,71,39],[46,26,71,43],[47,2,72,0],[47,6,72,4,"_isDisabled"],[47,17,72,15],[47,20,72,18],[47,25,72,23],[48,2,73,0],[48,6,73,4,"_selectedIndex"],[48,20,73,18],[48,23,73,21],[48,24,73,22],[48,25,73,23],[49,2,75,0],[49,6,75,4,"warningFilter"],[49,19,75,32],[49,22,75,35],[49,45,75,45,"format"],[49,51,75,51],[49,53,75,53],[50,4,76,2],[50,11,76,9],[51,6,77,4,"finalFormat"],[51,17,77,15],[51,19,77,17,"format"],[51,25,77,23],[52,6,78,4,"forceDialogImmediately"],[52,28,78,26],[52,30,78,28],[52,35,78,33],[53,6,79,4,"suppressDialog_LEGACY"],[53,27,79,25],[53,29,79,27],[53,33,79,31],[54,6,80,4,"suppressCompletely"],[54,24,80,22],[54,26,80,24],[54,31,80,29],[55,6,81,4,"monitorEvent"],[55,18,81,16],[55,20,81,18],[55,29,81,27],[56,6,82,4,"monitorListVersion"],[56,24,82,22],[56,26,82,24],[56,27,82,25],[57,6,83,4,"monitorSampleRate"],[57,23,83,21],[57,25,83,23],[58,4,84,2],[58,5,84,3],[59,2,85,0],[59,3,85,1],[60,2,87,0],[60,6,87,6,"LOGBOX_ERROR_MESSAGE"],[60,26,87,26],[60,29,88,2],[60,101,88,74],[61,2,90,0],[61,11,90,9,"getNextState"],[61,23,90,21],[61,26,90,24],[62,4,91,2],[62,11,91,9],[63,6,92,4,"logs"],[63,10,92,8],[63,12,92,4,"logs"],[63,16,92,8],[64,6,93,4,"isDisabled"],[64,16,93,14],[64,18,93,16,"_isDisabled"],[64,29,93,27],[65,6,94,4,"selectedLogIndex"],[65,22,94,20],[65,24,94,22,"_selectedIndex"],[66,4,95,2],[66,5,95,3],[67,2,96,0],[68,2,98,7],[68,11,98,16,"reportLogBoxError"],[68,28,98,33],[68,29,99,2,"error"],[68,34,99,22],[68,36,100,2,"componentStack"],[68,50,100,25],[68,52,101,8],[69,4,102,2],[69,8,102,8,"ExceptionsManager"],[69,25,102,25],[69,28,102,28,"require"],[69,39,102,35],[69,91,102,67],[70,4,104,2,"error"],[70,9,104,7],[70,10,104,8,"message"],[70,17,104,15],[70,20,104,19],[70,23,104,21,"LOGBOX_ERROR_MESSAGE"],[70,43,104,42],[70,50,104,48,"error"],[70,55,104,53],[70,56,104,54,"message"],[70,63,104,62],[70,65,104,63],[71,4,105,2],[71,8,105,6,"componentStack"],[71,22,105,20],[71,26,105,24],[71,30,105,28],[71,32,105,30],[72,6,106,4,"error"],[72,11,106,9],[72,12,106,10,"componentStack"],[72,26,106,24],[72,29,106,27,"componentStack"],[72,43,106,41],[73,4,107,2],[74,4,108,2,"ExceptionsManager"],[74,21,108,19],[74,22,108,20,"handleException"],[74,37,108,35],[74,38,108,36,"error"],[74,43,108,41],[74,45,108,57],[74,49,108,61],[74,50,108,62],[75,2,109,0],[76,2,111,7],[76,11,111,16,"isLogBoxErrorMessage"],[76,31,111,36],[76,32,111,37,"message"],[76,39,111,52],[76,41,111,63],[77,4,112,2],[77,11,112,9],[77,18,112,16,"message"],[77,25,112,23],[77,30,112,28],[77,38,112,36],[77,42,112,40,"message"],[77,49,112,47],[77,50,112,48,"includes"],[77,58,112,56],[77,59,112,57,"LOGBOX_ERROR_MESSAGE"],[77,79,112,77],[77,80,112,78],[78,2,113,0],[79,2,115,7],[79,11,115,16,"isMessageIgnored"],[79,27,115,32],[79,28,115,33,"message"],[79,35,115,48],[79,37,115,59],[80,4,116,2],[80,9,116,7],[80,13,116,13,"pattern"],[80,20,116,20],[80,24,116,24,"ignorePatterns"],[80,38,116,38],[80,40,116,40],[81,6,117,4],[81,10,118,7,"pattern"],[81,17,118,14],[81,29,118,26,"RegExp"],[81,35,118,32],[81,39,118,36,"pattern"],[81,46,118,43],[81,47,118,44,"test"],[81,51,118,48],[81,52,118,49,"message"],[81,59,118,56],[81,60,118,57],[81,64,119,7],[81,71,119,14,"pattern"],[81,78,119,21],[81,83,119,26],[81,91,119,34],[81,95,119,38,"message"],[81,102,119,45],[81,103,119,46,"includes"],[81,111,119,54],[81,112,119,55,"pattern"],[81,119,119,62],[81,120,119,64],[81,122,120,6],[82,8,121,6],[82,15,121,13],[82,19,121,17],[83,6,122,4],[84,4,123,2],[85,4,124,2],[85,11,124,9],[85,16,124,14],[86,2,125,0],[87,2,127,0],[87,11,127,9,"handleUpdate"],[87,23,127,21],[87,26,127,30],[88,4,128,2],[88,8,128,6,"updateTimeout"],[88,21,128,19],[88,25,128,23],[88,29,128,27],[88,31,128,29],[89,6,129,4,"updateTimeout"],[89,19,129,17],[89,22,129,20,"setImmediate"],[89,34,129,32],[89,35,129,33],[89,47,129,39],[90,8,130,6,"updateTimeout"],[90,21,130,19],[90,24,130,22],[90,28,130,26],[91,8,131,6],[91,12,131,12,"nextState"],[91,21,131,21],[91,24,131,24,"getNextState"],[91,36,131,36],[91,38,131,38],[92,8,132,6,"observers"],[92,17,132,15],[92,18,132,16,"forEach"],[92,25,132,23],[92,26,132,24],[93,10,132,24],[93,14,132,26,"observer"],[93,22,132,34],[93,30,132,26,"observer"],[93,38,132,34],[94,10,132,34],[94,17,132,40,"observer"],[94,25,132,48],[94,26,132,49,"nextState"],[94,35,132,58],[94,36,132,59],[95,8,132,59],[95,10,132,60],[96,6,133,4],[96,7,133,5],[96,8,133,6],[97,4,134,2],[98,2,135,0],[99,2,137,0],[99,11,137,9,"appendNewLog"],[99,23,137,21],[99,24,137,22,"newLog"],[99,30,137,39],[99,32,137,41],[100,4,140,2],[100,8,140,6,"isMessageIgnored"],[100,24,140,22],[100,25,140,23,"newLog"],[100,31,140,29],[100,32,140,30,"message"],[100,39,140,37],[100,40,140,38,"content"],[100,47,140,45],[100,48,140,46],[100,50,140,48],[101,6,141,4],[102,4,142,2],[103,4,147,2],[103,8,147,8,"lastLog"],[103,15,147,15],[103,18,147,18,"Array"],[103,23,147,23],[103,24,147,24,"from"],[103,28,147,28],[103,29,147,29,"logs"],[103,33,147,33],[103,34,147,34],[103,35,147,35,"pop"],[103,38,147,38],[103,40,147,40],[104,4,148,2],[104,8,148,6,"lastLog"],[104,15,148,13],[104,19,148,17,"lastLog"],[104,26,148,24],[104,27,148,25,"category"],[104,35,148,33],[104,40,148,38,"newLog"],[104,46,148,44],[104,47,148,45,"category"],[104,55,148,53],[104,57,148,55],[105,6,149,4,"lastLog"],[105,13,149,11],[105,14,149,12,"incrementCount"],[105,28,149,26],[105,30,149,28],[106,6,150,4,"handleUpdate"],[106,18,150,16],[106,20,150,18],[107,6,151,4],[108,4,152,2],[109,4,154,2],[109,8,154,6,"newLog"],[109,14,154,12],[109,15,154,13,"level"],[109,20,154,18],[109,25,154,23],[109,32,154,30],[109,34,154,32],[110,6,158,4],[110,10,158,10,"OPTIMISTIC_WAIT_TIME"],[110,30,158,30],[110,33,158,33],[110,37,158,37],[111,6,160,4],[111,10,160,8,"addPendingLog"],[111,24,160,34],[111,27,160,37],[111,52,160,43],[112,8,161,6,"logs"],[112,12,161,10],[112,13,161,11,"add"],[112,16,161,14],[112,17,161,15,"newLog"],[112,23,161,21],[112,24,161,22],[113,8,162,6],[113,12,162,10,"_selectedIndex"],[113,26,162,24],[113,29,162,27],[113,30,162,28],[113,32,162,30],[114,10,163,8,"setSelectedLog"],[114,24,163,22],[114,25,163,23,"logs"],[114,29,163,27],[114,30,163,28,"size"],[114,34,163,32],[114,37,163,35],[114,38,163,36],[114,39,163,37],[115,8,164,6],[115,9,164,7],[115,15,164,13],[116,10,165,8,"handleUpdate"],[116,22,165,20],[116,24,165,22],[117,8,166,6],[118,8,167,6,"addPendingLog"],[118,22,167,19],[118,25,167,22],[118,29,167,26],[119,6,168,4],[119,7,168,5],[120,6,170,4],[120,10,170,10,"optimisticTimeout"],[120,27,170,27],[120,30,170,30,"setTimeout"],[120,40,170,40],[120,41,170,41],[120,53,170,47],[121,8,171,6],[121,12,171,10,"addPendingLog"],[121,26,171,23],[121,28,171,25],[122,10,172,8,"addPendingLog"],[122,24,172,21],[122,26,172,23],[123,8,173,6],[124,6,174,4],[124,7,174,5],[124,9,174,7,"OPTIMISTIC_WAIT_TIME"],[124,29,174,27],[124,30,174,28],[125,6,176,4,"newLog"],[125,12,176,10],[125,13,176,11,"symbolicate"],[125,24,176,22],[125,25,176,23],[125,35,176,23,"status"],[125,41,176,29],[125,43,176,33],[126,8,177,6],[126,12,177,10,"addPendingLog"],[126,26,177,23],[126,30,177,27,"status"],[126,36,177,33],[126,41,177,38],[126,50,177,47],[126,52,177,49],[127,10,178,8,"addPendingLog"],[127,24,178,21],[127,26,178,23],[128,10,179,8,"clearTimeout"],[128,22,179,20],[128,23,179,21,"optimisticTimeout"],[128,40,179,38],[128,41,179,39],[129,8,180,6],[129,9,180,7],[129,15,180,13],[129,19,180,17,"status"],[129,25,180,23],[129,30,180,28],[129,39,180,37],[129,41,180,39],[130,10,182,8,"handleUpdate"],[130,22,182,20],[130,24,182,22],[131,8,183,6],[132,6,184,4],[132,7,184,5],[132,8,184,6],[133,4,185,2],[133,5,185,3],[133,11,185,9],[133,15,185,13,"newLog"],[133,21,185,19],[133,22,185,20,"level"],[133,27,185,25],[133,32,185,30],[133,40,185,38],[133,42,185,40],[134,6,186,4,"logs"],[134,10,186,8],[134,11,186,9,"add"],[134,14,186,12],[134,15,186,13,"newLog"],[134,21,186,19],[134,22,186,20],[135,6,187,4,"setSelectedLog"],[135,20,187,18],[135,21,187,19,"logs"],[135,25,187,23],[135,26,187,24,"size"],[135,30,187,28],[135,33,187,31],[135,34,187,32],[135,35,187,33],[136,4,188,2],[136,5,188,3],[136,11,188,9],[137,6,189,4,"logs"],[137,10,189,8],[137,11,189,9,"add"],[137,14,189,12],[137,15,189,13,"newLog"],[137,21,189,19],[137,22,189,20],[138,6,190,4,"handleUpdate"],[138,18,190,16],[138,20,190,18],[139,4,191,2],[140,2,192,0],[141,2,194,7],[141,11,194,16,"addLog"],[141,17,194,22],[141,18,194,23,"log"],[141,21,194,35],[141,23,194,43],[142,4,195,2],[142,8,195,8,"errorForStackTrace"],[142,26,195,26],[142,29,195,29],[142,33,195,33,"Error"],[142,38,195,38],[142,40,195,40],[143,4,199,2,"setImmediate"],[143,16,199,14],[143,17,199,15],[143,29,199,21],[144,6,200,4],[144,10,200,8],[145,8,201,6],[145,12,201,12,"stack"],[145,17,201,17],[145,20,201,20],[145,24,201,20,"parseErrorStack"],[145,48,201,35],[145,50,201,36,"errorForStackTrace"],[145,68,201,54],[145,88,201,36,"errorForStackTrace"],[145,106,201,54],[145,107,201,56,"stack"],[145,112,201,61],[145,113,201,62],[146,8,203,6,"appendNewLog"],[146,20,203,18],[146,21,204,8],[146,25,204,12,"LogBoxLog"],[146,43,204,21],[146,44,204,22],[147,10,205,10,"level"],[147,15,205,15],[147,17,205,17,"log"],[147,20,205,20],[147,21,205,21,"level"],[147,26,205,26],[148,10,206,10,"message"],[148,17,206,17],[148,19,206,19,"log"],[148,22,206,22],[148,23,206,23,"message"],[148,30,206,30],[149,10,207,10,"isComponentError"],[149,26,207,26],[149,28,207,28],[149,33,207,33],[150,10,208,10,"stack"],[150,15,208,15],[150,17,208,10,"stack"],[150,22,208,15],[151,10,209,10,"category"],[151,18,209,18],[151,20,209,20,"log"],[151,23,209,23],[151,24,209,24,"category"],[151,32,209,32],[152,10,210,10,"componentStack"],[152,24,210,24],[152,26,210,26,"log"],[152,29,210,29],[152,30,210,30,"componentStack"],[153,8,211,8],[153,9,211,9],[153,10,211,10],[153,11,212,7],[154,6,213,4],[154,7,213,5],[154,8,213,6],[154,15,213,13,"error"],[154,20,213,18],[154,22,213,20],[155,8,214,6,"reportLogBoxError"],[155,25,214,23],[155,26,214,24,"error"],[155,31,214,29],[155,32,214,30],[156,6,215,4],[157,4,216,2],[157,5,216,3],[157,6,216,4],[158,2,217,0],[159,2,219,7],[159,11,219,16,"addException"],[159,23,219,28],[159,24,219,29,"error"],[159,29,219,57],[159,31,219,65],[160,4,222,2,"setImmediate"],[160,16,222,14],[160,17,222,15],[160,29,222,21],[161,6,223,4],[161,10,223,8],[162,8,224,6,"appendNewLog"],[162,20,224,18],[162,21,224,19],[162,25,224,23,"LogBoxLog"],[162,43,224,32],[162,44,224,33],[162,48,224,33,"parseLogBoxException"],[162,120,224,53],[162,122,224,54,"error"],[162,127,224,59],[162,128,224,60],[162,129,224,61],[162,130,224,62],[163,6,225,4],[163,7,225,5],[163,8,225,6],[163,15,225,13,"loggingError"],[163,27,225,25],[163,29,225,27],[164,8,226,6,"reportLogBoxError"],[164,25,226,23],[164,26,226,24,"loggingError"],[164,38,226,36],[164,39,226,37],[165,6,227,4],[166,4,228,2],[166,5,228,3],[166,6,228,4],[167,2,229,0],[168,2,231,7],[168,11,231,16,"symbolicateLogNow"],[168,28,231,33],[168,29,231,34,"log"],[168,32,231,48],[168,34,231,50],[169,4,232,2,"log"],[169,7,232,5],[169,8,232,6,"symbolicate"],[169,19,232,17],[169,20,232,18],[169,32,232,24],[170,6,233,4,"handleUpdate"],[170,18,233,16],[170,20,233,18],[171,4,234,2],[171,5,234,3],[171,6,234,4],[172,2,235,0],[173,2,237,7],[173,11,237,16,"retrySymbolicateLogNow"],[173,33,237,38],[173,34,237,39,"log"],[173,37,237,53],[173,39,237,55],[174,4,238,2,"log"],[174,7,238,5],[174,8,238,6,"retrySymbolicate"],[174,24,238,22],[174,25,238,23],[174,37,238,29],[175,6,239,4,"handleUpdate"],[175,18,239,16],[175,20,239,18],[176,4,240,2],[176,5,240,3],[176,6,240,4],[177,2,241,0],[178,2,243,7],[178,11,243,16,"symbolicateLogLazy"],[178,29,243,34],[178,30,243,35,"log"],[178,33,243,49],[178,35,243,51],[179,4,244,2,"log"],[179,7,244,5],[179,8,244,6,"symbolicate"],[179,19,244,17],[179,21,244,19],[180,2,245,0],[181,2,247,7],[181,11,247,16,"clear"],[181,16,247,21],[181,19,247,30],[182,4,248,2],[182,8,248,6,"logs"],[182,12,248,10],[182,13,248,11,"size"],[182,17,248,15],[182,20,248,18],[182,21,248,19],[182,23,248,21],[183,6,249,4,"logs"],[183,10,249,8],[183,13,249,11],[183,17,249,15,"Set"],[183,20,249,18],[183,22,249,20],[184,6,250,4,"setSelectedLog"],[184,20,250,18],[184,21,250,19],[184,22,250,20],[184,23,250,21],[184,24,250,22],[185,4,251,2],[186,2,252,0],[187,2,254,7],[187,11,254,16,"setSelectedLog"],[187,25,254,30],[187,26,254,31,"proposedNewIndex"],[187,42,254,55],[187,44,254,63],[188,4,255,2],[188,8,255,8,"oldIndex"],[188,16,255,16],[188,19,255,19,"_selectedIndex"],[188,33,255,33],[189,4,256,2],[189,8,256,6,"newIndex"],[189,16,256,14],[189,19,256,17,"proposedNewIndex"],[189,35,256,33],[190,4,258,2],[190,8,258,8,"logArray"],[190,16,258,16],[190,19,258,19,"Array"],[190,24,258,24],[190,25,258,25,"from"],[190,29,258,29],[190,30,258,30,"logs"],[190,34,258,34],[190,35,258,35],[191,4,259,2],[191,8,259,6,"index"],[191,13,259,11],[191,16,259,14,"logArray"],[191,24,259,22],[191,25,259,23,"length"],[191,31,259,29],[191,34,259,32],[191,35,259,33],[192,4,260,2],[192,11,260,9,"index"],[192,16,260,14],[192,20,260,18],[192,21,260,19],[192,23,260,21],[193,6,262,4],[193,10,262,8,"logArray"],[193,18,262,16],[193,19,262,17,"index"],[193,24,262,22],[193,25,262,23],[193,26,262,24,"level"],[193,31,262,29],[193,36,262,34],[193,44,262,42],[193,46,262,44],[194,8,263,6,"newIndex"],[194,16,263,14],[194,19,263,17,"index"],[194,24,263,22],[195,8,264,6],[196,6,265,4],[197,6,266,4,"index"],[197,11,266,9],[197,15,266,13],[197,16,266,14],[198,4,267,2],[199,4,268,2,"_selectedIndex"],[199,18,268,16],[199,21,268,19,"newIndex"],[199,29,268,27],[200,4,269,2,"handleUpdate"],[200,16,269,14],[200,18,269,16],[201,4,270,2],[201,8,270,6,"NativeLogBox"],[201,29,270,18],[201,31,270,20],[202,6,271,4,"setTimeout"],[202,16,271,14],[202,17,271,15],[202,29,271,21],[203,8,272,6],[203,12,272,10,"oldIndex"],[203,20,272,18],[203,23,272,21],[203,24,272,22],[203,28,272,26,"newIndex"],[203,36,272,34],[203,40,272,38],[203,41,272,39],[203,43,272,41],[204,10,273,8,"NativeLogBox"],[204,31,273,20],[204,32,273,21,"show"],[204,36,273,25],[204,38,273,27],[205,8,274,6],[205,9,274,7],[205,15,274,13],[205,19,274,17,"oldIndex"],[205,27,274,25],[205,31,274,29],[205,32,274,30],[205,36,274,34,"newIndex"],[205,44,274,42],[205,47,274,45],[205,48,274,46],[205,50,274,48],[206,10,275,8,"NativeLogBox"],[206,31,275,20],[206,32,275,21,"hide"],[206,36,275,25],[206,38,275,27],[207,8,276,6],[208,6,277,4],[208,7,277,5],[208,9,277,7],[208,10,277,8],[208,11,277,9],[209,4,278,2],[210,2,279,0],[211,2,281,7],[211,11,281,16,"clearWarnings"],[211,24,281,29],[211,27,281,38],[212,4,282,2],[212,8,282,8,"newLogs"],[212,15,282,15],[212,18,282,18,"Array"],[212,23,282,23],[212,24,282,24,"from"],[212,28,282,28],[212,29,282,29,"logs"],[212,33,282,33],[212,34,282,34],[212,35,282,35,"filter"],[212,41,282,41],[212,42,282,42],[212,52,282,42,"log"],[212,55,282,45],[213,6,282,45],[213,13,282,49,"log"],[213,16,282,52],[213,17,282,53,"level"],[213,22,282,58],[213,27,282,63],[213,33,282,69],[214,4,282,69],[214,6,282,70],[215,4,283,2],[215,8,283,6,"newLogs"],[215,15,283,13],[215,16,283,14,"length"],[215,22,283,20],[215,27,283,25,"logs"],[215,31,283,29],[215,32,283,30,"size"],[215,36,283,34],[215,38,283,36],[216,6,284,4,"logs"],[216,10,284,8],[216,13,284,11],[216,17,284,15,"Set"],[216,20,284,18],[216,21,284,19,"newLogs"],[216,28,284,26],[216,29,284,27],[217,6,285,4,"setSelectedLog"],[217,20,285,18],[217,21,285,19],[217,22,285,20],[217,23,285,21],[217,24,285,22],[218,6,286,4,"handleUpdate"],[218,18,286,16],[218,20,286,18],[219,4,287,2],[220,2,288,0],[221,2,290,7],[221,11,290,16,"clearErrors"],[221,22,290,27],[221,25,290,36],[222,4,291,2],[222,8,291,8,"newLogs"],[222,15,291,15],[222,18,291,18,"Array"],[222,23,291,23],[222,24,291,24,"from"],[222,28,291,28],[222,29,291,29,"logs"],[222,33,291,33],[222,34,291,34],[222,35,291,35,"filter"],[222,41,291,41],[222,42,292,4],[222,52,292,4,"log"],[222,55,292,7],[223,6,292,7],[223,13,292,11,"log"],[223,16,292,14],[223,17,292,15,"level"],[223,22,292,20],[223,27,292,25],[223,34,292,32],[223,38,292,36,"log"],[223,41,292,39],[223,42,292,40,"level"],[223,47,292,45],[223,52,292,50],[223,59,292,57],[224,4,292,57],[224,6,293,3],[225,4,294,2],[225,8,294,6,"newLogs"],[225,15,294,13],[225,16,294,14,"length"],[225,22,294,20],[225,27,294,25,"logs"],[225,31,294,29],[225,32,294,30,"size"],[225,36,294,34],[225,38,294,36],[226,6,295,4,"logs"],[226,10,295,8],[226,13,295,11],[226,17,295,15,"Set"],[226,20,295,18],[226,21,295,19,"newLogs"],[226,28,295,26],[226,29,295,27],[227,6,296,4,"setSelectedLog"],[227,20,296,18],[227,21,296,19],[227,22,296,20],[227,23,296,21],[227,24,296,22],[228,4,297,2],[229,2,298,0],[230,2,300,7],[230,11,300,16,"dismiss"],[230,18,300,23],[230,19,300,24,"log"],[230,22,300,38],[230,24,300,46],[231,4,301,2],[231,8,301,6,"logs"],[231,12,301,10],[231,13,301,11,"has"],[231,16,301,14],[231,17,301,15,"log"],[231,20,301,18],[231,21,301,19],[231,23,301,21],[232,6,302,4,"logs"],[232,10,302,8],[232,11,302,9,"delete"],[232,17,302,15],[232,18,302,16,"log"],[232,21,302,19],[232,22,302,20],[233,6,303,4,"handleUpdate"],[233,18,303,16],[233,20,303,18],[234,4,304,2],[235,2,305,0],[236,2,307,7],[236,11,307,16,"setWarningFilter"],[236,27,307,32],[236,28,307,33,"filter"],[236,34,307,54],[236,36,307,62],[237,4,308,2,"warningFilter"],[237,17,308,15],[237,20,308,18,"filter"],[237,26,308,24],[238,2,309,0],[239,2,311,7],[239,11,311,16,"setAppInfo"],[239,21,311,26],[239,22,311,27,"info"],[239,26,311,46],[239,28,311,54],[240,4,312,2,"appInfo"],[240,11,312,9],[240,14,312,12,"info"],[240,18,312,16],[241,2,313,0],[242,2,315,7],[242,11,315,16,"getAppInfo"],[242,21,315,26],[242,24,315,39],[243,4,316,2],[243,11,316,9,"appInfo"],[243,18,316,16],[243,22,316,20],[243,26,316,24],[243,29,316,27,"appInfo"],[243,36,316,34],[243,38,316,36],[243,41,316,39],[243,45,316,43],[244,2,317,0],[245,2,319,7],[245,11,319,16,"checkWarningFilter"],[245,29,319,34],[245,30,319,35,"format"],[245,36,319,49],[245,38,319,64],[246,4,320,2],[246,11,320,9,"warningFilter"],[246,24,320,22],[246,25,320,23,"format"],[246,31,320,29],[246,32,320,30],[247,2,321,0],[248,2,323,7],[248,11,323,16,"getIgnorePatterns"],[248,28,323,33],[248,31,323,67],[249,4,324,2],[249,11,324,9,"Array"],[249,16,324,14],[249,17,324,15,"from"],[249,21,324,19],[249,22,324,20,"ignorePatterns"],[249,36,324,34],[249,37,324,35],[250,2,325,0],[251,2,327,7],[251,11,327,16,"addIgnorePatterns"],[251,28,327,33],[251,29,328,2,"patterns"],[251,37,328,41],[251,39,329,8],[252,4,330,2],[252,8,330,8,"existingSize"],[252,20,330,20],[252,23,330,23,"ignorePatterns"],[252,37,330,37],[252,38,330,38,"size"],[252,42,330,42],[253,4,333,2,"patterns"],[253,12,333,10],[253,13,333,11,"forEach"],[253,20,333,18],[253,21,333,19],[253,31,333,20,"pattern"],[253,38,333,42],[253,40,333,47],[254,6,334,4],[254,10,334,8,"pattern"],[254,17,334,15],[254,29,334,27,"RegExp"],[254,35,334,33],[254,37,334,35],[255,8,335,6],[255,13,335,11],[255,17,335,17,"existingPattern"],[255,32,335,32],[255,36,335,36,"ignorePatterns"],[255,50,335,50],[255,52,335,52],[256,10,336,8],[256,14,337,10,"existingPattern"],[256,29,337,25],[256,41,337,37,"RegExp"],[256,47,337,43],[256,51,338,10,"existingPattern"],[256,66,338,25],[256,67,338,26,"toString"],[256,75,338,34],[256,77,338,36],[256,82,338,41,"pattern"],[256,89,338,48],[256,90,338,49,"toString"],[256,98,338,57],[256,100,338,59],[256,102,339,10],[257,12,340,10],[258,10,341,8],[259,8,342,6],[260,8,343,6,"ignorePatterns"],[260,22,343,20],[260,23,343,21,"add"],[260,26,343,24],[260,27,343,25,"pattern"],[260,34,343,32],[260,35,343,33],[261,6,344,4],[262,6,345,4,"ignorePatterns"],[262,20,345,18],[262,21,345,19,"add"],[262,24,345,22],[262,25,345,23,"pattern"],[262,32,345,30],[262,33,345,31],[263,4,346,2],[263,5,346,3],[263,6,346,4],[264,4,347,2],[264,8,347,6,"ignorePatterns"],[264,22,347,20],[264,23,347,21,"size"],[264,27,347,25],[264,32,347,30,"existingSize"],[264,44,347,42],[264,46,347,44],[265,6,348,4],[266,4,349,2],[267,4,354,2,"logs"],[267,8,354,6],[267,11,354,9],[267,15,354,13,"Set"],[267,18,354,16],[267,19,355,4,"Array"],[267,24,355,9],[267,25,355,10,"from"],[267,29,355,14],[267,30,355,15,"logs"],[267,34,355,19],[267,35,355,20],[267,36,355,21,"filter"],[267,42,355,27],[267,43,355,28],[267,53,355,28,"log"],[267,56,355,31],[268,6,355,31],[268,13,355,35],[268,14,355,36,"isMessageIgnored"],[268,30,355,52],[268,31,355,53,"log"],[268,34,355,56],[268,35,355,57,"message"],[268,42,355,64],[268,43,355,65,"content"],[268,50,355,72],[268,51,355,73],[269,4,355,73],[269,6,355,74],[269,7,356,3],[270,4,357,2,"handleUpdate"],[270,16,357,14],[270,18,357,16],[271,2,358,0],[272,2,360,7],[272,11,360,16,"setDisabled"],[272,22,360,27],[272,23,360,28,"value"],[272,28,360,42],[272,30,360,50],[273,4,361,2],[273,8,361,6,"value"],[273,13,361,11],[273,18,361,16,"_isDisabled"],[273,29,361,27],[273,31,361,29],[274,6,362,4],[275,4,363,2],[276,4,364,2,"_isDisabled"],[276,15,364,13],[276,18,364,16,"value"],[276,23,364,21],[277,4,365,2,"handleUpdate"],[277,16,365,14],[277,18,365,16],[278,2,366,0],[279,2,368,7],[279,11,368,16,"isDisabled"],[279,21,368,26],[279,24,368,38],[280,4,369,2],[280,11,369,9,"_isDisabled"],[280,22,369,20],[281,2,370,0],[282,2,372,7],[282,11,372,16,"observe"],[282,18,372,23],[282,19,372,24,"observer"],[282,27,372,42],[282,29,372,58],[283,4,373,2],[283,8,373,8,"subscription"],[283,20,373,20],[283,23,373,23],[284,6,373,24,"observer"],[284,14,373,32],[284,16,373,24,"observer"],[285,4,373,32],[285,5,373,33],[286,4,374,2,"observers"],[286,13,374,11],[286,14,374,12,"add"],[286,17,374,15],[286,18,374,16,"subscription"],[286,30,374,28],[286,31,374,29],[287,4,376,2,"observer"],[287,12,376,10],[287,13,376,11,"getNextState"],[287,25,376,23],[287,27,376,25],[287,28,376,26],[288,4,378,2],[288,11,378,9],[289,6,379,4,"unsubscribe"],[289,17,379,15],[289,42,379,24],[290,8,380,6,"observers"],[290,17,380,15],[290,18,380,16,"delete"],[290,24,380,22],[290,25,380,23,"subscription"],[290,37,380,35],[290,38,380,36],[291,6,381,4],[292,4,382,2],[292,5,382,3],[293,2,383,0],[294,2,401,7],[294,11,401,16,"withSubscription"],[294,27,401,32],[294,28,402,2,"WrappedComponent"],[294,44,402,39],[294,46,403,33],[295,4,403,33],[295,8,404,8,"LogBoxStateSubscription"],[295,31,404,31],[296,6,404,31],[297,6,404,31],[298,6,404,31],[299,8,404,31],[300,8,404,31],[301,8,404,31],[302,10,404,31],[303,8,404,31],[304,8,404,31],[305,8,404,31],[305,14,417,4,"state"],[305,19,417,9],[305,22,417,19],[306,10,418,6,"logs"],[306,14,418,10],[306,16,418,12],[306,20,418,16,"Set"],[306,23,418,19],[306,25,418,21],[307,10,419,6,"isDisabled"],[307,20,419,16],[307,22,419,18],[307,27,419,23],[308,10,420,6,"hasError"],[308,18,420,14],[308,20,420,16],[308,25,420,21],[309,10,421,6,"selectedLogIndex"],[309,26,421,22],[309,28,421,24],[309,29,421,25],[310,8,422,4],[310,9,422,5],[311,8,422,5],[311,14,452,4,"_handleDismiss"],[311,28,452,18],[311,31,452,21],[311,43,452,33],[312,10,456,6],[312,28,456,50],[312,34,456,55,"state"],[312,39,456,60],[313,12,456,13,"selectedLogIndex"],[313,28,456,29],[313,43,456,13,"selectedLogIndex"],[313,59,456,29],[314,12,456,37,"stateLogs"],[314,21,456,46],[314,36,456,31,"logs"],[314,40,456,35],[315,10,457,6],[315,14,457,12,"logsArray"],[315,23,457,21],[315,26,457,24,"Array"],[315,31,457,29],[315,32,457,30,"from"],[315,36,457,34],[315,37,457,35,"stateLogs"],[315,46,457,44],[315,47,457,45],[316,10,458,6],[316,14,458,10,"selectedLogIndex"],[316,30,458,26],[316,34,458,30],[316,38,458,34],[316,40,458,36],[317,12,459,8],[317,16,459,12,"logsArray"],[317,25,459,21],[317,26,459,22,"length"],[317,32,459,28],[317,35,459,31],[317,36,459,32],[317,40,459,36],[317,41,459,37],[317,43,459,39],[318,14,460,10,"setSelectedLog"],[318,28,460,24],[318,29,460,25],[318,30,460,26],[318,31,460,27],[318,32,460,28],[319,12,461,8],[319,13,461,9],[319,19,461,15],[319,23,461,19,"selectedLogIndex"],[319,39,461,35],[319,43,461,39,"logsArray"],[319,52,461,48],[319,53,461,49,"length"],[319,59,461,55],[319,62,461,58],[319,63,461,59],[319,65,461,61],[320,14,462,10,"setSelectedLog"],[320,28,462,24],[320,29,462,25,"selectedLogIndex"],[320,45,462,41],[320,48,462,44],[320,49,462,45],[320,50,462,46],[321,12,463,8],[322,12,465,8,"dismiss"],[322,19,465,15],[322,20,465,16,"logsArray"],[322,29,465,25],[322,30,465,26,"selectedLogIndex"],[322,46,465,42],[322,47,465,43],[322,48,465,44],[323,10,466,6],[324,8,467,4],[324,9,467,5],[325,8,467,5],[325,14,469,4,"_handleMinimize"],[325,29,469,19],[325,32,469,22],[325,44,469,34],[326,10,470,6,"setSelectedLog"],[326,24,470,20],[326,25,470,21],[326,26,470,22],[326,27,470,23],[326,28,470,24],[327,8,471,4],[327,9,471,5],[328,8,471,5],[328,14,473,4,"_handleSetSelectedLog"],[328,35,473,25],[328,38,473,28],[328,48,473,29,"index"],[328,53,473,42],[328,55,473,53],[329,10,474,6,"setSelectedLog"],[329,24,474,20],[329,25,474,21,"index"],[329,30,474,26],[329,31,474,27],[330,8,475,4],[330,9,475,5],[331,8,475,5],[332,6,475,5],[333,6,475,5],[334,8,475,5],[335,8,475,5],[335,15,409,4],[335,42,409,22,"err"],[335,45,409,32],[335,47,409,34,"errorInfo"],[335,56,409,74],[335,58,409,76],[336,10,412,6,"reportLogBoxError"],[336,27,412,23],[336,28,412,24,"err"],[336,31,412,27],[336,33,412,29,"errorInfo"],[336,42,412,38],[336,43,412,39,"componentStack"],[336,57,412,53],[336,58,412,54],[337,8,413,4],[338,6,413,5],[339,8,413,5],[340,8,413,5],[340,15,424,4],[340,33,424,25],[341,10,425,6],[341,14,425,10],[341,18,425,14],[341,19,425,15,"state"],[341,24,425,20],[341,25,425,21,"hasError"],[341,33,425,29],[341,35,425,31],[342,12,428,8],[342,19,428,15],[342,23,428,19],[343,10,429,6],[344,10,431,6],[344,17,432,8],[344,79,432,9],[344,95,432,25],[345,12,433,10],[345,16,433,14],[345,18,433,16,"Array"],[345,23,433,21],[345,24,433,22,"from"],[345,28,433,26],[345,29,433,27],[345,33,433,31],[345,34,433,32,"state"],[345,39,433,37],[345,40,433,38,"logs"],[345,44,433,42],[345,45,433,44],[346,12,434,10],[346,22,434,20],[346,24,434,22],[346,28,434,26],[346,29,434,27,"state"],[346,34,434,32],[346,35,434,33,"isDisabled"],[346,45,434,44],[347,12,435,10],[347,28,435,26],[347,30,435,28],[347,34,435,32],[347,35,435,33,"state"],[347,40,435,38],[347,41,435,39,"selectedLogIndex"],[348,10,435,56],[348,12,436,10],[349,8,438,4],[350,6,438,5],[351,8,438,5],[352,8,438,5],[352,15,440,4],[352,44,440,30],[353,10,440,30],[354,10,441,6],[354,14,441,10],[354,15,441,11,"_subscription"],[354,28,441,24],[354,31,441,27,"observe"],[354,38,441,34],[354,39,441,35],[354,49,441,35,"data"],[354,53,441,39],[354,55,441,43],[355,12,442,8],[355,18,442,12],[355,19,442,13,"setState"],[355,27,442,21],[355,28,442,22,"data"],[355,32,442,26],[355,33,442,27],[356,10,443,6],[356,11,443,7],[356,12,443,8],[357,8,444,4],[358,6,444,5],[359,8,444,5],[360,8,444,5],[360,15,446,4],[360,47,446,33],[361,10,447,6],[361,14,447,10],[361,18,447,14],[361,19,447,15,"_subscription"],[361,32,447,28],[361,36,447,32],[361,40,447,36],[361,42,447,38],[362,12,448,8],[362,16,448,12],[362,17,448,13,"_subscription"],[362,30,448,26],[362,31,448,27,"unsubscribe"],[362,42,448,38],[362,44,448,40],[363,10,449,6],[364,8,450,4],[365,6,450,5],[366,8,450,5],[367,8,450,5],[367,15,405,4],[367,51,405,59],[368,10,406,6],[368,17,406,13],[369,12,406,14,"hasError"],[369,20,406,22],[369,22,406,24],[370,10,406,28],[370,11,406,29],[371,8,407,4],[372,6,407,5],[373,6,407,5],[374,4,407,5],[374,6,404,40,"React"],[374,11,404,45],[374,12,404,46,"Component"],[374,21,404,55],[375,4,478,2],[375,11,478,9,"LogBoxStateSubscription"],[375,34,478,32],[376,2,479,0],[377,0,479,1]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;mCC0E;CDU;AEK;CFM;OGE;CHW;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;qCCuB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNK;GMiB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;C9BE;O+BE;mBCM;GDa;4BRS,6CQ;C/BG;OiCE;CjCM;OkCE;ClCE;OmCE;ICO;KDE;CnCE;OqCkB;ECG;ICC;KDE;IEE;KFI;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;qBOE;KPe;sBQE;KRE;4BSE;KTE;GDC;CrCG"}},"type":"js/module"}]}