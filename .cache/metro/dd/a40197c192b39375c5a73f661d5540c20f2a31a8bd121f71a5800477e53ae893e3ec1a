{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}},{"start":{"line":9,"column":0,"index":206},"end":{"line":9,"column":39,"index":245}},{"start":{"line":10,"column":0,"index":246},"end":{"line":10,"column":63,"index":309}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":520,"column":0,"index":17706}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"lodash/isEqual","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0,"index":206},"end":{"line":9,"column":39,"index":245}}],"key":"v9qnyaM1ihZCXd91/5vCGSrtfd0="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":246},"end":{"line":10,"column":63,"index":309}}],"key":"rPPmo2MLpjENsDg3Ww924PhFl60="}},{"name":"../utils","data":{"asyncType":null,"locs":[{"start":{"line":55,"column":6,"index":2008},"end":{"line":55,"column":14,"index":2016},"identifierName":"isFabric"},{"start":{"line":476,"column":10,"index":16533},"end":{"line":476,"column":20,"index":16543},"identifierName":"tagMessage"},{"start":{"line":505,"column":14,"index":17411},"end":{"line":505,"column":23,"index":17420},"identifierName":"isJestEnv"}],"key":"wnEVYE0exYilYcCniP5DP5xdv08="}},{"name":"../State","data":{"asyncType":null,"locs":[{"start":{"line":127,"column":3,"index":4503},"end":{"line":127,"column":8,"index":4508},"identifierName":"State"},{"start":{"line":128,"column":3,"index":4538},"end":{"line":128,"column":8,"index":4543},"identifierName":"State"},{"start":{"line":129,"column":3,"index":4566},"end":{"line":129,"column":8,"index":4571},"identifierName":"State"},{"start":{"line":130,"column":3,"index":4596},"end":{"line":130,"column":8,"index":4601},"identifierName":"State"},{"start":{"line":131,"column":3,"index":4632},"end":{"line":131,"column":8,"index":4637},"identifierName":"State"},{"start":{"line":132,"column":3,"index":4665},"end":{"line":132,"column":8,"index":4670},"identifierName":"State"}],"key":"Q8nOM11Vuvfos2IZ/lO9FOcbk+g="}},{"name":"../ActionType","data":{"asyncType":null,"locs":[{"start":{"line":320,"column":10,"index":10990},"end":{"line":320,"column":20,"index":11000},"identifierName":"ActionType"},{"start":{"line":335,"column":19,"index":11487},"end":{"line":335,"column":29,"index":11497},"identifierName":"ActionType"},{"start":{"line":341,"column":19,"index":11726},"end":{"line":341,"column":29,"index":11736},"identifierName":"ActionType"},{"start":{"line":344,"column":19,"index":11871},"end":{"line":344,"column":29,"index":11881},"identifierName":"ActionType"}],"key":"LmEMEJoPv7O/xrjLPCSpnXXLsmw="}},{"name":"./handlersRegistry","data":{"asyncType":null,"locs":[{"start":{"line":324,"column":8,"index":11098},"end":{"line":324,"column":33,"index":11123},"identifierName":"registerOldGestureHandler"},{"start":{"line":182,"column":24,"index":6249},"end":{"line":182,"column":41,"index":6266},"identifierName":"getNextHandlerTag"},{"start":{"line":187,"column":12,"index":6406},"end":{"line":187,"column":26,"index":6420},"identifierName":"handlerIDToTag"},{"start":{"line":190,"column":8,"index":6545},"end":{"line":190,"column":22,"index":6559},"identifierName":"handlerIDToTag"},{"start":{"line":249,"column":15,"index":8821},"end":{"line":249,"column":29,"index":8835},"identifierName":"handlerIDToTag"}],"key":"uUSwkNM2LATozp8YVz2n0Z5NN80="}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"locs":[{"start":{"line":355,"column":6,"index":12079},"end":{"line":355,"column":29,"index":12102},"identifierName":"scheduleFlushOperations"},{"start":{"line":364,"column":6,"index":12330},"end":{"line":364,"column":29,"index":12353},"identifierName":"scheduleFlushOperations"},{"start":{"line":220,"column":8,"index":7642},"end":{"line":220,"column":20,"index":7654},"identifierName":"filterConfig"},{"start":{"line":227,"column":32,"index":7844},"end":{"line":227,"column":46,"index":7858},"identifierName":"findNodeHandle"},{"start":{"line":231,"column":22,"index":7982},"end":{"line":231,"column":36,"index":7996},"identifierName":"findNodeHandle"},{"start":{"line":241,"column":6,"index":8381},"end":{"line":241,"column":29,"index":8404},"identifierName":"scheduleFlushOperations"},{"start":{"line":379,"column":26,"index":12927},"end":{"line":379,"column":38,"index":12939},"identifierName":"filterConfig"},{"start":{"line":392,"column":24,"index":13327},"end":{"line":392,"column":36,"index":13339},"identifierName":"filterConfig"}],"key":"mTSC0UdFuFxBKVrpmRYkwtiO0Sk="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":492,"column":10,"index":17101},"end":{"line":496,"column":12,"index":17256}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"locs":[{"start":{"line":492,"column":11,"index":17102},"end":{"line":492,"column":32,"index":17123}}],"key":"wCWp40DPaNOojL98kp8kbUGtKUU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n  var _isEqual = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[10], \"lodash/isEqual\"));\n  var _RNGestureHandlerModule = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[11], \"../RNGestureHandlerModule\"));\n  var _UIManagerAny$getView, _stateToPropMappings;\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n  var UIManagerAny = _reactNative.UIManager;\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _$$_REQUIRE(_dependencyMap[12], \"../utils\").isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid);\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  var UIManagerConstants = (_UIManagerAny$getView = UIManagerAny.getViewManagerConfig == null ? void 0 : UIManagerAny.getViewManagerConfig('getConstants')) != null ? _UIManagerAny$getView : UIManagerAny.getConstants == null ? void 0 : UIManagerAny.getConstants();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? function () {} : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? function () {} : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.UNDETERMINED, undefined), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.END, 'onEnded'), _stateToPropMappings);\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n      var _super = _createSuper(Handler);\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _super.call(this, props);\n        _this.updateEnqueued = null;\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent == null ? void 0 : _this.props.onGestureEvent(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent == null ? void 0 : _this.props.onGestureHandlerEvent(event);\n          }\n        };\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange == null ? void 0 : _this.props.onHandlerStateChange(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null ? void 0 : _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _$$_REQUIRE(_dependencyMap[14], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API, _this.propsRef);\n          } else {\n            (0, _$$_REQUIRE(_dependencyMap[15], \"./handlersRegistry\").registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = function () {\n              var _this$props, _this$props2;\n              if ((_this$props = _this.props) != null && _this$props.onGestureEvent && 'current' in _this.props.onGestureEvent) {\n                return _$$_REQUIRE(_dependencyMap[14], \"../ActionType\").ActionType.REANIMATED_WORKLET;\n              } else if ((_this$props2 = _this.props) != null && _this$props2.onGestureEvent && '__isNative' in _this.props.onGestureEvent) {\n                return _$$_REQUIRE(_dependencyMap[14], \"../ActionType\").ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                return _$$_REQUIRE(_dependencyMap[14], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API;\n              }\n            }();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").scheduleFlushOperations)();\n        };\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _$$_REQUIRE(_dependencyMap[15], \"./handlersRegistry\").getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = React.createRef();\n        _this.state = {\n          allowTouches: allowTouches\n        };\n        if (props.id) {\n          if (_$$_REQUIRE(_dependencyMap[15], \"./handlersRegistry\").handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _$$_REQUIRE(_dependencyMap[15], \"./handlersRegistry\").handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          var props = this.props;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n              _this2.setState(function (_) {\n                return {\n                  allowTouches: allowTouches\n                };\n              });\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            this.updateEnqueued = setImmediate(function () {\n              _this2.updateEnqueued = null;\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          this.attachGestureHandler((0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").findNodeHandle)(this.viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").findNodeHandle)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag);\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this$inspectorToggle;\n          (_this$inspectorToggle = this.inspectorToggleListener) == null ? void 0 : _this$inspectorToggle.remove();\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").scheduleFlushOperations)();\n          if (this.updateEnqueued) {\n            clearImmediate(this.updateEnqueued);\n          }\n          var handlerID = this.props.id;\n          if (handlerID) {\n            delete _$$_REQUIRE(_dependencyMap[15], \"./handlersRegistry\").handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          var _this3 = this;\n          var props = this.props;\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            this.updateEnqueued = setImmediate(function () {\n              _this3.updateEnqueued = null;\n              _this3.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n            if (!(0, _isEqual.default)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = Object.assign({}, this.props, updates);\n          var newConfig = (0, _$$_REQUIRE(_dependencyMap[16], \"./gestureHandlerCommon\").filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props$testID;\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          var _this$props3 = this.props,\n            onGestureEvent = _this$props3.onGestureEvent,\n            onGestureHandlerEvent = _this$props3.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          var _this$props4 = this.props,\n            onHandlerStateChange = _this$props4.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props4.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _$$_REQUIRE(_dependencyMap[12], \"../utils\").tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push((0, _$$_REQUIRE(_dependencyMap[17], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[18], \"./PressabilityDebugView\").PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\"));\n          }\n          return React.cloneElement(child, Object.assign({\n            ref: this.refHandler,\n            collapsable: false\n          }, (0, _$$_REQUIRE(_dependencyMap[12], \"../utils\").isJestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag\n          } : {}, {\n            testID: (_this$props$testID = this.props.testID) != null ? _this$props$testID : child.props.testID\n          }, events), grandChildren);\n        }\n      }]);\n      return Handler;\n    }(React.Component);\n    Handler.displayName = name;\n    return Handler;\n  }\n});","lineCount":314,"map":[[13,2,1,0],[14,2,2,0],[15,2,9,0],[16,2,10,0],[17,2,10,63],[18,2,10,63],[19,2,10,63],[20,2,10,63],[21,2,10,63],[22,2,32,0],[22,6,32,6,"UIManagerAny"],[22,18,32,18],[22,21,32,21,"UIManager"],[22,43,32,37],[23,2,34,0],[23,6,34,6,"customGHEventsConfigFabricAndroid"],[23,39,34,39],[23,42,34,42],[24,4,35,2,"topOnGestureHandlerEvent"],[24,28,35,26],[24,30,35,28],[25,6,35,30,"registrationName"],[25,22,35,46],[25,24,35,48],[26,4,35,72],[26,5,35,73],[27,4,36,2,"topOnGestureHandlerStateChange"],[27,34,36,32],[27,36,36,34],[28,6,37,4,"registrationName"],[28,22,37,20],[28,24,37,22],[29,4,38,2],[30,2,39,0],[30,3,39,1],[31,2,41,0],[31,6,41,6,"customGHEventsConfig"],[31,26,41,26],[32,4,42,2,"onGestureHandlerEvent"],[32,25,42,23],[32,27,42,25],[33,6,42,27,"registrationName"],[33,22,42,43],[33,24,42,45],[34,4,42,69],[34,5,42,70],[35,4,43,2,"onGestureHandlerStateChange"],[35,31,43,29],[35,33,43,31],[36,6,44,4,"registrationName"],[36,22,44,20],[36,24,44,22],[37,4,45,2],[38,2,45,3],[38,5,55,6],[38,9,55,6,"isFabric"],[38,61,55,14],[38,64,55,16],[38,68,56,4,"Platform"],[38,89,56,12],[38,90,56,13,"OS"],[38,92,56,15],[38,97,56,20],[38,106,56,29],[38,110,57,4,"customGHEventsConfigFabricAndroid"],[38,143,57,37],[38,144,58,1],[39,2,64,0,"UIManagerAny"],[39,14,64,12],[39,15,64,13,"genericDirectEventTypes"],[39,38,64,36],[39,59,65,5,"UIManagerAny"],[39,71,65,17],[39,72,65,18,"genericDirectEventTypes"],[39,95,65,41],[39,97,66,5,"customGHEventsConfig"],[39,117,66,25],[39,118,67,1],[40,2,71,0],[40,6,71,6,"UIManagerConstants"],[40,24,71,24],[40,52,72,2,"UIManagerAny"],[40,64,72,14],[40,65,72,15,"getViewManagerConfig"],[40,85,72,35],[40,105,72,2,"UIManagerAny"],[40,117,72,14],[40,118,72,15,"getViewManagerConfig"],[40,138,72,35],[40,139,72,38],[40,153,72,52],[40,154,72,53],[40,190,73,2,"UIManagerAny"],[40,202,73,14],[40,203,73,15,"getConstants"],[40,215,73,27],[40,235,73,2,"UIManagerAny"],[40,247,73,14],[40,248,73,15,"getConstants"],[40,260,73,27],[40,262,73,31],[41,2,75,0],[41,6,75,4,"UIManagerConstants"],[41,24,75,22],[41,26,75,24],[42,4,76,2,"UIManagerConstants"],[42,22,76,20],[42,23,76,21,"genericDirectEventTypes"],[42,46,76,44],[42,67,77,7,"UIManagerConstants"],[42,85,77,25],[42,86,77,26,"genericDirectEventTypes"],[42,109,77,49],[42,111,78,7,"customGHEventsConfig"],[42,131,78,27],[42,132,79,3],[43,2,80,0],[44,2,83,0],[44,30,90,4,"UIManagerAny"],[44,42,90,16],[44,43,84,2,"setJSResponder"],[44,57,84,16],[45,4,84,18,"oldSetJSResponder"],[45,21,84,35],[45,59,84,38],[45,71,84,44],[45,72,86,2],[45,73,86,3],[46,4,86,3],[46,28,90,4,"UIManagerAny"],[46,40,90,16],[46,41,87,2,"clearJSResponder"],[46,57,87,18],[47,4,87,20,"oldClearJSResponder"],[47,23,87,39],[47,61,87,42],[47,73,87,48],[47,74,89,2],[47,75,89,3],[48,2,91,0,"UIManagerAny"],[48,14,91,12],[48,15,91,13,"setJSResponder"],[48,29,91,27],[48,32,91,30],[48,42,91,31,"tag"],[48,45,91,42],[48,47,91,44,"blockNativeResponder"],[48,67,91,73],[48,69,91,78],[49,4,92,2,"RNGestureHandlerModule"],[49,35,92,24],[49,36,92,25,"handleSetJSResponder"],[49,56,92,45],[49,57,92,46,"tag"],[49,60,92,49],[49,62,92,51,"blockNativeResponder"],[49,82,92,71],[49,83,92,72],[50,4,93,2,"oldSetJSResponder"],[50,21,93,19],[50,22,93,20,"tag"],[50,25,93,23],[50,27,93,25,"blockNativeResponder"],[50,47,93,45],[50,48,93,46],[51,2,94,0],[51,3,94,1],[52,2,95,0,"UIManagerAny"],[52,14,95,12],[52,15,95,13,"clearJSResponder"],[52,31,95,29],[52,34,95,32],[52,46,95,38],[53,4,96,2,"RNGestureHandlerModule"],[53,35,96,24],[53,36,96,25,"handleClearJSResponder"],[53,58,96,47],[53,60,96,49],[54,4,97,2,"oldClearJSResponder"],[54,23,97,21],[54,25,97,23],[55,2,98,0],[55,3,98,1],[56,2,100,0],[56,6,100,4,"allowTouches"],[56,18,100,16],[56,21,100,19],[56,25,100,23],[57,2,101,0],[57,6,101,6,"DEV_ON_ANDROID"],[57,20,101,20],[57,23,101,23,"__DEV__"],[57,30,101,30],[57,34,101,34,"Platform"],[57,55,101,42],[57,56,101,43,"OS"],[57,58,101,45],[57,63,101,50],[57,72,101,59],[58,2,104,0],[58,6,104,4,"DEV_ON_ANDROID"],[58,20,104,18],[58,22,104,20],[59,4,105,2,"DeviceEventEmitter"],[59,35,105,20],[59,36,105,21,"addListener"],[59,47,105,32],[59,48,105,33],[59,72,105,57],[59,74,105,59],[59,86,105,65],[60,6,106,4,"allowTouches"],[60,18,106,16],[60,21,106,19],[60,22,106,20,"allowTouches"],[60,34,106,32],[61,4,107,2],[61,5,107,3],[61,6,107,4],[62,2,108,0],[63,2,113,0],[63,11,113,9,"hasUnresolvedRefs"],[63,28,113,26],[63,29,114,2,"props"],[63,34,114,24],[63,36,115,2],[64,4,117,2],[64,8,117,8,"extract"],[64,15,117,15],[64,18,117,18],[64,27,117,8,"extract"],[64,34,117,15],[64,35,117,19,"refs"],[64,39,117,36],[64,41,117,41],[65,6,118,4],[65,10,118,8],[65,11,118,9,"Array"],[65,16,118,14],[65,17,118,15,"isArray"],[65,24,118,22],[65,25,118,23,"refs"],[65,29,118,27],[65,30,118,28],[65,32,118,30],[66,8,119,6],[66,15,119,13,"refs"],[66,19,119,17],[66,23,119,21,"refs"],[66,27,119,25],[66,28,119,26,"current"],[66,35,119,33],[66,40,119,38],[66,44,119,42],[67,6,120,4],[68,6,121,4],[68,13,121,11,"refs"],[68,17,121,15],[68,18,121,16,"some"],[68,22,121,20],[68,23,121,21],[68,33,121,22,"r"],[68,34,121,23],[69,8,121,23],[69,15,121,28,"r"],[69,16,121,29],[69,20,121,33,"r"],[69,21,121,34],[69,22,121,35,"current"],[69,29,121,42],[69,34,121,47],[69,38,121,51],[70,6,121,51],[70,8,121,52],[71,4,122,2],[71,5,122,3],[72,4,123,2],[72,11,123,9,"extract"],[72,18,123,16],[72,19,123,17,"props"],[72,24,123,22],[72,25,123,23],[72,47,123,45],[72,48,123,46],[72,49,123,47],[72,53,123,51,"extract"],[72,60,123,58],[72,61,123,59,"props"],[72,66,123,64],[72,67,123,65],[72,76,123,74],[72,77,123,75],[72,78,123,76],[73,2,124,0],[74,2,126,0],[74,6,126,6,"stateToPropMappings"],[74,25,126,25],[74,108,127,3,"State"],[74,157,127,8],[74,158,127,9,"UNDETERMINED"],[74,170,127,21],[74,172,127,24,"undefined"],[74,181,127,33],[74,236,128,3,"State"],[74,285,128,8],[74,286,128,9,"BEGAN"],[74,291,128,14],[74,293,128,17],[74,302,128,26],[74,357,129,3,"State"],[74,406,129,8],[74,407,129,9,"FAILED"],[74,413,129,15],[74,415,129,18],[74,425,129,28],[74,480,130,3,"State"],[74,529,130,8],[74,530,130,9,"CANCELLED"],[74,539,130,18],[74,541,130,21],[74,554,130,34],[74,609,131,3,"State"],[74,658,131,8],[74,659,131,9,"ACTIVE"],[74,665,131,15],[74,667,131,18],[74,680,131,31],[74,735,132,3,"State"],[74,784,132,8],[74,785,132,9,"END"],[74,788,132,12],[74,790,132,15],[74,799,132,24],[74,823,133,10],[75,2,150,0],[75,6,150,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[75,33,150,33],[75,36,150,36],[75,37,150,37],[76,2,153,15],[76,11,153,24,"createHandler"],[76,24,153,37],[76,31,162,76],[77,4,162,76],[77,8,157,2,"name"],[77,12,157,6],[77,20,157,2,"name"],[77,24,157,6],[78,6,157,6],[78,31,158,2,"allowedProps"],[78,43,158,14],[79,6,158,2,"allowedProps"],[79,18,158,14],[79,52,158,17],[79,54,158,19],[80,6,158,19],[80,25,159,2,"config"],[80,31,159,8],[81,6,159,2,"config"],[81,12,159,8],[81,40,159,11],[81,41,159,12],[81,42,159,13],[82,6,160,2,"transformProps"],[82,20,160,16],[82,28,160,2,"transformProps"],[82,42,160,16],[83,6,160,16],[83,35,161,2,"customNativeProps"],[83,52,161,19],[84,6,161,2,"customNativeProps"],[84,23,161,19],[84,61,161,22],[84,63,161,24],[85,4,161,24],[85,8,166,8,"Handler"],[85,15,166,15],[86,6,166,15],[87,6,166,15],[88,6,180,4],[88,23,180,16,"props"],[88,28,180,48],[88,30,180,50],[89,8,180,50],[90,8,180,50],[91,8,181,6],[91,34,181,12,"props"],[91,39,181,17],[92,8,181,19],[92,14,177,12,"updateEnqueued"],[92,28,177,26],[92,31,177,69],[92,35,177,73],[93,8,177,73],[93,14,253,12,"onGestureHandlerEvent"],[93,35,253,33],[93,38,253,36],[93,48,253,37,"event"],[93,53,253,59],[93,55,253,64],[94,10,254,6],[94,14,254,10,"event"],[94,19,254,15],[94,20,254,16,"nativeEvent"],[94,31,254,27],[94,32,254,28,"handlerTag"],[94,42,254,38],[94,47,254,43],[94,53,254,48,"handlerTag"],[94,63,254,58],[94,65,254,60],[95,12,255,8],[95,16,255,12],[95,23,255,19],[95,29,255,24,"props"],[95,34,255,29],[95,35,255,30,"onGestureEvent"],[95,49,255,44],[95,54,255,49],[95,64,255,59],[95,66,255,61],[96,14,256,10],[96,20,256,15,"props"],[96,25,256,20],[96,26,256,21,"onGestureEvent"],[96,40,256,35],[96,60,256,10],[96,66,256,15,"props"],[96,71,256,20],[96,72,256,21,"onGestureEvent"],[96,86,256,35],[96,87,256,38,"event"],[96,92,256,43],[96,93,256,44],[97,12,257,8],[98,10,258,6],[98,11,258,7],[98,17,258,13],[99,12,259,8],[99,18,259,13,"props"],[99,23,259,18],[99,24,259,19,"onGestureHandlerEvent"],[99,45,259,40],[99,65,259,8],[99,71,259,13,"props"],[99,76,259,18],[99,77,259,19,"onGestureHandlerEvent"],[99,98,259,40],[99,99,259,43,"event"],[99,104,259,48],[99,105,259,49],[100,10,260,6],[101,8,261,4],[101,9,261,5],[102,8,261,5],[102,14,264,12,"onGestureHandlerStateChange"],[102,41,264,39],[102,44,264,42],[102,54,265,6,"event"],[102,59,265,39],[102,61,266,9],[103,10,267,6],[103,14,267,10,"event"],[103,19,267,15],[103,20,267,16,"nativeEvent"],[103,31,267,27],[103,32,267,28,"handlerTag"],[103,42,267,38],[103,47,267,43],[103,53,267,48,"handlerTag"],[103,63,267,58],[103,65,267,60],[104,12,268,8],[104,16,268,12],[104,23,268,19],[104,29,268,24,"props"],[104,34,268,29],[104,35,268,30,"onHandlerStateChange"],[104,55,268,50],[104,60,268,55],[104,70,268,65],[104,72,268,67],[105,14,269,10],[105,20,269,15,"props"],[105,25,269,20],[105,26,269,21,"onHandlerStateChange"],[105,46,269,41],[105,66,269,10],[105,72,269,15,"props"],[105,77,269,20],[105,78,269,21,"onHandlerStateChange"],[105,98,269,41],[105,99,269,44,"event"],[105,104,269,49],[105,105,269,50],[106,12,270,8],[107,12,272,8],[107,16,272,14,"state"],[107,21,272,42],[107,24,272,45,"event"],[107,29,272,50],[107,30,272,51,"nativeEvent"],[107,41,272,62],[107,42,272,63,"state"],[107,47,272,68],[108,12,273,8],[108,16,273,14,"stateEventName"],[108,30,273,28],[108,33,273,31,"stateToPropMappings"],[108,52,273,50],[108,53,273,51,"state"],[108,58,273,56],[108,59,273,57],[109,12,274,8],[109,16,274,14,"eventHandler"],[109,28,274,26],[109,31,274,29,"stateEventName"],[109,45,274,43],[109,49,274,47],[109,55,274,52,"props"],[109,60,274,57],[109,61,274,58,"stateEventName"],[109,75,274,72],[109,76,274,73],[110,12,275,8],[110,16,275,12,"eventHandler"],[110,28,275,24],[110,32,275,28],[110,39,275,35,"eventHandler"],[110,51,275,47],[110,56,275,52],[110,66,275,62],[110,68,275,64],[111,14,276,10,"eventHandler"],[111,26,276,22],[111,27,276,23,"event"],[111,32,276,28],[111,33,276,29],[112,12,277,8],[113,10,278,6],[113,11,278,7],[113,17,278,13],[114,12,279,8],[114,18,279,13,"props"],[114,23,279,18],[114,24,279,19,"onGestureHandlerStateChange"],[114,51,279,46],[114,71,279,8],[114,77,279,13,"props"],[114,82,279,18],[114,83,279,19,"onGestureHandlerStateChange"],[114,110,279,46],[114,111,279,49,"event"],[114,116,279,54],[114,117,279,55],[115,10,280,6],[116,8,281,4],[116,9,281,5],[117,8,281,5],[117,14,283,12,"refHandler"],[117,24,283,22],[117,27,283,25],[117,37,283,26,"node"],[117,41,283,35],[117,43,283,40],[118,10,284,6],[118,16,284,11,"viewNode"],[118,24,284,19],[118,27,284,22,"node"],[118,31,284,26],[119,10,286,6],[119,14,286,12,"child"],[119,19,286,17],[119,22,286,20,"React"],[119,27,286,25],[119,28,286,26,"Children"],[119,36,286,34],[119,37,286,35,"only"],[119,41,286,39],[119,42,286,40],[119,48,286,45,"props"],[119,53,286,50],[119,54,286,51,"children"],[119,62,286,59],[119,63,286,60],[120,10,288,6],[120,14,288,14,"ref"],[120,17,288,17],[120,20,288,27,"child"],[120,25,288,32],[120,26,288,14,"ref"],[120,29,288,17],[121,10,289,6],[121,14,289,10,"ref"],[121,17,289,13],[121,22,289,18],[121,26,289,22],[121,28,289,24],[122,12,290,8],[122,16,290,12],[122,23,290,19,"ref"],[122,26,290,22],[122,31,290,27],[122,41,290,37],[122,43,290,39],[123,14,291,10,"ref"],[123,17,291,13],[123,18,291,14,"node"],[123,22,291,18],[123,23,291,19],[124,12,292,8],[124,13,292,9],[124,19,292,15],[125,14,293,10,"ref"],[125,17,293,13],[125,18,293,14,"current"],[125,25,293,21],[125,28,293,24,"node"],[125,32,293,28],[126,12,294,8],[127,10,295,6],[128,8,296,4],[128,9,296,5],[129,8,296,5],[129,14,298,12,"createGestureHandler"],[129,34,298,32],[129,37,298,35],[129,47,299,6,"newConfig"],[129,56,299,50],[129,58,300,9],[130,10,301,6],[130,16,301,11,"config"],[130,22,301,17],[130,25,301,20,"newConfig"],[130,34,301,29],[131,10,303,6,"RNGestureHandlerModule"],[131,41,303,28],[131,42,303,29,"createGestureHandler"],[131,62,303,49],[131,63,304,8,"name"],[131,67,304,12],[131,69,305,8],[131,75,305,13,"handlerTag"],[131,85,305,23],[131,87,306,8,"newConfig"],[131,96,306,17],[131,97,307,7],[132,8,308,4],[132,9,308,5],[133,8,308,5],[133,14,310,12,"attachGestureHandler"],[133,34,310,32],[133,37,310,35],[133,47,310,36,"newViewTag"],[133,57,310,54],[133,59,310,59],[134,10,311,6],[134,16,311,11,"viewTag"],[134,23,311,18],[134,26,311,21,"newViewTag"],[134,36,311,31],[135,10,313,6],[135,14,313,10,"Platform"],[135,35,313,18],[135,36,313,19,"OS"],[135,38,313,21],[135,43,313,26],[135,48,313,31],[135,50,313,33],[136,12,316,10,"RNGestureHandlerModule"],[136,43,316,32],[136,44,316,33,"attachGestureHandler"],[136,64,316,53],[136,65,318,10],[136,71,318,15,"handlerTag"],[136,81,318,25],[136,83,319,10,"newViewTag"],[136,93,319,20],[136,95,320,10,"ActionType"],[136,154,320,20],[136,155,320,21,"JS_FUNCTION_OLD_API"],[136,174,320,40],[136,176,321,10],[136,182,321,15,"propsRef"],[136,190,321,23],[136,191,322,9],[137,10,323,6],[137,11,323,7],[137,17,323,13],[138,12,324,8],[138,16,324,8,"registerOldGestureHandler"],[138,95,324,33],[138,97,324,34],[138,103,324,39,"handlerTag"],[138,113,324,49],[138,115,324,51],[139,14,325,10,"onGestureEvent"],[139,28,325,24],[139,30,325,26],[139,36,325,31,"onGestureHandlerEvent"],[139,57,325,52],[140,14,326,10,"onGestureStateChange"],[140,34,326,30],[140,36,326,32],[140,42,326,37,"onGestureHandlerStateChange"],[141,12,327,8],[141,13,327,9],[141,14,327,10],[142,12,329,8],[142,16,329,14,"actionType"],[142,26,329,24],[142,29,329,28],[142,41,329,34],[143,14,329,34],[144,14,330,10],[144,18,331,12],[144,39,331,17,"props"],[144,44,331,22],[144,57,331,12],[144,69,331,24,"onGestureEvent"],[144,83,331,38],[144,87,332,12],[144,96,332,21],[144,100,332,25],[144,106,332,30,"props"],[144,111,332,35],[144,112,332,36,"onGestureEvent"],[144,126,332,50],[144,128,333,12],[145,16,335,12],[145,23,335,19,"ActionType"],[145,82,335,29],[145,83,335,30,"REANIMATED_WORKLET"],[145,101,335,48],[146,14,336,10],[146,15,336,11],[146,21,336,17],[146,25,337,12],[146,47,337,17,"props"],[146,52,337,22],[146,65,337,12],[146,78,337,24,"onGestureEvent"],[146,92,337,38],[146,96,338,12],[146,108,338,24],[146,112,338,28],[146,118,338,33,"props"],[146,123,338,38],[146,124,338,39,"onGestureEvent"],[146,138,338,53],[146,140,339,12],[147,16,341,12],[147,23,341,19,"ActionType"],[147,82,341,29],[147,83,341,30,"NATIVE_ANIMATED_EVENT"],[147,104,341,51],[148,14,342,10],[148,15,342,11],[148,21,342,17],[149,16,344,12],[149,23,344,19,"ActionType"],[149,82,344,29],[149,83,344,30,"JS_FUNCTION_OLD_API"],[149,102,344,49],[150,14,345,10],[151,12,346,8],[151,13,346,9],[151,15,346,12],[152,12,348,8,"RNGestureHandlerModule"],[152,43,348,30],[152,44,348,31,"attachGestureHandler"],[152,64,348,51],[152,65,349,10],[152,71,349,15,"handlerTag"],[152,81,349,25],[152,83,350,10,"newViewTag"],[152,93,350,20],[152,95,351,10,"actionType"],[152,105,351,20],[152,106,352,9],[153,10,353,6],[154,10,355,6],[154,14,355,6,"scheduleFlushOperations"],[154,95,355,29],[154,98,355,31],[155,8,356,4],[155,9,356,5],[156,8,356,5],[156,14,358,12,"updateGestureHandler"],[156,34,358,32],[156,37,358,35],[156,47,359,6,"newConfig"],[156,56,359,50],[156,58,360,9],[157,10,361,6],[157,16,361,11,"config"],[157,22,361,17],[157,25,361,20,"newConfig"],[157,34,361,29],[158,10,363,6,"RNGestureHandlerModule"],[158,41,363,28],[158,42,363,29,"updateGestureHandler"],[158,62,363,49],[158,63,363,50],[158,69,363,55,"handlerTag"],[158,79,363,65],[158,81,363,67,"newConfig"],[158,90,363,76],[158,91,363,77],[159,10,364,6],[159,14,364,6,"scheduleFlushOperations"],[159,95,364,29],[159,98,364,31],[160,8,365,4],[160,9,365,5],[161,8,182,6],[161,14,182,11,"handlerTag"],[161,24,182,21],[161,27,182,24],[161,31,182,24,"getNextHandlerTag"],[161,102,182,41],[161,105,182,43],[162,8,183,6],[162,14,183,11,"config"],[162,20,183,17],[162,23,183,20],[162,24,183,21],[162,25,183,22],[163,8,184,6],[163,14,184,11,"propsRef"],[163,22,184,19],[163,25,184,22,"React"],[163,30,184,27],[163,31,184,28,"createRef"],[163,40,184,37],[163,42,184,39],[164,8,185,6],[164,14,185,11,"state"],[164,19,185,16],[164,22,185,19],[165,10,185,21,"allowTouches"],[165,22,185,33],[165,24,185,21,"allowTouches"],[166,8,185,34],[166,9,185,35],[167,8,186,6],[167,12,186,10,"props"],[167,17,186,15],[167,18,186,16,"id"],[167,20,186,18],[167,22,186,20],[168,10,187,8],[168,14,187,12,"handlerIDToTag"],[168,82,187,26],[168,83,187,27,"props"],[168,88,187,32],[168,89,187,33,"id"],[168,91,187,35],[168,92,187,36],[168,97,187,41,"undefined"],[168,106,187,50],[168,108,187,52],[169,12,188,10],[169,18,188,16],[169,22,188,20,"Error"],[169,27,188,25],[169,28,188,27],[169,48,188,46,"props"],[169,53,188,51],[169,54,188,52,"id"],[169,56,188,55],[169,78,188,76],[169,79,188,77],[170,10,189,8],[171,10,190,8,"handlerIDToTag"],[171,78,190,22],[171,79,190,23,"props"],[171,84,190,28],[171,85,190,29,"id"],[171,87,190,31],[171,88,190,32],[171,91,190,35],[171,97,190,40,"handlerTag"],[171,107,190,50],[172,8,191,6],[173,8,191,7],[174,6,192,4],[175,6,192,5],[176,8,192,5],[177,8,192,5],[177,15,194,4],[177,44,194,24],[178,10,194,24],[179,10,195,6],[179,14,195,12,"props"],[179,19,195,34],[179,22,195,37],[179,26,195,41],[179,27,195,42,"props"],[179,32,195,47],[180,10,197,6],[180,14,197,10,"DEV_ON_ANDROID"],[180,28,197,24],[180,30,197,26],[181,12,198,8],[181,16,198,12],[181,17,198,13,"inspectorToggleListener"],[181,40,198,36],[181,43,198,39,"DeviceEventEmitter"],[181,74,198,57],[181,75,198,58,"addListener"],[181,86,198,69],[181,87,199,10],[181,111,199,34],[181,113,200,10],[181,125,200,16],[182,14,201,12],[182,20,201,16],[182,21,201,17,"setState"],[182,29,201,25],[182,30,201,26],[182,40,201,27,"_"],[182,41,201,28],[183,16,201,28],[183,23,201,34],[184,18,201,36,"allowTouches"],[184,30,201,48],[184,32,201,36,"allowTouches"],[185,16,201,49],[185,17,201,50],[186,14,201,50],[186,15,201,51],[186,16,201,52],[187,14,202,12],[187,20,202,16],[187,21,202,17,"update"],[187,27,202,23],[187,28,202,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[187,55,202,51],[187,56,202,52],[188,12,203,10],[188,13,203,11],[188,14,204,9],[189,10,205,6],[190,10,206,6],[190,14,206,10,"hasUnresolvedRefs"],[190,31,206,27],[190,32,206,28,"props"],[190,37,206,33],[190,38,206,34],[190,40,206,36],[191,12,213,8],[191,16,213,12],[191,17,213,13,"updateEnqueued"],[191,31,213,27],[191,34,213,30,"setImmediate"],[191,46,213,42],[191,47,213,43],[191,59,213,49],[192,14,214,10],[192,20,214,14],[192,21,214,15,"updateEnqueued"],[192,35,214,29],[192,38,214,32],[192,42,214,36],[193,14,215,10],[193,20,215,14],[193,21,215,15,"update"],[193,27,215,21],[193,28,215,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[193,55,215,49],[193,56,215,50],[194,12,216,8],[194,13,216,9],[194,14,216,10],[195,10,217,6],[196,10,219,6],[196,14,219,10],[196,15,219,11,"createGestureHandler"],[196,35,219,31],[196,36,220,8],[196,40,220,8,"filterConfig"],[196,110,220,20],[196,112,221,10,"transformProps"],[196,126,221,24],[196,129,221,27,"transformProps"],[196,143,221,41],[196,144,221,42],[196,148,221,46],[196,149,221,47,"props"],[196,154,221,52],[196,155,221,53],[196,158,221,56],[196,162,221,60],[196,163,221,61,"props"],[196,168,221,66],[196,213,222,14,"allowedProps"],[196,225,222,26],[196,261,222,31,"customNativeProps"],[196,278,222,48],[196,282,223,10,"config"],[196,288,223,16],[196,289,224,9],[196,290,225,7],[197,10,227,6],[197,14,227,10],[197,15,227,11,"attachGestureHandler"],[197,35,227,31],[197,36,227,32],[197,40,227,32,"findNodeHandle"],[197,112,227,46],[197,114,227,47],[197,118,227,51],[197,119,227,52,"viewNode"],[197,127,227,60],[197,128,227,61],[197,129,227,72],[198,8,228,4],[199,6,228,5],[200,8,228,5],[201,8,228,5],[201,15,230,4],[201,45,230,25],[202,10,231,6],[202,14,231,12,"viewTag"],[202,21,231,19],[202,24,231,22],[202,28,231,22,"findNodeHandle"],[202,100,231,36],[202,102,231,37],[202,106,231,41],[202,107,231,42,"viewNode"],[202,115,231,50],[202,116,231,51],[203,10,232,6],[203,14,232,10],[203,18,232,14],[203,19,232,15,"viewTag"],[203,26,232,22],[203,31,232,27,"viewTag"],[203,38,232,34],[203,40,232,36],[204,12,233,8],[204,16,233,12],[204,17,233,13,"attachGestureHandler"],[204,37,233,33],[204,38,233,34,"viewTag"],[204,45,233,41],[204,46,233,52],[205,10,234,6],[206,10,235,6],[206,14,235,10],[206,15,235,11,"update"],[206,21,235,17],[206,22,235,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[206,49,235,45],[206,50,235,46],[207,8,236,4],[208,6,236,5],[209,8,236,5],[210,8,236,5],[210,15,238,4],[210,47,238,27],[211,10,238,27],[212,10,239,6],[212,39,239,10],[212,40,239,11,"inspectorToggleListener"],[212,63,239,34],[212,84,239,6],[212,106,239,36,"remove"],[212,112,239,42],[212,114,239,44],[213,10,240,6,"RNGestureHandlerModule"],[213,41,240,28],[213,42,240,29,"dropGestureHandler"],[213,60,240,47],[213,61,240,48],[213,65,240,52],[213,66,240,53,"handlerTag"],[213,76,240,63],[213,77,240,64],[214,10,241,6],[214,14,241,6,"scheduleFlushOperations"],[214,95,241,29],[214,98,241,31],[215,10,242,6],[215,14,242,10],[215,18,242,14],[215,19,242,15,"updateEnqueued"],[215,33,242,29],[215,35,242,31],[216,12,243,8,"clearImmediate"],[216,26,243,22],[216,27,243,23],[216,31,243,27],[216,32,243,28,"updateEnqueued"],[216,46,243,42],[216,47,243,43],[217,10,244,6],[218,10,246,6],[218,14,246,12,"handlerID"],[218,23,246,41],[218,26,246,44],[218,30,246,48],[218,31,246,49,"props"],[218,36,246,54],[218,37,246,55,"id"],[218,39,246,57],[219,10,247,6],[219,14,247,10,"handlerID"],[219,23,247,19],[219,25,247,21],[220,12,249,8],[220,19,249,15,"handlerIDToTag"],[220,87,249,29],[220,88,249,30,"handlerID"],[220,97,249,39],[220,98,249,40],[221,10,250,6],[222,8,251,4],[223,6,251,5],[224,8,251,5],[225,8,251,5],[225,15,367,4],[225,31,367,19,"remainingTries"],[225,45,367,41],[225,47,367,43],[226,10,367,43],[227,10,368,6],[227,14,368,12,"props"],[227,19,368,34],[227,22,368,37],[227,26,368,41],[227,27,368,42,"props"],[227,32,368,47],[228,10,373,6],[228,14,373,10,"hasUnresolvedRefs"],[228,31,373,27],[228,32,373,28,"props"],[228,37,373,33],[228,38,373,34],[228,42,373,38,"remainingTries"],[228,56,373,52],[228,59,373,55],[228,60,373,56],[228,62,373,58],[229,12,374,8],[229,16,374,12],[229,17,374,13,"updateEnqueued"],[229,31,374,27],[229,34,374,30,"setImmediate"],[229,46,374,42],[229,47,374,43],[229,59,374,49],[230,14,375,10],[230,20,375,14],[230,21,375,15,"updateEnqueued"],[230,35,375,29],[230,38,375,32],[230,42,375,36],[231,14,376,10],[231,20,376,14],[231,21,376,15,"update"],[231,27,376,21],[231,28,376,22,"remainingTries"],[231,42,376,36],[231,45,376,39],[231,46,376,40],[231,47,376,41],[232,12,377,8],[232,13,377,9],[232,14,377,10],[233,10,378,6],[233,11,378,7],[233,17,378,13],[234,12,379,8],[234,16,379,14,"newConfig"],[234,25,379,23],[234,28,379,26],[234,32,379,26,"filterConfig"],[234,102,379,38],[234,104,380,10,"transformProps"],[234,118,380,24],[234,121,380,27,"transformProps"],[234,135,380,41],[234,136,380,42],[234,140,380,46],[234,141,380,47,"props"],[234,146,380,52],[234,147,380,53],[234,150,380,56],[234,154,380,60],[234,155,380,61,"props"],[234,160,380,66],[234,205,381,14,"allowedProps"],[234,217,381,26],[234,253,381,31,"customNativeProps"],[234,270,381,48],[234,274,382,10,"config"],[234,280,382,16],[234,281,383,9],[235,12,384,8],[235,16,384,12],[235,17,384,13],[235,21,384,13,"deepEqual"],[235,37,384,22],[235,39,384,23],[235,43,384,27],[235,44,384,28,"config"],[235,50,384,34],[235,52,384,36,"newConfig"],[235,61,384,45],[235,62,384,46],[235,64,384,48],[236,14,385,10],[236,18,385,14],[236,19,385,15,"updateGestureHandler"],[236,39,385,35],[236,40,385,36,"newConfig"],[236,49,385,45],[236,50,385,46],[237,12,386,8],[238,10,387,6],[239,8,388,4],[240,6,388,5],[241,8,388,5],[242,8,388,5],[242,15,390,4],[242,39,390,19,"updates"],[242,46,390,31],[242,48,390,33],[243,10,391,6],[243,14,391,12,"mergedProps"],[243,25,391,23],[243,46,391,31],[243,50,391,35],[243,51,391,36,"props"],[243,56,391,41],[243,58,391,46,"updates"],[243,65,391,53],[243,66,391,55],[244,10,392,6],[244,14,392,12,"newConfig"],[244,23,392,21],[244,26,392,24],[244,30,392,24,"filterConfig"],[244,100,392,36],[244,102,393,8,"transformProps"],[244,116,393,22],[244,119,393,25,"transformProps"],[244,133,393,39],[244,134,393,40,"mergedProps"],[244,145,393,51],[244,146,393,52],[244,149,393,55,"mergedProps"],[244,160,393,66],[244,205,394,12,"allowedProps"],[244,217,394,24],[244,253,394,29,"customNativeProps"],[244,270,394,46],[244,274,395,8,"config"],[244,280,395,14],[244,281,396,7],[245,10,397,6],[245,14,397,10],[245,15,397,11,"updateGestureHandler"],[245,35,397,31],[245,36,397,32,"newConfig"],[245,45,397,41],[245,46,397,42],[246,8,398,4],[247,6,398,5],[248,8,398,5],[249,8,398,5],[249,15,400,4],[249,33,400,13],[250,10,400,13],[251,10,401,6],[251,14,401,10,"gestureEventHandler"],[251,33,401,29],[251,36,401,32],[251,40,401,36],[251,41,401,37,"onGestureHandlerEvent"],[251,62,401,58],[252,10,407,6],[252,29,408,8],[252,33,408,12],[252,34,408,13,"props"],[252,39,408,18],[253,12,407,14,"onGestureEvent"],[253,26,407,28],[253,42,407,14,"onGestureEvent"],[253,56,407,28],[254,12,407,30,"onGestureHandlerEvent"],[254,33,407,51],[254,49,407,30,"onGestureHandlerEvent"],[254,70,407,51],[255,10,409,6],[255,14,409,10,"onGestureEvent"],[255,28,409,24],[255,32,409,28],[255,39,409,35,"onGestureEvent"],[255,53,409,49],[255,58,409,54],[255,68,409,64],[255,70,409,66],[256,12,413,8],[256,16,413,12,"onGestureHandlerEvent"],[256,37,413,33],[256,39,413,35],[257,14,414,10],[257,20,414,16],[257,24,414,20,"Error"],[257,29,414,25],[257,30,415,12],[257,103,415,85],[257,104,416,11],[258,12,417,8],[259,12,418,8,"gestureEventHandler"],[259,31,418,27],[259,34,418,30,"onGestureEvent"],[259,48,418,44],[260,10,419,6],[260,11,419,7],[260,17,419,13],[261,12,420,8],[261,16,421,10,"onGestureHandlerEvent"],[261,37,421,31],[261,41,422,10],[261,48,422,17,"onGestureHandlerEvent"],[261,69,422,38],[261,74,422,43],[261,84,422,53],[261,86,423,10],[262,14,424,10],[262,20,424,16],[262,24,424,20,"Error"],[262,29,424,25],[262,30,425,12],[262,103,425,85],[262,104,426,11],[263,12,427,8],[264,10,428,6],[265,10,430,6],[265,14,430,10,"gestureStateEventHandler"],[265,38,430,34],[265,41,430,37],[265,45,430,41],[265,46,430,42,"onGestureHandlerStateChange"],[265,73,430,69],[266,10,436,6],[266,29,439,40],[266,33,439,44],[266,34,439,45,"props"],[266,39,439,50],[267,12,437,8,"onHandlerStateChange"],[267,32,437,28],[267,48,437,8,"onHandlerStateChange"],[267,68,437,28],[268,12,438,8,"onGestureHandlerStateChange"],[268,39,438,35],[268,55,438,8,"onGestureHandlerStateChange"],[268,82,438,35],[269,10,440,6],[269,14,440,10,"onHandlerStateChange"],[269,34,440,30],[269,38,440,34],[269,45,440,41,"onHandlerStateChange"],[269,65,440,61],[269,70,440,66],[269,80,440,76],[269,82,440,78],[270,12,444,8],[270,16,444,12,"onGestureHandlerStateChange"],[270,43,444,39],[270,45,444,41],[271,14,445,10],[271,20,445,16],[271,24,445,20,"Error"],[271,29,445,25],[271,30,446,12],[271,103,446,85],[271,104,447,11],[272,12,448,8],[273,12,449,8,"gestureStateEventHandler"],[273,36,449,32],[273,39,449,35,"onHandlerStateChange"],[273,59,449,55],[274,10,450,6],[274,11,450,7],[274,17,450,13],[275,12,451,8],[275,16,452,10,"onGestureHandlerStateChange"],[275,43,452,37],[275,47,453,10],[275,54,453,17,"onGestureHandlerStateChange"],[275,81,453,44],[275,86,453,49],[275,96,453,59],[275,98,454,10],[276,14,455,10],[276,20,455,16],[276,24,455,20,"Error"],[276,29,455,25],[276,30,456,12],[276,103,456,85],[276,104,457,11],[277,12,458,8],[278,10,459,6],[279,10,460,6],[279,14,460,12,"events"],[279,20,460,18],[279,23,460,21],[280,12,461,8,"onGestureHandlerEvent"],[280,33,461,29],[280,35,461,31],[280,39,461,35],[280,40,461,36,"state"],[280,45,461,41],[280,46,461,42,"allowTouches"],[280,58,461,54],[280,61,462,12,"gestureEventHandler"],[280,80,462,31],[280,83,463,12,"undefined"],[280,92,463,21],[281,12,464,8,"onGestureHandlerStateChange"],[281,39,464,35],[281,41,464,37],[281,45,464,41],[281,46,464,42,"state"],[281,51,464,47],[281,52,464,48,"allowTouches"],[281,64,464,60],[281,67,465,12,"gestureStateEventHandler"],[281,91,465,36],[281,94,466,12,"undefined"],[282,10,467,6],[282,11,467,7],[283,10,469,6],[283,14,469,10],[283,15,469,11,"propsRef"],[283,23,469,19],[283,24,469,20,"current"],[283,31,469,27],[283,34,469,30,"events"],[283,40,469,36],[284,10,471,6],[284,14,471,10,"child"],[284,19,471,20],[284,22,471,23],[284,26,471,27],[285,10,472,6],[285,14,472,10],[286,12,473,8,"child"],[286,17,473,13],[286,20,473,16,"React"],[286,25,473,21],[286,26,473,22,"Children"],[286,34,473,30],[286,35,473,31,"only"],[286,39,473,35],[286,40,473,36],[286,44,473,40],[286,45,473,41,"props"],[286,50,473,46],[286,51,473,47,"children"],[286,59,473,55],[286,60,473,56],[287,10,474,6],[287,11,474,7],[287,12,474,8],[287,19,474,15,"e"],[287,20,474,16],[287,22,474,18],[288,12,475,8],[288,18,475,14],[288,22,475,18,"Error"],[288,27,475,23],[288,28,476,10],[288,32,476,10,"tagMessage"],[288,86,476,20],[288,88,477,13],[288,91,477,15,"name"],[288,95,477,20],[288,251,477,175],[288,252,478,11],[288,253,479,9],[289,10,480,6],[290,10,482,6],[290,14,482,10,"grandChildren"],[290,27,482,23],[290,30,482,26,"child"],[290,35,482,31],[290,36,482,32,"props"],[290,41,482,37],[290,42,482,38,"children"],[290,50,482,46],[291,10,483,6],[291,14,484,8,"__DEV__"],[291,21,484,15],[291,25,485,8,"child"],[291,30,485,13],[291,31,485,14,"type"],[291,35,485,18],[291,40,486,9,"child"],[291,45,486,14],[291,46,486,15,"type"],[291,50,486,19],[291,55,486,24],[291,79,486,48],[291,83,487,10,"child"],[291,88,487,15],[291,89,487,16,"type"],[291,93,487,20],[291,94,487,21,"name"],[291,98,487,25],[291,103,487,30],[291,109,487,36],[291,113,488,10,"child"],[291,118,488,15],[291,119,488,16,"type"],[291,123,488,20],[291,124,488,21,"displayName"],[291,135,488,32],[291,140,488,37],[291,146,488,43],[291,147,488,44],[291,149,489,8],[292,12,490,8,"grandChildren"],[292,25,490,21],[292,28,490,24,"React"],[292,33,490,29],[292,34,490,30,"Children"],[292,42,490,38],[292,43,490,39,"toArray"],[292,50,490,46],[292,51,490,47,"grandChildren"],[292,64,490,60],[292,65,490,61],[293,12,491,8,"grandChildren"],[293,25,491,21],[293,26,491,22,"push"],[293,30,491,26],[293,31,492,10],[293,93,492,11],[293,173,492,32],[294,14,494,12],[294,19,494,17],[294,21,494,18],[294,40,494,37],[295,14,495,12],[295,21,495,19],[295,23,495,21,"child"],[295,28,495,26],[295,29,495,27,"props"],[295,34,495,32],[295,35,495,33,"hitSlop"],[296,12,495,41],[296,15,493,16],[296,38,493,39],[296,39,496,12],[296,40,497,9],[297,10,498,6],[298,10,500,6],[298,17,500,13,"React"],[298,22,500,18],[298,23,500,19,"cloneElement"],[298,35,500,31],[298,36,501,8,"child"],[298,41,501,13],[299,12,503,10,"ref"],[299,15,503,13],[299,17,503,15],[299,21,503,19],[299,22,503,20,"refHandler"],[299,32,503,30],[300,12,504,10,"collapsable"],[300,23,504,21],[300,25,504,23],[301,10,504,28],[301,13,505,14],[301,17,505,14,"isJestEnv"],[301,70,505,23],[301,73,505,25],[301,76,506,14],[302,12,507,16,"handlerType"],[302,23,507,27],[302,25,507,29,"name"],[302,29,507,33],[303,12,508,16,"handlerTag"],[303,22,508,26],[303,24,508,28],[303,28,508,32],[303,29,508,33,"handlerTag"],[304,10,509,14],[304,11,509,15],[304,14,510,14],[304,15,510,15],[304,16,510,16],[305,12,511,10,"testID"],[305,18,511,16],[305,42,511,18],[305,46,511,22],[305,47,511,23,"props"],[305,52,511,28],[305,53,511,29,"testID"],[305,59,511,35],[305,92,511,39,"child"],[305,97,511,44],[305,98,511,45,"props"],[305,103,511,50],[305,104,511,51,"testID"],[306,10,511,57],[306,13,512,13,"events"],[306,19,512,19],[306,22,514,8,"grandChildren"],[306,35,514,21],[306,36,515,7],[307,8,516,4],[308,6,516,5],[309,6,516,5],[310,4,516,5],[310,6,166,24,"React"],[310,11,166,29],[310,12,166,30,"Component"],[310,21,166,39],[311,4,166,8,"Handler"],[311,11,166,15],[311,12,170,11,"displayName"],[311,23,170,22],[311,26,170,25,"name"],[311,30,170,29],[312,4,518,2],[312,11,518,9,"Handler"],[312,18,518,16],[313,2,519,0],[314,0,519,1]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","setImmediate$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCmF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQ6B;ECa;ICc;KDY;IEE;UPM;0BQC,yBR;WOE;2CEU;SFG;KFY;IKE;KLM;IME;KNa;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBiB;KXU;mCYE;KZO;IaE;2CTO;SSG;KbW;IcE;KdQ;IeE;KfoH;GDC;CRE"}},"type":"js/module"}]}