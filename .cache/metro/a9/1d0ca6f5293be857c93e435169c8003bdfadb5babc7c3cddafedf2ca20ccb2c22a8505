{"dependencies":[{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":6,"index":531},"end":{"line":28,"column":7,"index":665}},{"start":{"line":35,"column":4,"index":785},"end":{"line":39,"column":5,"index":978}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    var matches = aspectRatio.split('/').map(function (s) {\n      return s.trim();\n    });\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        _$$_REQUIRE(_dependencyMap[0], \"invariant\")(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(function (n) {\n      return Number.isNaN(Number(n));\n    });\n    if (__DEV__) {\n      _$$_REQUIRE(_dependencyMap[0], \"invariant\")(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  module.exports = processAspectRatio;\n});","lineCount":32,"map":[[2,2,11,0],[2,14,11,12],[4,2,15,0],[4,11,15,9,"processAspectRatio"],[4,29,15,27],[4,30,15,28,"aspectRatio"],[4,41,15,56],[4,43,15,67],[5,4,16,2],[5,8,16,6],[5,15,16,13,"aspectRatio"],[5,26,16,24],[5,31,16,29],[5,39,16,37],[5,41,16,39],[6,6,17,4],[6,13,17,11,"aspectRatio"],[6,24,17,22],[7,4,18,2],[8,4,20,2],[8,8,20,8,"matches"],[8,15,20,15],[8,18,20,18,"aspectRatio"],[8,29,20,29],[8,30,20,30,"split"],[8,35,20,35],[8,36,20,36],[8,39,20,39],[8,40,20,40],[8,41,20,41,"map"],[8,44,20,44],[8,45,20,45],[8,55,20,45,"s"],[8,56,20,46],[9,6,20,46],[9,13,20,50,"s"],[9,14,20,51],[9,15,20,52,"trim"],[9,19,20,56],[9,21,20,58],[10,4,20,58],[10,6,20,59],[11,4,22,2],[11,8,22,6,"matches"],[11,15,22,13],[11,16,22,14,"includes"],[11,24,22,22],[11,25,22,23],[11,31,22,29],[11,32,22,30],[11,34,22,32],[12,6,23,4],[12,10,23,8,"__DEV__"],[12,17,23,15],[12,19,23,17],[13,8,24,6],[13,52,25,8,"matches"],[13,59,25,15],[13,60,25,16,"length"],[13,66,25,22],[13,68,26,8],[13,129,26,69],[13,131,27,8,"aspectRatio"],[13,142,27,19],[13,143,28,7],[14,6,29,4],[15,6,30,4],[16,4,31,2],[17,4,33,2],[17,8,33,8,"hasNonNumericValues"],[17,27,33,27],[17,30,33,30,"matches"],[17,37,33,37],[17,38,33,38,"some"],[17,42,33,42],[17,43,33,43],[17,53,33,43,"n"],[17,54,33,44],[18,6,33,44],[18,13,33,48,"Number"],[18,19,33,54],[18,20,33,55,"isNaN"],[18,25,33,60],[18,26,33,61,"Number"],[18,32,33,67],[18,33,33,68,"n"],[18,34,33,69],[18,35,33,70],[18,36,33,71],[19,4,33,71],[19,6,33,72],[20,4,34,2],[20,8,34,6,"__DEV__"],[20,15,34,13],[20,17,34,15],[21,6,35,4],[21,50,36,6],[21,51,36,7,"hasNonNumericValues"],[21,70,36,26],[21,75,36,31,"matches"],[21,82,36,38],[21,83,36,39,"length"],[21,89,36,45],[21,94,36,50],[21,95,36,51],[21,99,36,55,"matches"],[21,106,36,62],[21,107,36,63,"length"],[21,113,36,69],[21,118,36,74],[21,119,36,75],[21,120,36,76],[21,122,37,6],[21,194,37,78],[21,196,38,6,"aspectRatio"],[21,207,38,17],[21,208,39,5],[22,4,40,2],[23,4,42,2],[23,8,42,6,"hasNonNumericValues"],[23,27,42,25],[23,29,42,27],[24,6,43,4],[25,4,44,2],[26,4,46,2],[26,8,46,6,"matches"],[26,15,46,13],[26,16,46,14,"length"],[26,22,46,20],[26,27,46,25],[26,28,46,26],[26,30,46,28],[27,6,47,4],[27,13,47,11,"Number"],[27,19,47,17],[27,20,47,18,"matches"],[27,27,47,25],[27,28,47,26],[27,29,47,27],[27,30,47,28],[27,31,47,29],[27,34,47,32,"Number"],[27,40,47,38],[27,41,47,39,"matches"],[27,48,47,46],[27,49,47,47],[27,50,47,48],[27,51,47,49],[27,52,47,50],[28,4,48,2],[29,4,50,2],[29,11,50,9,"Number"],[29,17,50,15],[29,18,50,16,"matches"],[29,25,50,23],[29,26,50,24],[29,27,50,25],[29,28,50,26],[29,29,50,27],[30,2,51,0],[31,2,53,0,"module"],[31,8,53,6],[31,9,53,7,"exports"],[31,16,53,14],[31,19,53,17,"processAspectRatio"],[31,37,53,35],[32,0,53,36]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCK,aD;2CEa,4BF;CDkB"}},"type":"js/module"}]}