{"dependencies":[{"name":"superstruct/lib/index","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":15,"index":751},"end":{"line":20,"column":26,"index":762},"identifierName":"superstruct"}],"key":"XI4Qrl+SFiB9fa+LiurAhtTtVv8="}},{"name":"./validate","data":{"asyncType":null,"locs":[{"start":{"line":45,"column":5,"index":1302},"end":{"line":45,"column":16,"index":1313},"identifierName":"isUndefined"},{"start":{"line":45,"column":32,"index":1329},"end":{"line":45,"column":43,"index":1340},"identifierName":"isUndefined"},{"start":{"line":46,"column":6,"index":1362},"end":{"line":46,"column":17,"index":1373},"identifierName":"isUndefined"},{"start":{"line":46,"column":32,"index":1388},"end":{"line":46,"column":43,"index":1399},"identifierName":"isUndefined"}],"key":"+yJjX+nI/0lEJ6yPdEO4v1DevBY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.validateStruct = exports.validateCompound = exports.default = void 0;\n  var _default = (0, _$$_REQUIRE(_dependencyMap[0], \"superstruct/lib/index\").superstruct)({\n    types: {\n      shortDate: function shortDate(value) {\n        return typeof value === 'string' && !!value.match(/^\\d{4}-\\d{2}-\\d{2}$/);\n      }\n    }\n  });\n  exports.default = _default;\n  var validateStruct = function validateStruct() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var struct = arguments.length > 1 ? arguments[1] : undefined;\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    try {\n      return struct(value);\n    } catch (e) {\n      var path = e.path,\n        reason = e.reason;\n      var key = path[0];\n      if (reason === undefined) {\n        throw new Error(`${prefix} unknown property '${key}'.`);\n      }\n      e.message = `${prefix} ${e.message}`;\n      throw e;\n    }\n  };\n  exports.validateStruct = validateStruct;\n  var validateCompound = function validateCompound() {\n    var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var a = arguments.length > 1 ? arguments[1] : undefined;\n    var b = arguments.length > 2 ? arguments[2] : undefined;\n    var prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    if ((0, _$$_REQUIRE(_dependencyMap[1], \"./validate\").isUndefined)(source[a]) && !(0, _$$_REQUIRE(_dependencyMap[1], \"./validate\").isUndefined)(source[b]) || !(0, _$$_REQUIRE(_dependencyMap[1], \"./validate\").isUndefined)(source[a]) && (0, _$$_REQUIRE(_dependencyMap[1], \"./validate\").isUndefined)(source[b])) {\n      throw new Error(`${prefix} if you supply the '${a}' parameter, you must also supply the '${b}' parameter.`);\n    }\n  };\n  exports.validateCompound = validateCompound;\n});","lineCount":42,"map":[[6,17,20,15],[6,21,20,15,"superstruct"],[6,88,20,26],[6,90,20,27],[7,4,21,2,"types"],[7,9,21,7],[7,11,21,9],[8,6,22,4,"shortDate"],[8,15,22,13],[8,17,22,15],[8,36,22,15,"value"],[8,41,22,20],[9,8,22,20],[9,15,22,24],[9,22,22,31,"value"],[9,27,22,36],[9,32,22,41],[9,40,22,49],[9,44,22,53],[9,45,22,54],[9,46,22,55,"value"],[9,51,22,60],[9,52,22,61,"match"],[9,57,22,66],[9,58,22,67],[9,79,22,88],[9,80,22,89],[10,6,22,89],[11,4,23,2],[12,2,24,0],[12,3,24,1],[12,4,24,2],[13,2,24,2],[14,2,26,7],[14,6,26,13,"validateStruct"],[14,20,26,27],[14,23,26,30],[14,32,26,13,"validateStruct"],[14,46,26,27],[14,49,26,67],[15,4,26,67],[15,8,26,31,"value"],[15,13,26,36],[15,84,26,39],[15,85,26,40],[15,86,26,41],[16,4,26,41],[16,8,26,43,"struct"],[16,14,26,49],[17,4,26,49],[17,8,26,51,"prefix"],[17,14,26,57],[17,85,26,60],[17,87,26,62],[18,4,27,2],[18,8,27,6],[19,6,28,4],[19,13,28,11,"struct"],[19,19,28,17],[19,20,28,18,"value"],[19,25,28,23],[19,26,28,24],[20,4,29,2],[20,5,29,3],[20,6,29,4],[20,13,29,11,"e"],[20,14,29,12],[20,16,29,14],[21,6,30,4],[21,10,30,12,"path"],[21,14,30,16],[21,17,30,29,"e"],[21,18,30,30],[21,19,30,12,"path"],[21,23,30,16],[22,8,30,18,"reason"],[22,14,30,24],[22,17,30,29,"e"],[22,18,30,30],[22,19,30,18,"reason"],[22,25,30,24],[23,6,31,4],[23,10,31,10,"key"],[23,13,31,13],[23,16,31,16,"path"],[23,20,31,20],[23,21,31,21],[23,22,31,22],[23,23,31,23],[24,6,33,4],[24,10,33,8,"reason"],[24,16,33,14],[24,21,33,19,"undefined"],[24,30,33,28],[24,32,33,30],[25,8,34,6],[25,14,34,12],[25,18,34,16,"Error"],[25,23,34,21],[25,24,34,23],[25,27,34,25,"prefix"],[25,33,34,32],[25,55,34,53,"key"],[25,58,34,57],[25,62,34,60],[25,63,34,61],[26,6,35,4],[27,6,37,4,"e"],[27,7,37,5],[27,8,37,6,"message"],[27,15,37,13],[27,18,37,17],[27,21,37,19,"prefix"],[27,27,37,26],[27,31,37,29,"e"],[27,32,37,30],[27,33,37,31,"message"],[27,40,37,39],[27,42,37,40],[28,6,39,4],[28,12,39,10,"e"],[28,13,39,11],[29,4,40,2],[30,2,41,0],[30,3,41,1],[31,2,41,2],[32,2,43,7],[32,6,43,13,"validateCompound"],[32,22,43,29],[32,25,43,32],[32,34,43,13,"validateCompound"],[32,50,43,29],[32,53,43,68],[33,4,43,68],[33,8,43,33,"source"],[33,14,43,39],[33,85,43,42],[33,86,43,43],[33,87,43,44],[34,4,43,44],[34,8,43,46,"a"],[34,9,43,47],[35,4,43,47],[35,8,43,49,"b"],[35,9,43,50],[36,4,43,50],[36,8,43,52,"prefix"],[36,14,43,58],[36,85,43,61],[36,87,43,63],[37,4,44,2],[37,8,45,5],[37,12,45,5,"isUndefined"],[37,68,45,16],[37,70,45,17,"source"],[37,76,45,23],[37,77,45,24,"a"],[37,78,45,25],[37,79,45,26],[37,80,45,27],[37,84,45,31],[37,85,45,32],[37,89,45,32,"isUndefined"],[37,145,45,43],[37,147,45,44,"source"],[37,153,45,50],[37,154,45,51,"b"],[37,155,45,52],[37,156,45,53],[37,157,45,54],[37,161,46,5],[37,162,46,6],[37,166,46,6,"isUndefined"],[37,222,46,17],[37,224,46,18,"source"],[37,230,46,24],[37,231,46,25,"a"],[37,232,46,26],[37,233,46,27],[37,234,46,28],[37,238,46,32],[37,242,46,32,"isUndefined"],[37,298,46,43],[37,300,46,44,"source"],[37,306,46,50],[37,307,46,51,"b"],[37,308,46,52],[37,309,46,53],[37,310,46,55],[37,312,47,4],[38,6,48,4],[38,12,48,10],[38,16,48,14,"Error"],[38,21,48,19],[38,22,49,7],[38,25,49,9,"prefix"],[38,31,49,16],[38,54,49,38,"a"],[38,55,49,40],[38,97,49,81,"b"],[38,98,49,83],[38,112,49,96],[38,113,50,5],[39,4,51,2],[40,2,52,0],[40,3,52,1],[41,2,52,2],[42,0,52,2]],"functionMap":{"names":["<global>","superstruct$argument_0.types.shortDate","validateStruct","validateCompound"],"mappings":"AAA;eCqB,0ED;8BEI;CFe;gCGE;CHS"}},"type":"js/module"}]}