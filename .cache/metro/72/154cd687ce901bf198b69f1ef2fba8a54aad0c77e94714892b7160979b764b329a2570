{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../core","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":11,"index":672},"end":{"line":28,"column":22,"index":683},"identifierName":"makeMutable"},{"start":{"line":38,"column":11,"index":838},"end":{"line":38,"column":22,"index":849},"identifierName":"makeMutable"},{"start":{"line":64,"column":15,"index":1373},"end":{"line":64,"column":29,"index":1387},"identifierName":"registerSensor"},{"start":{"line":75,"column":37,"index":1664},"end":{"line":75,"column":53,"index":1680},"identifierName":"unregisterSensor"}],"key":"VLk+qcyrxDAPvpn7SWZ7jlIDVZM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SensorType = void 0;\n  exports.useAnimatedSensor = useAnimatedSensor;\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  var SensorType;\n  exports.SensorType = SensorType;\n  (function (SensorType) {\n    SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n    SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n    SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n    SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n    SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n  })(SensorType || (exports.SensorType = SensorType = {}));\n  function initSensorData(sensorType) {\n    if (sensorType === SensorType.ROTATION) {\n      return (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").makeMutable)({\n        qw: 0,\n        qx: 0,\n        qy: 0,\n        qz: 0,\n        yaw: 0,\n        pitch: 0,\n        roll: 0\n      });\n    } else {\n      return (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").makeMutable)({\n        x: 0,\n        y: 0,\n        z: 0\n      });\n    }\n  }\n  function useAnimatedSensor(sensorType, userConfig) {\n    var ref = (0, _react.useRef)({\n      sensor: initSensorData(sensorType),\n      unregister: function unregister() {},\n      isAvailable: false,\n      config: {\n        interval: 0\n      }\n    });\n    (0, _react.useEffect)(function () {\n      ref.current.config = Object.assign({\n        interval: 'auto'\n      }, userConfig);\n      var sensorData = ref.current.sensor;\n      var id = (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").registerSensor)(sensorType, ref.current.config.interval === 'auto' ? -1 : ref.current.config.interval, function () {\n        var _e = [new Error(), -2, -20];\n        var _f = function _f(data) {\n          sensorData.value = data;\n        };\n        _f._closure = {\n          sensorData: sensorData\n        };\n        _f.asString = \"function anonymous(data) {\\n  const {\\n    sensorData\\n  } = this._closure;\\n  sensorData.value = data;\\n}\";\n        _f.__workletHash = 5959238695163;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedSensor.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAkEOA,kBAAS;EAAA;IAAA;EAAA;EAERC,UAAU,CAACC,KAAK,GAAGF,IAAI;AACzB\\\",\\\"names\\\":[\\\"data\\\",\\\"sensorData\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/hook/useAnimatedSensor.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }());\n      if (id !== -1) {\n        ref.current.unregister = function () {\n          return (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").unregisterSensor)(id);\n        };\n        ref.current.isAvailable = true;\n      } else {\n        ref.current.unregister = function () {};\n        ref.current.isAvailable = false;\n      }\n      return function () {\n        ref.current.unregister();\n      };\n    }, [sensorType, userConfig]);\n    return ref.current;\n  }\n});","lineCount":80,"map":[[7,2,1,0],[8,2,1,42],[8,6,5,12,"SensorType"],[8,16,5,22],[9,2,5,22],[10,2,5,22],[10,13,5,12,"SensorType"],[10,23,5,22],[11,4,5,12,"SensorType"],[11,14,5,22],[11,15,5,12,"SensorType"],[11,25,5,22],[12,4,5,12,"SensorType"],[12,14,5,22],[12,15,5,12,"SensorType"],[12,25,5,22],[13,4,5,12,"SensorType"],[13,14,5,22],[13,15,5,12,"SensorType"],[13,25,5,22],[14,4,5,12,"SensorType"],[14,14,5,22],[14,15,5,12,"SensorType"],[14,25,5,22],[15,4,5,12,"SensorType"],[15,14,5,22],[15,15,5,12,"SensorType"],[15,25,5,22],[16,2,5,22],[16,5,5,12,"SensorType"],[16,15,5,22],[16,41,5,12,"SensorType"],[16,51,5,22],[17,2,24,0],[17,11,24,9,"initSensorData"],[17,25,24,23],[17,26,25,2,"sensorType"],[17,36,25,24],[17,38,26,40],[18,4,27,2],[18,8,27,6,"sensorType"],[18,18,27,16],[18,23,27,21,"SensorType"],[18,33,27,31],[18,34,27,32,"ROTATION"],[18,42,27,40],[18,44,27,42],[19,6,28,4],[19,13,28,11],[19,17,28,11,"makeMutable"],[19,70,28,22],[19,72,28,48],[20,8,29,6,"qw"],[20,10,29,8],[20,12,29,10],[20,13,29,11],[21,8,30,6,"qx"],[21,10,30,8],[21,12,30,10],[21,13,30,11],[22,8,31,6,"qy"],[22,10,31,8],[22,12,31,10],[22,13,31,11],[23,8,32,6,"qz"],[23,10,32,8],[23,12,32,10],[23,13,32,11],[24,8,33,6,"yaw"],[24,11,33,9],[24,13,33,11],[24,14,33,12],[25,8,34,6,"pitch"],[25,13,34,11],[25,15,34,13],[25,16,34,14],[26,8,35,6,"roll"],[26,12,35,10],[26,14,35,12],[27,6,36,4],[27,7,36,5],[27,8,36,6],[28,4,37,2],[28,5,37,3],[28,11,37,9],[29,6,38,4],[29,13,38,11],[29,17,38,11,"makeMutable"],[29,70,38,22],[29,72,38,48],[30,8,39,6,"x"],[30,9,39,7],[30,11,39,9],[30,12,39,10],[31,8,40,6,"y"],[31,9,40,7],[31,11,40,9],[31,12,40,10],[32,8,41,6,"z"],[32,9,41,7],[32,11,41,9],[33,6,42,4],[33,7,42,5],[33,8,42,6],[34,4,43,2],[35,2,44,0],[36,2,46,7],[36,11,46,16,"useAnimatedSensor"],[36,28,46,33],[36,29,47,2,"sensorType"],[36,39,47,24],[36,41,48,2,"userConfig"],[36,51,48,27],[36,53,49,18],[37,4,50,2],[37,8,50,8,"ref"],[37,11,50,11],[37,14,50,14],[37,18,50,14,"useRef"],[37,31,50,20],[37,33,50,37],[38,6,51,4,"sensor"],[38,12,51,10],[38,14,51,12,"initSensorData"],[38,28,51,26],[38,29,51,27,"sensorType"],[38,39,51,37],[38,40,51,38],[39,6,52,4,"unregister"],[39,16,52,14],[39,18,52,16],[39,40,52,22],[39,41,54,4],[39,42,54,5],[40,6,55,4,"isAvailable"],[40,17,55,15],[40,19,55,17],[40,24,55,22],[41,6,56,4,"config"],[41,12,56,10],[41,14,56,12],[42,8,57,6,"interval"],[42,16,57,14],[42,18,57,16],[43,6,58,4],[44,4,59,2],[44,5,59,3],[44,6,59,4],[45,4,61,2],[45,8,61,2,"useEffect"],[45,24,61,11],[45,26,61,12],[45,38,61,18],[46,6,62,4,"ref"],[46,9,62,7],[46,10,62,8,"current"],[46,17,62,15],[46,18,62,16,"config"],[46,24,62,22],[47,8,62,27,"interval"],[47,16,62,35],[47,18,62,37],[48,6,62,43],[48,9,62,48,"userConfig"],[48,19,62,58],[48,20,62,60],[49,6,63,4],[49,10,63,10,"sensorData"],[49,20,63,20],[49,23,63,23,"ref"],[49,26,63,26],[49,27,63,27,"current"],[49,34,63,34],[49,35,63,35,"sensor"],[49,41,63,42],[50,6,64,4],[50,10,64,10,"id"],[50,12,64,12],[50,15,64,15],[50,19,64,15,"registerSensor"],[50,75,64,29],[50,77,65,6,"sensorType"],[50,87,65,16],[50,89,66,6,"ref"],[50,92,66,9],[50,93,66,10,"current"],[50,100,66,17],[50,101,66,18,"config"],[50,107,66,24],[50,108,66,25,"interval"],[50,116,66,33],[50,121,66,38],[50,127,66,44],[50,130,66,47],[50,131,66,48],[50,132,66,49],[50,135,66,52,"ref"],[50,138,66,55],[50,139,66,56,"current"],[50,146,66,63],[50,147,66,64,"config"],[50,153,66,70],[50,154,66,71,"interval"],[50,162,66,79],[51,8,66,79],[52,8,66,79],[52,29,67,7,"data"],[52,33,67,11],[52,35,67,16],[53,10,69,8,"sensorData"],[53,20,69,18],[53,21,69,19,"value"],[53,26,69,24],[53,29,69,27,"data"],[53,33,69,31],[54,8,70,6],[54,9,70,7],[55,8,70,7],[56,10,70,7],[56,22,2,2,"sensorData"],[57,8,2,12],[58,8,2,12],[59,8,2,12],[60,8,2,12],[61,8,2,12],[62,8,2,12],[63,8,2,12],[64,6,2,12],[64,10,71,5],[65,6,73,4],[65,10,73,8,"id"],[65,12,73,10],[65,17,73,15],[65,18,73,16],[65,19,73,17],[65,21,73,19],[66,8,75,6,"ref"],[66,11,75,9],[66,12,75,10,"current"],[66,19,75,17],[66,20,75,18,"unregister"],[66,30,75,28],[66,33,75,31],[67,10,75,31],[67,17,75,37],[67,21,75,37,"unregisterSensor"],[67,79,75,53],[67,81,75,54,"id"],[67,83,75,56],[67,84,75,57],[68,8,75,57],[69,8,76,6,"ref"],[69,11,76,9],[69,12,76,10,"current"],[69,19,76,17],[69,20,76,18,"isAvailable"],[69,31,76,29],[69,34,76,32],[69,38,76,36],[70,6,77,4],[70,7,77,5],[70,13,77,11],[71,8,79,6,"ref"],[71,11,79,9],[71,12,79,10,"current"],[71,19,79,17],[71,20,79,18,"unregister"],[71,30,79,28],[71,33,79,31],[71,45,79,37],[71,46,81,6],[71,47,81,7],[72,8,82,6,"ref"],[72,11,82,9],[72,12,82,10,"current"],[72,19,82,17],[72,20,82,18,"isAvailable"],[72,31,82,29],[72,34,82,32],[72,39,82,37],[73,6,83,4],[74,6,85,4],[74,13,85,11],[74,25,85,17],[75,8,86,6,"ref"],[75,11,86,9],[75,12,86,10,"current"],[75,19,86,17],[75,20,86,18,"unregister"],[75,30,86,28],[75,32,86,30],[76,6,87,4],[76,7,87,5],[77,4,88,2],[77,5,88,3],[77,7,88,5],[77,8,88,6,"sensorType"],[77,18,88,16],[77,20,88,18,"userConfig"],[77,30,88,28],[77,31,88,29],[77,32,88,30],[78,4,90,2],[78,11,90,9,"ref"],[78,14,90,12],[78,15,90,13,"current"],[78,22,90,20],[79,2,91,0],[80,0,91,1]],"functionMap":{"names":["<global>","initSensorData","useAnimatedSensor","useRef$argument_0.unregister","useEffect$argument_0","registerSensor$argument_2","ref.current.unregister","<anonymous>"],"mappings":"AAA;ACuB;CDoB;OEE;gBCM;KDE;YEO;MCM;ODG;+BEK,0BF;+BEI;OFE;WGI;KHE;GFC;CFG"}},"type":"js/module"}]}