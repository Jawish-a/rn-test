{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":329,"column":0,"index":8301}},{"start":{"line":1,"column":0,"index":0},"end":{"line":329,"column":0,"index":8301}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":329,"column":0,"index":8301}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":329,"column":0,"index":8301}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./infoLog","data":{"asyncType":null,"locs":[{"start":{"line":77,"column":8,"index":2309},"end":{"line":77,"column":78,"index":2379}},{"start":{"line":83,"column":8,"index":2490},"end":{"line":86,"column":9,"index":2605}},{"start":{"line":118,"column":6,"index":3313},"end":{"line":118,"column":46,"index":3353}},{"start":{"line":131,"column":6,"index":3612},"end":{"line":131,"column":55,"index":3661}},{"start":{"line":172,"column":10,"index":4407},"end":{"line":172,"column":69,"index":4466}},{"start":{"line":177,"column":6,"index":4513},"end":{"line":177,"column":27,"index":4534}},{"start":{"line":182,"column":10,"index":4648},"end":{"line":182,"column":56,"index":4694}},{"start":{"line":195,"column":8,"index":4903},"end":{"line":195,"column":76,"index":4971}},{"start":{"line":201,"column":8,"index":5087},"end":{"line":204,"column":9,"index":5209}},{"start":{"line":223,"column":8,"index":5592},"end":{"line":223,"column":75,"index":5659}},{"start":{"line":230,"column":8,"index":5783},"end":{"line":233,"column":9,"index":5954}},{"start":{"line":247,"column":8,"index":6202},"end":{"line":250,"column":9,"index":6305}},{"start":{"line":257,"column":8,"index":6417},"end":{"line":260,"column":9,"index":6534}},{"start":{"line":271,"column":6,"index":6741},"end":{"line":271,"column":54,"index":6789}},{"start":{"line":282,"column":8,"index":6983},"end":{"line":282,"column":79,"index":7054}},{"start":{"line":290,"column":8,"index":7228},"end":{"line":293,"column":9,"index":7344}},{"start":{"line":299,"column":8,"index":7459},"end":{"line":302,"column":9,"index":7577}},{"start":{"line":311,"column":6,"index":7780},"end":{"line":311,"column":52,"index":7826}}],"key":"SSHVtWIKHjYEbWCVN1RC0UTeszg="}},{"name":"../Performance/Systrace","data":{"asyncType":null,"locs":[{"start":{"line":269,"column":20,"index":6676},"end":{"line":269,"column":44,"index":6700}},{"start":{"line":315,"column":6,"index":7874},"end":{"line":315,"column":28,"index":7896}}],"key":"8BbC2DX1/RekdS3q6H5EDxQpVLU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createPerformanceLogger;\n  exports.getCurrentTimestamp = void 0;\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _global$nativeQPLTime;\n  var _cookies = {};\n  var PRINT_TO_CONSOLE = false;\n  var getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : global.performance.now.bind(global.performance);\n  exports.getCurrentTimestamp = getCurrentTimestamp;\n  var PerformanceLogger = function () {\n    function PerformanceLogger() {\n      (0, _classCallCheck2.default)(this, PerformanceLogger);\n      this._timespans = {};\n      this._extras = {};\n      this._points = {};\n      this._pointExtras = {};\n      this._closed = false;\n    }\n    (0, _createClass2.default)(PerformanceLogger, [{\n      key: \"addTimespan\",\n      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: startTime,\n          endTime: endTime,\n          totalTime: endTime - (startTime || 0),\n          startExtras: startExtras,\n          endExtras: endExtras\n        };\n      }\n    }, {\n      key: \"append\",\n      value: function append(performanceLogger) {\n        this._timespans = Object.assign({}, performanceLogger.getTimespans(), this._timespans);\n        this._extras = Object.assign({}, performanceLogger.getExtras(), this._extras);\n        this._points = Object.assign({}, performanceLogger.getPoints(), this._points);\n        this._pointExtras = Object.assign({}, performanceLogger.getPointExtras(), this._pointExtras);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._timespans = {};\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger.js', 'clear');\n        }\n      }\n    }, {\n      key: \"clearCompleted\",\n      value: function clearCompleted() {\n        for (var _key in this._timespans) {\n          var _this$_timespans$_key;\n          if (((_this$_timespans$_key = this._timespans[_key]) == null ? void 0 : _this$_timespans$_key.totalTime) != null) {\n            delete this._timespans[_key];\n          }\n        }\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger.js', 'clearCompleted');\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n      }\n    }, {\n      key: \"currentTimestamp\",\n      value: function currentTimestamp() {\n        return getCurrentTimestamp();\n      }\n    }, {\n      key: \"getExtras\",\n      value: function getExtras() {\n        return this._extras;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        return this._points;\n      }\n    }, {\n      key: \"getPointExtras\",\n      value: function getPointExtras() {\n        return this._pointExtras;\n      }\n    }, {\n      key: \"getTimespans\",\n      value: function getTimespans() {\n        return this._timespans;\n      }\n    }, {\n      key: \"hasTimespan\",\n      value: function hasTimespan(key) {\n        return !!this._timespans[key];\n      }\n    }, {\n      key: \"isClosed\",\n      value: function isClosed() {\n        return this._closed;\n      }\n    }, {\n      key: \"logEverything\",\n      value: function logEverything() {\n        if (PRINT_TO_CONSOLE) {\n          for (var _key2 in this._timespans) {\n            var _this$_timespans$_key2;\n            if (((_this$_timespans$_key2 = this._timespans[_key2]) == null ? void 0 : _this$_timespans$_key2.totalTime) != null) {\n              _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")(_key2 + ': ' + this._timespans[_key2].totalTime + 'ms');\n            }\n          }\n          _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")(this._extras);\n          for (var _key3 in this._points) {\n            if (this._points[_key3] != null) {\n              _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")(_key3 + ': ' + this._points[_key3] + 'ms');\n            }\n          }\n        }\n      }\n    }, {\n      key: \"markPoint\",\n      value: function markPoint(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: markPoint - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._points[key] != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: Attempting to mark a point that has been already logged ', key);\n          }\n          return;\n        }\n        this._points[key] = timestamp;\n        if (extras) {\n          this._pointExtras[key] = extras;\n        }\n      }\n    }, {\n      key: \"removeExtra\",\n      value: function removeExtra(key) {\n        var value = this._extras[key];\n        delete this._extras[key];\n        return value;\n      }\n    }, {\n      key: \"setExtra\",\n      value: function setExtra(key, value) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: setExtra - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._extras.hasOwnProperty(key)) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: Attempting to set an extra that already exists ', {\n              key: key,\n              currentValue: this._extras[key],\n              attemptedValue: value\n            });\n          }\n          return;\n        }\n        this._extras[key] = value;\n      }\n    }, {\n      key: \"startTimespan\",\n      value: function startTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: startTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: timestamp,\n          startExtras: extras\n        };\n        _cookies[key] = _$$_REQUIRE(_dependencyMap[4], \"../Performance/Systrace\").beginAsyncEvent(key);\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger.js', 'start: ' + key);\n        }\n      }\n    }, {\n      key: \"stopTimespan\",\n      value: function stopTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        var timespan = this._timespans[key];\n        if (!timespan || timespan.startTime == null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n          }\n          return;\n        }\n        if (timespan.endTime != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n          }\n          return;\n        }\n        timespan.endExtras = extras;\n        timespan.endTime = timestamp;\n        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[3], \"./infoLog\")('PerformanceLogger.js', 'end: ' + key);\n        }\n        if (_cookies[key] != null) {\n          _$$_REQUIRE(_dependencyMap[4], \"../Performance/Systrace\").endAsyncEvent(key, _cookies[key]);\n          delete _cookies[key];\n        }\n      }\n    }]);\n    return PerformanceLogger;\n  }();\n  function createPerformanceLogger() {\n    return new PerformanceLogger();\n  }\n});","lineCount":254,"map":[[10,2,54,0],[10,6,54,6,"_cookies"],[10,14,54,44],[10,17,54,47],[10,18,54,48],[10,19,54,49],[11,2,56,0],[11,6,56,6,"PRINT_TO_CONSOLE"],[11,22,56,29],[11,25,56,32],[11,30,56,37],[12,2,58,7],[12,6,58,13,"getCurrentTimestamp"],[12,25,58,46],[12,53,59,2,"global"],[12,59,59,8],[12,60,59,9,"nativeQPLTimestamp"],[12,78,59,27],[12,114,59,31,"global"],[12,120,59,37],[12,121,59,38,"performance"],[12,132,59,49],[12,133,59,50,"now"],[12,136,59,53],[12,137,59,54,"bind"],[12,141,59,58],[12,142,59,59,"global"],[12,148,59,65],[12,149,59,66,"performance"],[12,160,59,77],[12,161,59,78],[13,2,59,79],[14,2,59,79],[14,6,61,6,"PerformanceLogger"],[14,23,61,23],[15,4,61,23],[16,6,61,23],[17,6,61,23],[17,11,62,2,"_timespans"],[17,21,62,12],[17,24,62,43],[17,25,62,44],[17,26,62,45],[18,6,62,45],[18,11,63,2,"_extras"],[18,18,63,9],[18,21,63,42],[18,22,63,43],[18,23,63,44],[19,6,63,44],[19,11,64,2,"_points"],[19,18,64,9],[19,21,64,38],[19,22,64,39],[19,23,64,40],[20,6,64,40],[20,11,65,2,"_pointExtras"],[20,23,65,14],[20,26,65,48],[20,27,65,49],[20,28,65,50],[21,6,65,50],[21,11,66,2,"_closed"],[21,18,66,9],[21,21,66,21],[21,26,66,26],[22,4,66,26],[23,4,66,26],[24,6,66,26],[25,6,66,26],[25,13,68,2],[25,34,69,4,"key"],[25,37,69,15],[25,39,70,4,"startTime"],[25,48,70,21],[25,50,71,4,"endTime"],[25,57,71,19],[25,59,72,4,"startExtras"],[25,70,72,24],[25,72,73,4,"endExtras"],[25,81,73,22],[25,83,74,4],[26,8,75,4],[26,12,75,8],[26,16,75,12],[26,17,75,13,"_closed"],[26,24,75,20],[26,26,75,22],[27,10,76,6],[27,14,76,10,"PRINT_TO_CONSOLE"],[27,30,76,26],[27,34,76,30,"__DEV__"],[27,41,76,37],[27,43,76,39],[28,12,77,8],[28,56,77,16],[28,112,77,72],[28,114,77,74,"key"],[28,117,77,77],[28,118,77,78],[29,10,78,6],[30,10,79,6],[31,8,80,4],[32,8,81,4],[32,12,81,8],[32,16,81,12],[32,17,81,13,"_timespans"],[32,27,81,23],[32,28,81,24,"key"],[32,31,81,27],[32,32,81,28],[32,34,81,30],[33,10,82,6],[33,14,82,10,"PRINT_TO_CONSOLE"],[33,30,82,26],[33,34,82,30,"__DEV__"],[33,41,82,37],[33,43,82,39],[34,12,83,8],[34,56,84,10],[34,126,84,80],[34,128,85,10,"key"],[34,131,85,13],[34,132,86,9],[35,10,87,6],[36,10,88,6],[37,8,89,4],[38,8,91,4],[38,12,91,8],[38,13,91,9,"_timespans"],[38,23,91,19],[38,24,91,20,"key"],[38,27,91,23],[38,28,91,24],[38,31,91,27],[39,10,92,6,"startTime"],[39,19,92,15],[39,21,92,6,"startTime"],[39,30,92,15],[40,10,93,6,"endTime"],[40,17,93,13],[40,19,93,6,"endTime"],[40,26,93,13],[41,10,94,6,"totalTime"],[41,19,94,15],[41,21,94,17,"endTime"],[41,28,94,24],[41,32,94,28,"startTime"],[41,41,94,37],[41,45,94,41],[41,46,94,42],[41,47,94,43],[42,10,95,6,"startExtras"],[42,21,95,17],[42,23,95,6,"startExtras"],[42,34,95,17],[43,10,96,6,"endExtras"],[43,19,96,15],[43,21,96,6,"endExtras"],[44,8,97,4],[44,9,97,5],[45,6,98,2],[46,4,98,3],[47,6,98,3],[48,6,98,3],[48,13,100,2],[48,29,100,9,"performanceLogger"],[48,46,100,46],[48,48,100,48],[49,8,101,4],[49,12,101,8],[49,13,101,9,"_timespans"],[49,23,101,19],[49,44,102,9,"performanceLogger"],[49,61,102,26],[49,62,102,27,"getTimespans"],[49,74,102,39],[49,76,102,41],[49,78,103,9],[49,82,103,13],[49,83,103,14,"_timespans"],[49,93,103,24],[49,94,104,5],[50,8,105,4],[50,12,105,8],[50,13,105,9,"_extras"],[50,20,105,16],[50,41,105,23,"performanceLogger"],[50,58,105,40],[50,59,105,41,"getExtras"],[50,68,105,50],[50,70,105,52],[50,72,105,57],[50,76,105,61],[50,77,105,62,"_extras"],[50,84,105,69],[50,85,105,70],[51,8,106,4],[51,12,106,8],[51,13,106,9,"_points"],[51,20,106,16],[51,41,106,23,"performanceLogger"],[51,58,106,40],[51,59,106,41,"getPoints"],[51,68,106,50],[51,70,106,52],[51,72,106,57],[51,76,106,61],[51,77,106,62,"_points"],[51,84,106,69],[51,85,106,70],[52,8,107,4],[52,12,107,8],[52,13,107,9,"_pointExtras"],[52,25,107,21],[52,46,108,9,"performanceLogger"],[52,63,108,26],[52,64,108,27,"getPointExtras"],[52,78,108,41],[52,80,108,43],[52,82,109,9],[52,86,109,13],[52,87,109,14,"_pointExtras"],[52,99,109,26],[52,100,110,5],[53,6,111,2],[54,4,111,3],[55,6,111,3],[56,6,111,3],[56,13,113,2],[56,30,113,10],[57,8,114,4],[57,12,114,8],[57,13,114,9,"_timespans"],[57,23,114,19],[57,26,114,22],[57,27,114,23],[57,28,114,24],[58,8,115,4],[58,12,115,8],[58,13,115,9,"_extras"],[58,20,115,16],[58,23,115,19],[58,24,115,20],[58,25,115,21],[59,8,116,4],[59,12,116,8],[59,13,116,9,"_points"],[59,20,116,16],[59,23,116,19],[59,24,116,20],[59,25,116,21],[60,8,117,4],[60,12,117,8,"PRINT_TO_CONSOLE"],[60,28,117,24],[60,30,117,26],[61,10,118,6],[61,54,118,14],[61,76,118,36],[61,78,118,38],[61,85,118,45],[61,86,118,46],[62,8,119,4],[63,6,120,2],[64,4,120,3],[65,6,120,3],[66,6,120,3],[66,13,122,2],[66,39,122,19],[67,8,123,4],[67,13,123,9],[67,17,123,15,"key"],[67,21,123,18],[67,25,123,22],[67,29,123,26],[67,30,123,27,"_timespans"],[67,40,123,37],[67,42,123,39],[68,10,123,39],[69,10,124,6],[69,14,124,10],[69,44,124,14],[69,45,124,15,"_timespans"],[69,55,124,25],[69,56,124,26,"key"],[69,60,124,29],[69,61,124,30],[69,82,124,10],[69,104,124,32,"totalTime"],[69,113,124,41],[69,118,124,45],[69,122,124,49],[69,124,124,51],[70,12,125,8],[70,19,125,15],[70,23,125,19],[70,24,125,20,"_timespans"],[70,34,125,30],[70,35,125,31,"key"],[70,39,125,34],[70,40,125,35],[71,10,126,6],[72,8,127,4],[73,8,128,4],[73,12,128,8],[73,13,128,9,"_extras"],[73,20,128,16],[73,23,128,19],[73,24,128,20],[73,25,128,21],[74,8,129,4],[74,12,129,8],[74,13,129,9,"_points"],[74,20,129,16],[74,23,129,19],[74,24,129,20],[74,25,129,21],[75,8,130,4],[75,12,130,8,"PRINT_TO_CONSOLE"],[75,28,130,24],[75,30,130,26],[76,10,131,6],[76,54,131,14],[76,76,131,36],[76,78,131,38],[76,94,131,54],[76,95,131,55],[77,8,132,4],[78,6,133,2],[79,4,133,3],[80,6,133,3],[81,6,133,3],[81,13,135,2],[81,30,135,10],[82,8,136,4],[82,12,136,8],[82,13,136,9,"_closed"],[82,20,136,16],[82,23,136,19],[82,27,136,23],[83,6,137,2],[84,4,137,3],[85,6,137,3],[86,6,137,3],[86,13,139,2],[86,41,139,29],[87,8,140,4],[87,15,140,11,"getCurrentTimestamp"],[87,34,140,30],[87,36,140,32],[88,6,141,2],[89,4,141,3],[90,6,141,3],[91,6,141,3],[91,13,143,2],[91,34,143,44],[92,8,144,4],[92,15,144,11],[92,19,144,15],[92,20,144,16,"_extras"],[92,27,144,23],[93,6,145,2],[94,4,145,3],[95,6,145,3],[96,6,145,3],[96,13,147,2],[96,34,147,40],[97,8,148,4],[97,15,148,11],[97,19,148,15],[97,20,148,16,"_points"],[97,27,148,23],[98,6,149,2],[99,4,149,3],[100,6,149,3],[101,6,149,3],[101,13,151,2],[101,39,151,45],[102,8,152,4],[102,15,152,11],[102,19,152,15],[102,20,152,16,"_pointExtras"],[102,32,152,28],[103,6,153,2],[104,4,153,3],[105,6,153,3],[106,6,153,3],[106,13,155,2],[106,37,155,45],[107,8,156,4],[107,15,156,11],[107,19,156,15],[107,20,156,16,"_timespans"],[107,30,156,26],[108,6,157,2],[109,4,157,3],[110,6,157,3],[111,6,157,3],[111,13,159,2],[111,34,159,14,"key"],[111,37,159,25],[111,39,159,36],[112,8,160,4],[112,15,160,11],[112,16,160,12],[112,17,160,13],[112,21,160,17],[112,22,160,18,"_timespans"],[112,32,160,28],[112,33,160,29,"key"],[112,36,160,32],[112,37,160,33],[113,6,161,2],[114,4,161,3],[115,6,161,3],[116,6,161,3],[116,13,163,2],[116,33,163,22],[117,8,164,4],[117,15,164,11],[117,19,164,15],[117,20,164,16,"_closed"],[117,27,164,23],[118,6,165,2],[119,4,165,3],[120,6,165,3],[121,6,165,3],[121,13,167,2],[121,38,167,18],[122,8,168,4],[122,12,168,8,"PRINT_TO_CONSOLE"],[122,28,168,24],[122,30,168,26],[123,10,170,6],[123,15,170,11],[123,19,170,17,"key"],[123,24,170,20],[123,28,170,24],[123,32,170,28],[123,33,170,29,"_timespans"],[123,43,170,39],[123,45,170,41],[124,12,170,41],[125,12,171,8],[125,16,171,12],[125,47,171,16],[125,48,171,17,"_timespans"],[125,58,171,27],[125,59,171,28,"key"],[125,64,171,31],[125,65,171,32],[125,86,171,12],[125,109,171,34,"totalTime"],[125,118,171,43],[125,123,171,47],[125,127,171,51],[125,129,171,53],[126,14,172,10],[126,58,172,18,"key"],[126,63,172,21],[126,66,172,24],[126,70,172,28],[126,73,172,31],[126,77,172,35],[126,78,172,36,"_timespans"],[126,88,172,46],[126,89,172,47,"key"],[126,94,172,50],[126,95,172,51],[126,96,172,52,"totalTime"],[126,105,172,61],[126,108,172,64],[126,112,172,68],[126,113,172,69],[127,12,173,8],[128,10,174,6],[129,10,177,6],[129,54,177,14],[129,58,177,18],[129,59,177,19,"_extras"],[129,66,177,26],[129,67,177,27],[130,10,180,6],[130,15,180,11],[130,19,180,17,"key"],[130,24,180,20],[130,28,180,24],[130,32,180,28],[130,33,180,29,"_points"],[130,40,180,36],[130,42,180,38],[131,12,181,8],[131,16,181,12],[131,20,181,16],[131,21,181,17,"_points"],[131,28,181,24],[131,29,181,25,"key"],[131,34,181,28],[131,35,181,29],[131,39,181,33],[131,43,181,37],[131,45,181,39],[132,14,182,10],[132,58,182,18,"key"],[132,63,182,21],[132,66,182,24],[132,70,182,28],[132,73,182,31],[132,77,182,35],[132,78,182,36,"_points"],[132,85,182,43],[132,86,182,44,"key"],[132,91,182,47],[132,92,182,48],[132,95,182,51],[132,99,182,55],[132,100,182,56],[133,12,183,8],[134,10,184,6],[135,8,185,4],[136,6,186,2],[137,4,186,3],[138,6,186,3],[139,6,186,3],[139,13,188,2],[139,32,189,4,"key"],[139,35,189,15],[139,37,192,4],[140,8,192,4],[140,12,190,4,"timestamp"],[140,21,190,22],[140,92,190,25,"getCurrentTimestamp"],[140,111,190,44],[140,113,190,46],[141,8,190,46],[141,12,191,4,"extras"],[141,18,191,19],[142,8,193,4],[142,12,193,8],[142,16,193,12],[142,17,193,13,"_closed"],[142,24,193,20],[142,26,193,22],[143,10,194,6],[143,14,194,10,"PRINT_TO_CONSOLE"],[143,30,194,26],[143,34,194,30,"__DEV__"],[143,41,194,37],[143,43,194,39],[144,12,195,8],[144,56,195,16],[144,110,195,70],[144,112,195,72,"key"],[144,115,195,75],[144,116,195,76],[145,10,196,6],[146,10,197,6],[147,8,198,4],[148,8,199,4],[148,12,199,8],[148,16,199,12],[148,17,199,13,"_points"],[148,24,199,20],[148,25,199,21,"key"],[148,28,199,24],[148,29,199,25],[148,33,199,29],[148,37,199,33],[148,39,199,35],[149,10,200,6],[149,14,200,10,"PRINT_TO_CONSOLE"],[149,30,200,26],[149,34,200,30,"__DEV__"],[149,41,200,37],[149,43,200,39],[150,12,201,8],[150,56,202,10],[150,133,202,87],[150,135,203,10,"key"],[150,138,203,13],[150,139,204,9],[151,10,205,6],[152,10,206,6],[153,8,207,4],[154,8,208,4],[154,12,208,8],[154,13,208,9,"_points"],[154,20,208,16],[154,21,208,17,"key"],[154,24,208,20],[154,25,208,21],[154,28,208,24,"timestamp"],[154,37,208,33],[155,8,209,4],[155,12,209,8,"extras"],[155,18,209,14],[155,20,209,16],[156,10,210,6],[156,14,210,10],[156,15,210,11,"_pointExtras"],[156,27,210,23],[156,28,210,24,"key"],[156,31,210,27],[156,32,210,28],[156,35,210,31,"extras"],[156,41,210,37],[157,8,211,4],[158,6,212,2],[159,4,212,3],[160,6,212,3],[161,6,212,3],[161,13,214,2],[161,34,214,14,"key"],[161,37,214,25],[161,39,214,40],[162,8,215,4],[162,12,215,10,"value"],[162,17,215,15],[162,20,215,18],[162,24,215,22],[162,25,215,23,"_extras"],[162,32,215,30],[162,33,215,31,"key"],[162,36,215,34],[162,37,215,35],[163,8,216,4],[163,15,216,11],[163,19,216,15],[163,20,216,16,"_extras"],[163,27,216,23],[163,28,216,24,"key"],[163,31,216,27],[163,32,216,28],[164,8,217,4],[164,15,217,11,"value"],[164,20,217,16],[165,6,218,2],[166,4,218,3],[167,6,218,3],[168,6,218,3],[168,13,220,2],[168,31,220,11,"key"],[168,34,220,22],[168,36,220,24,"value"],[168,41,220,41],[168,43,220,43],[169,8,221,4],[169,12,221,8],[169,16,221,12],[169,17,221,13,"_closed"],[169,24,221,20],[169,26,221,22],[170,10,222,6],[170,14,222,10,"PRINT_TO_CONSOLE"],[170,30,222,26],[170,34,222,30,"__DEV__"],[170,41,222,37],[170,43,222,39],[171,12,223,8],[171,56,223,16],[171,109,223,69],[171,111,223,71,"key"],[171,114,223,74],[171,115,223,75],[172,10,224,6],[173,10,225,6],[174,8,226,4],[175,8,228,4],[175,12,228,8],[175,16,228,12],[175,17,228,13,"_extras"],[175,24,228,20],[175,25,228,21,"hasOwnProperty"],[175,39,228,35],[175,40,228,36,"key"],[175,43,228,39],[175,44,228,40],[175,46,228,42],[176,10,229,6],[176,14,229,10,"PRINT_TO_CONSOLE"],[176,30,229,26],[176,34,229,30,"__DEV__"],[176,41,229,37],[176,43,229,39],[177,12,230,8],[177,56,231,10],[177,124,231,78],[177,126,232,10],[178,14,232,11,"key"],[178,17,232,14],[178,19,232,11,"key"],[178,22,232,14],[179,14,232,16,"currentValue"],[179,26,232,28],[179,28,232,30],[179,32,232,34],[179,33,232,35,"_extras"],[179,40,232,42],[179,41,232,43,"key"],[179,44,232,46],[179,45,232,47],[180,14,232,49,"attemptedValue"],[180,28,232,63],[180,30,232,65,"value"],[181,12,232,70],[181,13,232,71],[181,14,233,9],[182,10,234,6],[183,10,235,6],[184,8,236,4],[185,8,237,4],[185,12,237,8],[185,13,237,9,"_extras"],[185,20,237,16],[185,21,237,17,"key"],[185,24,237,20],[185,25,237,21],[185,28,237,24,"value"],[185,33,237,29],[186,6,238,2],[187,4,238,3],[188,6,238,3],[189,6,238,3],[189,13,240,2],[189,36,241,4,"key"],[189,39,241,15],[189,41,244,4],[190,8,244,4],[190,12,242,4,"timestamp"],[190,21,242,22],[190,92,242,25,"getCurrentTimestamp"],[190,111,242,44],[190,113,242,46],[191,8,242,46],[191,12,243,4,"extras"],[191,18,243,19],[192,8,245,4],[192,12,245,8],[192,16,245,12],[192,17,245,13,"_closed"],[192,24,245,20],[192,26,245,22],[193,10,246,6],[193,14,246,10,"PRINT_TO_CONSOLE"],[193,30,246,26],[193,34,246,30,"__DEV__"],[193,41,246,37],[193,43,246,39],[194,12,247,8],[194,56,248,10],[194,114,248,68],[194,116,249,10,"key"],[194,119,249,13],[194,120,250,9],[195,10,251,6],[196,10,252,6],[197,8,253,4],[198,8,255,4],[198,12,255,8],[198,16,255,12],[198,17,255,13,"_timespans"],[198,27,255,23],[198,28,255,24,"key"],[198,31,255,27],[198,32,255,28],[198,34,255,30],[199,10,256,6],[199,14,256,10,"PRINT_TO_CONSOLE"],[199,30,256,26],[199,34,256,30,"__DEV__"],[199,41,256,37],[199,43,256,39],[200,12,257,8],[200,56,258,10],[200,128,258,82],[200,130,259,10,"key"],[200,133,259,13],[200,134,260,9],[201,10,261,6],[202,10,262,6],[203,8,263,4],[204,8,265,4],[204,12,265,8],[204,13,265,9,"_timespans"],[204,23,265,19],[204,24,265,20,"key"],[204,27,265,23],[204,28,265,24],[204,31,265,27],[205,10,266,6,"startTime"],[205,19,266,15],[205,21,266,17,"timestamp"],[205,30,266,26],[206,10,267,6,"startExtras"],[206,21,267,17],[206,23,267,19,"extras"],[207,8,268,4],[207,9,268,5],[208,8,269,4,"_cookies"],[208,16,269,12],[208,17,269,13,"key"],[208,20,269,16],[208,21,269,17],[208,24,269,20],[208,82,269,29,"beginAsyncEvent"],[208,97,269,44],[208,98,269,45,"key"],[208,101,269,48],[208,102,269,49],[209,8,270,4],[209,12,270,8,"PRINT_TO_CONSOLE"],[209,28,270,24],[209,30,270,26],[210,10,271,6],[210,54,271,14],[210,76,271,36],[210,78,271,38],[210,87,271,47],[210,90,271,50,"key"],[210,93,271,53],[210,94,271,54],[211,8,272,4],[212,6,273,2],[213,4,273,3],[214,6,273,3],[215,6,273,3],[215,13,275,2],[215,35,276,4,"key"],[215,38,276,15],[215,40,279,4],[216,8,279,4],[216,12,277,4,"timestamp"],[216,21,277,22],[216,92,277,25,"getCurrentTimestamp"],[216,111,277,44],[216,113,277,46],[217,8,277,46],[217,12,278,4,"extras"],[217,18,278,19],[218,8,280,4],[218,12,280,8],[218,16,280,12],[218,17,280,13,"_closed"],[218,24,280,20],[218,26,280,22],[219,10,281,6],[219,14,281,10,"PRINT_TO_CONSOLE"],[219,30,281,26],[219,34,281,30,"__DEV__"],[219,41,281,37],[219,43,281,39],[220,12,282,8],[220,56,282,16],[220,113,282,73],[220,115,282,75,"key"],[220,118,282,78],[220,119,282,79],[221,10,283,6],[222,10,284,6],[223,8,285,4],[224,8,287,4],[224,12,287,10,"timespan"],[224,20,287,18],[224,23,287,21],[224,27,287,25],[224,28,287,26,"_timespans"],[224,38,287,36],[224,39,287,37,"key"],[224,42,287,40],[224,43,287,41],[225,8,288,4],[225,12,288,8],[225,13,288,9,"timespan"],[225,21,288,17],[225,25,288,21,"timespan"],[225,33,288,29],[225,34,288,30,"startTime"],[225,43,288,39],[225,47,288,43],[225,51,288,47],[225,53,288,49],[226,10,289,6],[226,14,289,10,"PRINT_TO_CONSOLE"],[226,30,289,26],[226,34,289,30,"__DEV__"],[226,41,289,37],[226,43,289,39],[227,12,290,8],[227,56,291,10],[227,127,291,81],[227,129,292,10,"key"],[227,132,292,13],[227,133,293,9],[228,10,294,6],[229,10,295,6],[230,8,296,4],[231,8,297,4],[231,12,297,8,"timespan"],[231,20,297,16],[231,21,297,17,"endTime"],[231,28,297,24],[231,32,297,28],[231,36,297,32],[231,38,297,34],[232,10,298,6],[232,14,298,10,"PRINT_TO_CONSOLE"],[232,30,298,26],[232,34,298,30,"__DEV__"],[232,41,298,37],[232,43,298,39],[233,12,299,8],[233,56,300,10],[233,129,300,83],[233,131,301,10,"key"],[233,134,301,13],[233,135,302,9],[234,10,303,6],[235,10,304,6],[236,8,305,4],[237,8,307,4,"timespan"],[237,16,307,12],[237,17,307,13,"endExtras"],[237,26,307,22],[237,29,307,25,"extras"],[237,35,307,31],[238,8,308,4,"timespan"],[238,16,308,12],[238,17,308,13,"endTime"],[238,24,308,20],[238,27,308,23,"timestamp"],[238,36,308,32],[239,8,309,4,"timespan"],[239,16,309,12],[239,17,309,13,"totalTime"],[239,26,309,22],[239,29,309,25,"timespan"],[239,37,309,33],[239,38,309,34,"endTime"],[239,45,309,41],[239,49,309,45,"timespan"],[239,57,309,53],[239,58,309,54,"startTime"],[239,67,309,63],[239,71,309,67],[239,72,309,68],[239,73,309,69],[240,8,310,4],[240,12,310,8,"PRINT_TO_CONSOLE"],[240,28,310,24],[240,30,310,26],[241,10,311,6],[241,54,311,14],[241,76,311,36],[241,78,311,38],[241,85,311,45],[241,88,311,48,"key"],[241,91,311,51],[241,92,311,52],[242,8,312,4],[243,8,314,4],[243,12,314,8,"_cookies"],[243,20,314,16],[243,21,314,17,"key"],[243,24,314,20],[243,25,314,21],[243,29,314,25],[243,33,314,29],[243,35,314,31],[244,10,315,6],[244,68,315,15,"endAsyncEvent"],[244,81,315,28],[244,82,315,29,"key"],[244,85,315,32],[244,87,315,34,"_cookies"],[244,95,315,42],[244,96,315,43,"key"],[244,99,315,46],[244,100,315,47],[244,101,315,48],[245,10,316,6],[245,17,316,13,"_cookies"],[245,25,316,21],[245,26,316,22,"key"],[245,29,316,25],[245,30,316,26],[246,8,317,4],[247,6,318,2],[248,4,318,3],[249,4,318,3],[250,2,318,3],[251,2,326,15],[251,11,326,24,"createPerformanceLogger"],[251,34,326,47],[251,37,326,70],[252,4,327,2],[252,11,327,9],[252,15,327,13,"PerformanceLogger"],[252,32,327,30],[252,34,327,32],[253,2,328,0],[254,0,328,1]],"functionMap":{"names":["<global>","PerformanceLogger","PerformanceLogger#addTimespan","PerformanceLogger#append","PerformanceLogger#clear","PerformanceLogger#clearCompleted","PerformanceLogger#close","PerformanceLogger#currentTimestamp","PerformanceLogger#getExtras","PerformanceLogger#getPoints","PerformanceLogger#getPointExtras","PerformanceLogger#getTimespans","PerformanceLogger#hasTimespan","PerformanceLogger#isClosed","PerformanceLogger#logEverything","PerformanceLogger#markPoint","PerformanceLogger#removeExtra","PerformanceLogger#setExtra","PerformanceLogger#startTimespan","PerformanceLogger#stopTimespan","createPerformanceLogger"],"mappings":"AAA;AC4D;ECO;GD8B;EEE;GFW;EGE;GHO;EIE;GJW;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbmB;EcE;GdwB;EeE;GfI;EgBE;GhBkB;EiBE;GjBiC;EkBE;GlB2C;CDC;eoBO;CpBE"}},"type":"js/module"}]}