{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var RE_FRAME = /^ {4}at (.+?)(?: \\((native)\\)?| \\((address at )?(.*?):(\\d+):(\\d+)\\))$/;\n  var RE_SKIPPED = /^ {4}... skipping (\\d+) frames$/;\n  function parseLine(line) {\n    var asFrame = line.match(RE_FRAME);\n    if (asFrame) {\n      return {\n        type: 'FRAME',\n        functionName: asFrame[1],\n        location: asFrame[2] === 'native' ? {\n          type: 'NATIVE'\n        } : asFrame[3] === 'address at ' ? {\n          type: 'BYTECODE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          virtualOffset0Based: Number.parseInt(asFrame[6], 10)\n        } : {\n          type: 'SOURCE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          column1Based: Number.parseInt(asFrame[6], 10)\n        }\n      };\n    }\n    var asSkipped = line.match(RE_SKIPPED);\n    if (asSkipped) {\n      return {\n        type: 'SKIPPED',\n        count: Number.parseInt(asSkipped[1], 10)\n      };\n    }\n  }\n  module.exports = function parseHermesStack(stack) {\n    var lines = stack.split(/\\n/);\n    var entries = [];\n    var lastMessageLine = -1;\n    for (var i = 0; i < lines.length; ++i) {\n      var line = lines[i];\n      if (!line) {\n        continue;\n      }\n      var entry = parseLine(line);\n      if (entry) {\n        entries.push(entry);\n        continue;\n      }\n      lastMessageLine = i;\n      entries = [];\n    }\n    var message = lines.slice(0, lastMessageLine + 1).join('\\n');\n    return {\n      message: message,\n      entries: entries\n    };\n  };\n});","lineCount":58,"map":[[2,2,11,0],[2,14,11,12],[4,2,61,0],[4,6,61,6,"RE_FRAME"],[4,14,61,14],[4,17,62,2],[4,88,62,73],[5,2,66,0],[5,6,66,6,"RE_SKIPPED"],[5,16,66,16],[5,19,66,19],[5,52,66,52],[6,2,68,0],[6,11,68,9,"parseLine"],[6,20,68,18],[6,21,68,19,"line"],[6,25,68,31],[6,27,68,52],[7,4,69,2],[7,8,69,8,"asFrame"],[7,15,69,15],[7,18,69,18,"line"],[7,22,69,22],[7,23,69,23,"match"],[7,28,69,28],[7,29,69,29,"RE_FRAME"],[7,37,69,37],[7,38,69,38],[8,4,70,2],[8,8,70,6,"asFrame"],[8,15,70,13],[8,17,70,15],[9,6,71,4],[9,13,71,11],[10,8,72,6,"type"],[10,12,72,10],[10,14,72,12],[10,21,72,19],[11,8,73,6,"functionName"],[11,20,73,18],[11,22,73,20,"asFrame"],[11,29,73,27],[11,30,73,28],[11,31,73,29],[11,32,73,30],[12,8,74,6,"location"],[12,16,74,14],[12,18,75,8,"asFrame"],[12,25,75,15],[12,26,75,16],[12,27,75,17],[12,28,75,18],[12,33,75,23],[12,41,75,31],[12,44,76,12],[13,10,76,13,"type"],[13,14,76,17],[13,16,76,19],[14,8,76,27],[14,9,76,28],[14,12,77,12,"asFrame"],[14,19,77,19],[14,20,77,20],[14,21,77,21],[14,22,77,22],[14,27,77,27],[14,40,77,40],[14,43,78,12],[15,10,79,14,"type"],[15,14,79,18],[15,16,79,20],[15,26,79,30],[16,10,80,14,"sourceUrl"],[16,19,80,23],[16,21,80,25,"asFrame"],[16,28,80,32],[16,29,80,33],[16,30,80,34],[16,31,80,35],[17,10,81,14,"line1Based"],[17,20,81,24],[17,22,81,26,"Number"],[17,28,81,32],[17,29,81,33,"parseInt"],[17,37,81,41],[17,38,81,42,"asFrame"],[17,45,81,49],[17,46,81,50],[17,47,81,51],[17,48,81,52],[17,50,81,54],[17,52,81,56],[17,53,81,57],[18,10,82,14,"virtualOffset0Based"],[18,29,82,33],[18,31,82,35,"Number"],[18,37,82,41],[18,38,82,42,"parseInt"],[18,46,82,50],[18,47,82,51,"asFrame"],[18,54,82,58],[18,55,82,59],[18,56,82,60],[18,57,82,61],[18,59,82,63],[18,61,82,65],[19,8,83,12],[19,9,83,13],[19,12,84,12],[20,10,85,14,"type"],[20,14,85,18],[20,16,85,20],[20,24,85,28],[21,10,86,14,"sourceUrl"],[21,19,86,23],[21,21,86,25,"asFrame"],[21,28,86,32],[21,29,86,33],[21,30,86,34],[21,31,86,35],[22,10,87,14,"line1Based"],[22,20,87,24],[22,22,87,26,"Number"],[22,28,87,32],[22,29,87,33,"parseInt"],[22,37,87,41],[22,38,87,42,"asFrame"],[22,45,87,49],[22,46,87,50],[22,47,87,51],[22,48,87,52],[22,50,87,54],[22,52,87,56],[22,53,87,57],[23,10,88,14,"column1Based"],[23,22,88,26],[23,24,88,28,"Number"],[23,30,88,34],[23,31,88,35,"parseInt"],[23,39,88,43],[23,40,88,44,"asFrame"],[23,47,88,51],[23,48,88,52],[23,49,88,53],[23,50,88,54],[23,52,88,56],[23,54,88,58],[24,8,89,12],[25,6,90,4],[25,7,90,5],[26,4,91,2],[27,4,92,2],[27,8,92,8,"asSkipped"],[27,17,92,17],[27,20,92,20,"line"],[27,24,92,24],[27,25,92,25,"match"],[27,30,92,30],[27,31,92,31,"RE_SKIPPED"],[27,41,92,41],[27,42,92,42],[28,4,93,2],[28,8,93,6,"asSkipped"],[28,17,93,15],[28,19,93,17],[29,6,94,4],[29,13,94,11],[30,8,95,6,"type"],[30,12,95,10],[30,14,95,12],[30,23,95,21],[31,8,96,6,"count"],[31,13,96,11],[31,15,96,13,"Number"],[31,21,96,19],[31,22,96,20,"parseInt"],[31,30,96,28],[31,31,96,29,"asSkipped"],[31,40,96,38],[31,41,96,39],[31,42,96,40],[31,43,96,41],[31,45,96,43],[31,47,96,45],[32,6,97,4],[32,7,97,5],[33,4,98,2],[34,2,99,0],[35,2,101,0,"module"],[35,8,101,6],[35,9,101,7,"exports"],[35,16,101,14],[35,19,101,17],[35,28,101,26,"parseHermesStack"],[35,44,101,42],[35,45,101,43,"stack"],[35,50,101,56],[35,52,101,77],[36,4,102,2],[36,8,102,8,"lines"],[36,13,102,13],[36,16,102,16,"stack"],[36,21,102,21],[36,22,102,22,"split"],[36,27,102,27],[36,28,102,28],[36,32,102,32],[36,33,102,33],[37,4,103,2],[37,8,103,6,"entries"],[37,15,103,69],[37,18,103,72],[37,20,103,74],[38,4,104,2],[38,8,104,6,"lastMessageLine"],[38,23,104,21],[38,26,104,24],[38,27,104,25],[38,28,104,26],[39,4,105,2],[39,9,105,7],[39,13,105,11,"i"],[39,14,105,12],[39,17,105,15],[39,18,105,16],[39,20,105,18,"i"],[39,21,105,19],[39,24,105,22,"lines"],[39,29,105,27],[39,30,105,28,"length"],[39,36,105,34],[39,38,105,36],[39,40,105,38,"i"],[39,41,105,39],[39,43,105,41],[40,6,106,4],[40,10,106,10,"line"],[40,14,106,14],[40,17,106,17,"lines"],[40,22,106,22],[40,23,106,23,"i"],[40,24,106,24],[40,25,106,25],[41,6,107,4],[41,10,107,8],[41,11,107,9,"line"],[41,15,107,13],[41,17,107,15],[42,8,108,6],[43,6,109,4],[44,6,110,4],[44,10,110,10,"entry"],[44,15,110,15],[44,18,110,18,"parseLine"],[44,27,110,27],[44,28,110,28,"line"],[44,32,110,32],[44,33,110,33],[45,6,111,4],[45,10,111,8,"entry"],[45,15,111,13],[45,17,111,15],[46,8,112,6,"entries"],[46,15,112,13],[46,16,112,14,"push"],[46,20,112,18],[46,21,112,19,"entry"],[46,26,112,24],[46,27,112,25],[47,8,113,6],[48,6,114,4],[49,6,116,4,"lastMessageLine"],[49,21,116,19],[49,24,116,22,"i"],[49,25,116,23],[50,6,117,4,"entries"],[50,13,117,11],[50,16,117,14],[50,18,117,16],[51,4,118,2],[52,4,119,2],[52,8,119,8,"message"],[52,15,119,15],[52,18,119,18,"lines"],[52,23,119,23],[52,24,119,24,"slice"],[52,29,119,29],[52,30,119,30],[52,31,119,31],[52,33,119,33,"lastMessageLine"],[52,48,119,48],[52,51,119,51],[52,52,119,52],[52,53,119,53],[52,54,119,54,"join"],[52,58,119,58],[52,59,119,59],[52,63,119,63],[52,64,119,64],[53,4,120,2],[53,11,120,9],[54,6,120,10,"message"],[54,13,120,17],[54,15,120,10,"message"],[54,22,120,17],[55,6,120,19,"entries"],[55,13,120,26],[55,15,120,19,"entries"],[56,4,120,26],[56,5,120,27],[57,2,121,0],[57,3,121,1],[58,0,121,2]],"functionMap":{"names":["<global>","parseLine","parseHermesStack"],"mappings":"AAA;ACmE;CD+B;iBEE;CFoB"}},"type":"js/module"}]}