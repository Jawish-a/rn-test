{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":138},"end":{"line":8,"column":31,"index":169}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":249},"end":{"line":11,"column":38,"index":287}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./DrawerItem","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":249},"end":{"line":11,"column":38,"index":287}}],"key":"Vpe2Q9a8ucK7xEv0jzCFedlwwKs="}},{"name":"@react-navigation/native","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":20,"index":610},"end":{"line":27,"column":34,"index":624},"identifierName":"useLinkBuilder"},{"start":{"line":53,"column":14,"index":1303},"end":{"line":53,"column":27,"index":1316},"identifierName":"DrawerActions"},{"start":{"line":54,"column":14,"index":1345},"end":{"line":54,"column":27,"index":1358},"identifierName":"CommonActions"}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":70,"column":6,"index":1661},"end":{"line":90,"column":8,"index":2343}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerItemList;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  var _DrawerItem = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"./DrawerItem\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function DrawerItemList(_ref) {\n    var state = _ref.state,\n      navigation = _ref.navigation,\n      descriptors = _ref.descriptors;\n    var buildLink = (0, _$$_REQUIRE(_dependencyMap[3], \"@react-navigation/native\").useLinkBuilder)();\n    var focusedRoute = state.routes[state.index];\n    var focusedDescriptor = descriptors[focusedRoute.key];\n    var focusedOptions = focusedDescriptor.options;\n    var drawerActiveTintColor = focusedOptions.drawerActiveTintColor,\n      drawerInactiveTintColor = focusedOptions.drawerInactiveTintColor,\n      drawerActiveBackgroundColor = focusedOptions.drawerActiveBackgroundColor,\n      drawerInactiveBackgroundColor = focusedOptions.drawerInactiveBackgroundColor;\n    return state.routes.map(function (route, i) {\n      var focused = i === state.index;\n      var onPress = function onPress() {\n        var event = navigation.emit({\n          type: 'drawerItemPress',\n          target: route.key,\n          canPreventDefault: true\n        });\n        if (!event.defaultPrevented) {\n          navigation.dispatch(Object.assign({}, focused ? _$$_REQUIRE(_dependencyMap[3], \"@react-navigation/native\").DrawerActions.closeDrawer() : _$$_REQUIRE(_dependencyMap[3], \"@react-navigation/native\").CommonActions.navigate({\n            name: route.name,\n            merge: true\n          }), {\n            target: state.key\n          }));\n        }\n      };\n      var _descriptors$route$ke = descriptors[route.key].options,\n        title = _descriptors$route$ke.title,\n        drawerLabel = _descriptors$route$ke.drawerLabel,\n        drawerIcon = _descriptors$route$ke.drawerIcon,\n        drawerLabelStyle = _descriptors$route$ke.drawerLabelStyle,\n        drawerItemStyle = _descriptors$route$ke.drawerItemStyle,\n        drawerAllowFontScaling = _descriptors$route$ke.drawerAllowFontScaling;\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"react/jsx-runtime\").jsx)(_DrawerItem.default, {\n        label: drawerLabel !== undefined ? drawerLabel : title !== undefined ? title : route.name,\n        icon: drawerIcon,\n        focused: focused,\n        activeTintColor: drawerActiveTintColor,\n        inactiveTintColor: drawerInactiveTintColor,\n        activeBackgroundColor: drawerActiveBackgroundColor,\n        inactiveBackgroundColor: drawerInactiveBackgroundColor,\n        allowFontScaling: drawerAllowFontScaling,\n        labelStyle: drawerLabelStyle,\n        style: drawerItemStyle,\n        to: buildLink(route.name, route.params),\n        onPress: onPress\n      }, route.key);\n    });\n  }\n});","lineCount":62,"map":[[6,2,8,0],[7,2,11,0],[8,2,11,38],[9,2,11,38],[10,2,22,15],[10,11,22,24,"DrawerItemList"],[10,25,22,38],[10,32,26,10],[11,4,26,10],[11,8,23,2,"state"],[11,13,23,7],[11,21,23,2,"state"],[11,26,23,7],[12,6,24,2,"navigation"],[12,16,24,12],[12,24,24,2,"navigation"],[12,34,24,12],[13,6,25,2,"descriptors"],[13,17,25,13],[13,25,25,2,"descriptors"],[13,36,25,13],[14,4,27,2],[14,8,27,8,"buildLink"],[14,17,27,17],[14,20,27,20],[14,24,27,20,"useLinkBuilder"],[14,97,27,34],[14,100,27,36],[15,4,29,2],[15,8,29,8,"focusedRoute"],[15,20,29,20],[15,23,29,23,"state"],[15,28,29,28],[15,29,29,29,"routes"],[15,35,29,35],[15,36,29,36,"state"],[15,41,29,41],[15,42,29,42,"index"],[15,47,29,47],[15,48,29,48],[16,4,30,2],[16,8,30,8,"focusedDescriptor"],[16,25,30,25],[16,28,30,28,"descriptors"],[16,39,30,39],[16,40,30,40,"focusedRoute"],[16,52,30,52],[16,53,30,53,"key"],[16,56,30,56],[16,57,30,57],[17,4,31,2],[17,8,31,8,"focusedOptions"],[17,22,31,22],[17,25,31,25,"focusedDescriptor"],[17,42,31,42],[17,43,31,43,"options"],[17,50,31,50],[18,4,33,2],[18,8,34,4,"drawerActiveTintColor"],[18,29,34,25],[18,32,38,6,"focusedOptions"],[18,46,38,20],[18,47,34,4,"drawerActiveTintColor"],[18,68,34,25],[19,6,35,4,"drawerInactiveTintColor"],[19,29,35,27],[19,32,38,6,"focusedOptions"],[19,46,38,20],[19,47,35,4,"drawerInactiveTintColor"],[19,70,35,27],[20,6,36,4,"drawerActiveBackgroundColor"],[20,33,36,31],[20,36,38,6,"focusedOptions"],[20,50,38,20],[20,51,36,4,"drawerActiveBackgroundColor"],[20,78,36,31],[21,6,37,4,"drawerInactiveBackgroundColor"],[21,35,37,33],[21,38,38,6,"focusedOptions"],[21,52,38,20],[21,53,37,4,"drawerInactiveBackgroundColor"],[21,82,37,33],[22,4,40,2],[22,11,40,9,"state"],[22,16,40,14],[22,17,40,15,"routes"],[22,23,40,21],[22,24,40,22,"map"],[22,27,40,25],[22,28,40,26],[22,38,40,27,"route"],[22,43,40,32],[22,45,40,34,"i"],[22,46,40,35],[22,48,40,40],[23,6,41,4],[23,10,41,10,"focused"],[23,17,41,17],[23,20,41,20,"i"],[23,21,41,21],[23,26,41,26,"state"],[23,31,41,31],[23,32,41,32,"index"],[23,37,41,37],[24,6,43,4],[24,10,43,10,"onPress"],[24,17,43,17],[24,20,43,20],[24,29,43,10,"onPress"],[24,36,43,17],[24,39,43,26],[25,8,44,6],[25,12,44,12,"event"],[25,17,44,17],[25,20,44,20,"navigation"],[25,30,44,30],[25,31,44,31,"emit"],[25,35,44,35],[25,36,44,36],[26,10,45,8,"type"],[26,14,45,12],[26,16,45,14],[26,33,45,31],[27,10,46,8,"target"],[27,16,46,14],[27,18,46,16,"route"],[27,23,46,21],[27,24,46,22,"key"],[27,27,46,25],[28,10,47,8,"canPreventDefault"],[28,27,47,25],[28,29,47,27],[29,8,48,6],[29,9,48,7],[29,10,48,8],[30,8,50,6],[30,12,50,10],[30,13,50,11,"event"],[30,18,50,16],[30,19,50,17,"defaultPrevented"],[30,35,50,33],[30,37,50,35],[31,10,51,8,"navigation"],[31,20,51,18],[31,21,51,19,"dispatch"],[31,29,51,27],[31,48,52,14,"focused"],[31,55,52,21],[31,58,53,14,"DrawerActions"],[31,130,53,27],[31,131,53,28,"closeDrawer"],[31,142,53,39],[31,144,53,41],[31,147,54,14,"CommonActions"],[31,219,54,27],[31,220,54,28,"navigate"],[31,228,54,36],[31,229,54,37],[32,12,54,39,"name"],[32,16,54,43],[32,18,54,45,"route"],[32,23,54,50],[32,24,54,51,"name"],[32,28,54,55],[33,12,54,57,"merge"],[33,17,54,62],[33,19,54,64],[34,10,54,69],[34,11,54,70],[34,12,54,71],[35,12,55,10,"target"],[35,18,55,16],[35,20,55,18,"state"],[35,25,55,23],[35,26,55,24,"key"],[36,10,55,27],[36,13,56,10],[37,8,57,6],[38,6,58,4],[38,7,58,5],[39,6,60,4],[39,34,67,8,"descriptors"],[39,45,67,19],[39,46,67,20,"route"],[39,51,67,25],[39,52,67,26,"key"],[39,55,67,29],[39,56,67,30],[39,57,67,31,"options"],[39,64,67,38],[40,8,61,6,"title"],[40,13,61,11],[40,38,61,6,"title"],[40,43,61,11],[41,8,62,6,"drawerLabel"],[41,19,62,17],[41,44,62,6,"drawerLabel"],[41,55,62,17],[42,8,63,6,"drawerIcon"],[42,18,63,16],[42,43,63,6,"drawerIcon"],[42,53,63,16],[43,8,64,6,"drawerLabelStyle"],[43,24,64,22],[43,49,64,6,"drawerLabelStyle"],[43,65,64,22],[44,8,65,6,"drawerItemStyle"],[44,23,65,21],[44,48,65,6,"drawerItemStyle"],[44,63,65,21],[45,8,66,6,"drawerAllowFontScaling"],[45,30,66,28],[45,55,66,6,"drawerAllowFontScaling"],[45,77,66,28],[46,6,69,4],[46,13,70,6],[46,74,70,7],[46,93,70,17],[47,8,72,8],[47,13,72,13],[47,15,73,10,"drawerLabel"],[47,26,73,21],[47,31,73,26,"undefined"],[47,40,73,35],[47,43,74,14,"drawerLabel"],[47,54,74,25],[47,57,75,14,"title"],[47,62,75,19],[47,67,75,24,"undefined"],[47,76,75,33],[47,79,76,14,"title"],[47,84,76,19],[47,87,77,14,"route"],[47,92,77,19],[47,93,77,20,"name"],[47,97,78,9],[48,8,79,8],[48,12,79,12],[48,14,79,14,"drawerIcon"],[48,24,79,25],[49,8,80,8],[49,15,80,15],[49,17,80,17,"focused"],[49,24,80,25],[50,8,81,8],[50,23,81,23],[50,25,81,25,"drawerActiveTintColor"],[50,46,81,47],[51,8,82,8],[51,25,82,25],[51,27,82,27,"drawerInactiveTintColor"],[51,50,82,51],[52,8,83,8],[52,29,83,29],[52,31,83,31,"drawerActiveBackgroundColor"],[52,58,83,59],[53,8,84,8],[53,31,84,31],[53,33,84,33,"drawerInactiveBackgroundColor"],[53,62,84,63],[54,8,85,8],[54,24,85,24],[54,26,85,26,"drawerAllowFontScaling"],[54,48,85,49],[55,8,86,8],[55,18,86,18],[55,20,86,20,"drawerLabelStyle"],[55,36,86,37],[56,8,87,8],[56,13,87,13],[56,15,87,15,"drawerItemStyle"],[56,30,87,31],[57,8,88,8],[57,10,88,10],[57,12,88,12,"buildLink"],[57,21,88,21],[57,22,88,22,"route"],[57,27,88,27],[57,28,88,28,"name"],[57,32,88,32],[57,34,88,34,"route"],[57,39,88,39],[57,40,88,40,"params"],[57,46,88,46],[57,47,88,48],[58,8,89,8],[58,15,89,15],[58,17,89,17,"onPress"],[59,6,89,25],[59,9,71,13,"route"],[59,14,71,18],[59,15,71,19,"key"],[59,18,71,22],[59,19,90,8],[60,4,92,2],[60,5,92,3],[60,6,92,4],[61,2,93,0],[62,0,93,1]],"functionMap":{"names":["<global>","DrawerItemList","state.routes.map$argument_0","onPress"],"mappings":"AAA;eCqB;0BCkB;oBCG;KDe;GDkC;CDC"}},"type":"js/module"}]}