{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":1010}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":0,"index":1010}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = validatePathConfig;\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var formatToList = function formatToList(items) {\n    return items.map(function (key) {\n      return `- ${key}`;\n    }).join('\\n');\n  };\n  function validatePathConfig(config) {\n    var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var validKeys = ['initialRouteName', 'screens'];\n    if (!root) {\n      validKeys.push('path', 'exact', 'stringify', 'parse');\n    }\n    var invalidKeys = Object.keys(config).filter(function (key) {\n      return !validKeys.includes(key);\n    });\n    if (invalidKeys.length) {\n      throw new Error(`Found invalid properties in the configuration:\\n${formatToList(invalidKeys)}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(validKeys)}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);\n    }\n    if (config.screens) {\n      Object.entries(config.screens).forEach(function (_ref) {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          _ = _ref2[0],\n          value = _ref2[1];\n        if (typeof value !== 'string') {\n          validatePathConfig(value, false);\n        }\n      });\n    }\n  }\n});","lineCount":35,"map":[[7,2,1,0],[7,6,1,6,"formatToList"],[7,18,1,18],[7,21,1,21],[7,30,1,6,"formatToList"],[7,42,1,18],[7,43,1,22,"items"],[7,48,1,37],[8,4,1,37],[8,11,2,2,"items"],[8,16,2,7],[8,17,2,8,"map"],[8,20,2,11],[8,21,2,12],[8,31,2,13,"key"],[8,34,2,16],[9,6,2,16],[9,13,2,22],[9,18,2,26,"key"],[9,21,2,30],[9,23,2,31],[10,4,2,31],[10,6,2,32],[10,7,2,33,"join"],[10,11,2,37],[10,12,2,38],[10,16,2,42],[10,17,2,43],[11,2,2,43],[12,2,4,15],[12,11,4,24,"validatePathConfig"],[12,29,4,42],[12,30,4,43,"config"],[12,36,4,54],[12,38,4,69],[13,4,4,69],[13,8,4,56,"root"],[13,12,4,60],[13,83,4,63],[13,87,4,67],[14,4,5,2],[14,8,5,8,"validKeys"],[14,17,5,17],[14,20,5,20],[14,21,5,21],[14,39,5,39],[14,41,5,41],[14,50,5,50],[14,51,5,51],[15,4,7,2],[15,8,7,6],[15,9,7,7,"root"],[15,13,7,11],[15,15,7,13],[16,6,8,4,"validKeys"],[16,15,8,13],[16,16,8,14,"push"],[16,20,8,18],[16,21,8,19],[16,27,8,25],[16,29,8,27],[16,36,8,34],[16,38,8,36],[16,49,8,47],[16,51,8,49],[16,58,8,56],[16,59,8,57],[17,4,9,2],[18,4,11,2],[18,8,11,8,"invalidKeys"],[18,19,11,19],[18,22,11,22,"Object"],[18,28,11,28],[18,29,11,29,"keys"],[18,33,11,33],[18,34,11,34,"config"],[18,40,11,40],[18,41,11,41],[18,42,11,42,"filter"],[18,48,11,48],[18,49,12,4],[18,59,12,5,"key"],[18,62,12,8],[19,6,12,8],[19,13,12,13],[19,14,12,14,"validKeys"],[19,23,12,23],[19,24,12,24,"includes"],[19,32,12,32],[19,33,12,33,"key"],[19,36,12,36],[19,37,12,37],[20,4,12,37],[20,6,13,3],[21,4,15,2],[21,8,15,6,"invalidKeys"],[21,19,15,17],[21,20,15,18,"length"],[21,26,15,24],[21,28,15,26],[22,6,16,4],[22,12,16,10],[22,16,16,14,"Error"],[22,21,16,19],[22,22,17,7],[22,73,17,57,"formatToList"],[22,85,17,69],[22,86,18,8,"invalidKeys"],[22,97,18,19],[22,98,19,8],[22,215,19,124,"formatToList"],[22,227,19,136],[22,228,20,8,"validKeys"],[22,237,20,17],[22,238,21,8],[22,358,21,127],[22,359,22,5],[23,4,23,2],[24,4,25,2],[24,8,25,6,"config"],[24,14,25,12],[24,15,25,13,"screens"],[24,22,25,20],[24,24,25,22],[25,6,26,4,"Object"],[25,12,26,10],[25,13,26,11,"entries"],[25,20,26,18],[25,21,26,19,"config"],[25,27,26,25],[25,28,26,26,"screens"],[25,35,26,33],[25,36,26,34],[25,37,26,35,"forEach"],[25,44,26,42],[25,45,26,43],[25,61,26,59],[26,8,26,59],[27,10,26,45,"_"],[27,11,26,46],[28,10,26,48,"value"],[28,15,26,53],[29,8,27,6],[29,12,27,10],[29,19,27,17,"value"],[29,24,27,22],[29,29,27,27],[29,37,27,35],[29,39,27,37],[30,10,28,8,"validatePathConfig"],[30,28,28,26],[30,29,28,27,"value"],[30,34,28,32],[30,36,28,34],[30,41,28,39],[30,42,28,40],[31,8,29,6],[32,6,30,4],[32,7,30,5],[32,8,30,6],[33,4,31,2],[34,2,32,0],[35,0,32,1]],"functionMap":{"names":["<global>","formatToList","items.map$argument_0","validatePathConfig","Object.keys.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA,qBC;YCC,mBD,YD;eGE;ICQ,iCD;2CEc;KFI;CHE"}},"type":"js/module"}]}