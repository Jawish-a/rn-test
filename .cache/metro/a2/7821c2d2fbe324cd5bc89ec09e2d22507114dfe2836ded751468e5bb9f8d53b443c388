{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Bezier = void 0;\n  var Bezier = function () {\n    var _e = [new Error(), 1, -20];\n    var _f = function _f(mX1, mY1, mX2, mY2) {\n      var NEWTON_ITERATIONS = 4;\n      var NEWTON_MIN_SLOPE = 0.001;\n      var SUBDIVISION_PRECISION = 0.0000001;\n      var SUBDIVISION_MAX_ITERATIONS = 10;\n      var kSplineTableSize = 11;\n      var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n      var A = function () {\n        var _e = [new Error(), 1, -20];\n        var _f = function _f(aA1, aA2) {\n          return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n        };\n        _f._closure = {};\n        _f.asString = \"function A(aA1, aA2) {\\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\\n}\";\n        _f.__workletHash = 3374392297911;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAwBE,UAAUA,CAACC,KAAWC,GAAEA,EAAY;EAElC,OAAO,GAAG,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGD,GAAG;AACpC\\\",\\\"names\\\":[\\\"A\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var B = function () {\n        var _e = [new Error(), 1, -20];\n        var _f = function _f(aA1, aA2) {\n          return 3.0 * aA2 - 6.0 * aA1;\n        };\n        _f._closure = {};\n        _f.asString = \"function B(aA1, aA2) {\\n  return 3.0 * aA2 - 6.0 * aA1;\\n}\";\n        _f.__workletHash = 16740236581141;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA4BE,UAAUA,CAACC,KAAWC,GAAEA,EAAY;EAElC,OAAO,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGD,GAAG;AAC9B\\\",\\\"names\\\":[\\\"B\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var C = function () {\n        var _e = [new Error(), 1, -20];\n        var _f = function _f(aA1) {\n          return 3.0 * aA1;\n        };\n        _f._closure = {};\n        _f.asString = \"function C(aA1) {\\n  return 3.0 * aA1;\\n}\";\n        _f.__workletHash = 17250667303223;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAgCE,UAAUA,CAACC,KAAW;EAEpB,OAAO,GAAG,GAAGA,GAAG;AAClB\\\",\\\"names\\\":[\\\"C\\\",\\\"aA1\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var calcBezier = function () {\n        var _e = [new Error(), -4, -20];\n        var _f = function _f(aT, aA1, aA2) {\n          return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n        };\n        _f._closure = {\n          A: A,\n          B: B,\n          C: C\n        };\n        _f.asString = \"function calcBezier(aT, aA1, aA2) {\\n  const {\\n    A,\\n    B,\\n    C\\n  } = this._closure;\\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\\n}\";\n        _f.__workletHash = 3336129670125;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAqCE;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;AACA\\\",\\\"names\\\":[],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var getSlope = function () {\n        var _e = [new Error(), -4, -20];\n        var _f = function _f(aT, aA1, aA2) {\n          return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n        };\n        _f._closure = {\n          A: A,\n          B: B,\n          C: C\n        };\n        _f.asString = \"function getSlope(aT, aA1, aA2) {\\n  const {\\n    A,\\n    B,\\n    C\\n  } = this._closure;\\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\\n}\";\n        _f.__workletHash = 6461718455249;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA2CE;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;AACA\\\",\\\"names\\\":[],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var binarySubdivide = function () {\n        var _e = [new Error(), -4, -20];\n        var _f = function _f(aX, aA, aB, mX1, mX2) {\n          var currentX;\n          var currentT;\n          var i = 0;\n          do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n              aB = currentT;\n            } else {\n              aA = currentT;\n            }\n          } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n          return currentT;\n        };\n        _f._closure = {\n          SUBDIVISION_PRECISION: SUBDIVISION_PRECISION,\n          SUBDIVISION_MAX_ITERATIONS: SUBDIVISION_MAX_ITERATIONS,\n          calcBezier: calcBezier\n        };\n        _f.asString = \"function binarySubdivide(aX, aA, aB, mX1, mX2) {\\n  const {\\n    SUBDIVISION_PRECISION,\\n    SUBDIVISION_MAX_ITERATIONS,\\n    calcBezier\\n  } = this._closure;\\n  let currentX;\\n  let currentT;\\n  let i = 0;\\n  do {\\n    currentT = aA + (aB - aA) / 2.0;\\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\\n    if (currentX > 0.0) {\\n      aB = currentT;\\n    } else {\\n      aA = currentT;\\n    }\\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\\n  return currentT;\\n}\";\n        _f.__workletHash = 249053909510;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAiDE,wBAASA,CACPC,IAAUC,EACVA,EAAUC,EACVA,EAAUC,GACVA,EAAWC,GACXA,EACD;EAAA;IAAA;IAAA;IAAA;EAAA;EAEC,IAAIC,QAAQ;EACZ,IAAIC,QAAQ;EACZ,IAAIC,CAAC,GAAG,CAAC;EACT,GAAG;IACDD,QAAQ,GAAGL,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAE,IAAI,GAAG;IAC/BI,QAAQ,GAAGG,UAAU,CAACF,QAAQ,EAAEH,GAAG,EAAEC,GAAG,CAAC,GAAGJ,EAAE;IAC9C,IAAIK,QAAQ,GAAG,GAAG,EAAE;MAClBH,EAAE,GAAGI,QAAQ;IACf,CAAC,MAAM;MACLL,EAAE,GAAGK,QAAQ;IACf;EACF,CAAC,QACCG,IAAI,CAACC,GAAG,CAACL,QAAQ,CAAC,GAAGM,qBAAqB,IAC1C,EAAEJ,CAAC,GAAGK,0BAA0B;EAElC,OAAON,QAAQ;AACjB\\\",\\\"names\\\":[\\\"binarySubdivide\\\",\\\"aX\\\",\\\"aA\\\",\\\"aB\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"currentX\\\",\\\"currentT\\\",\\\"i\\\",\\\"calcBezier\\\",\\\"Math\\\",\\\"abs\\\",\\\"SUBDIVISION_PRECISION\\\",\\\"SUBDIVISION_MAX_ITERATIONS\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var newtonRaphsonIterate = function () {\n        var _e = [new Error(), -4, -20];\n        var _f = function _f(aX, aGuessT, mX1, mX2) {\n          for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n              return aGuessT;\n            }\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n          }\n          return aGuessT;\n        };\n        _f._closure = {\n          NEWTON_ITERATIONS: NEWTON_ITERATIONS,\n          getSlope: getSlope,\n          calcBezier: calcBezier\n        };\n        _f.asString = \"function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\\n  const {\\n    NEWTON_ITERATIONS,\\n    getSlope,\\n    calcBezier\\n  } = this._closure;\\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\\n    if (currentSlope === 0.0) {\\n      return aGuessT;\\n    }\\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\\n    aGuessT -= currentX / currentSlope;\\n  }\\n  return aGuessT;\\n}\";\n        _f.__workletHash = 303592406761;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA2EE,6BAASA,CACPC,IAAUC,OACVA,EAAeC,GACfA,EAAWC,GACXA,EACD;EAAA;IAAA;IAAA;IAAA;EAAA;EAEC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,iBAAiB,EAAE,EAAED,CAAC,EAAE;IAC1C,MAAME,YAAY,GAAGC,QAAQ,CAACN,OAAO,EAAEC,GAAG,EAAEC,GAAG,CAAC;IAChD,IAAIG,YAAY,KAAK,GAAG,EAAE;MACxB,OAAOL,OAAO;IAChB;IACA,MAAMO,QAAQ,GAAGC,UAAU,CAACR,OAAO,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAGH,EAAE;IACnDC,OAAO,IAAIO,QAAQ,GAAGF,YAAY;EACpC;EACA,OAAOL,OAAO;AAChB\\\",\\\"names\\\":[\\\"newtonRaphsonIterate\\\",\\\"aX\\\",\\\"aGuessT\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"i\\\",\\\"NEWTON_ITERATIONS\\\",\\\"currentSlope\\\",\\\"getSlope\\\",\\\"currentX\\\",\\\"calcBezier\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      var LinearEasing = function () {\n        var _e = [new Error(), 1, -20];\n        var _f = function _f(x) {\n          return x;\n        };\n        _f._closure = {};\n        _f.asString = \"function LinearEasing(x) {\\n  return x;\\n}\";\n        _f.__workletHash = 11601588428153;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA6FE,qBAASA,CAAaC,CAACA,EAAS;EAE9B,OAAOA,CAAC;AACV\\\",\\\"names\\\":[\\\"LinearEasing\\\",\\\"x\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n        throw new Error('bezier x values must be in [0, 1] range');\n      }\n      if (mX1 === mY1 && mX2 === mY2) {\n        return LinearEasing;\n      }\n      var sampleValues = new Array(kSplineTableSize);\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n      var getTForX = function () {\n        var _e = [new Error(), -10, -20];\n        var _f = function _f(aX) {\n          var intervalStart = 0.0;\n          var currentSample = 1;\n          var lastSample = kSplineTableSize - 1;\n          for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n          }\n          --currentSample;\n          var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n          var guessForT = intervalStart + dist * kSampleStepSize;\n          var initialSlope = getSlope(guessForT, mX1, mX2);\n          if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n          } else if (initialSlope === 0.0) {\n            return guessForT;\n          } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n          }\n        };\n        _f._closure = {\n          kSplineTableSize: kSplineTableSize,\n          sampleValues: sampleValues,\n          kSampleStepSize: kSampleStepSize,\n          getSlope: getSlope,\n          mX1: mX1,\n          mX2: mX2,\n          NEWTON_MIN_SLOPE: NEWTON_MIN_SLOPE,\n          newtonRaphsonIterate: newtonRaphsonIterate,\n          binarySubdivide: binarySubdivide\n        };\n        _f.asString = \"function getTForX(aX) {\\n  const {\\n    kSplineTableSize,\\n    sampleValues,\\n    kSampleStepSize,\\n    getSlope,\\n    mX1,\\n    mX2,\\n    NEWTON_MIN_SLOPE,\\n    newtonRaphsonIterate,\\n    binarySubdivide\\n  } = this._closure;\\n  let intervalStart = 0.0;\\n  let currentSample = 1;\\n  const lastSample = kSplineTableSize - 1;\\n  for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\\n    intervalStart += kSampleStepSize;\\n  }\\n  --currentSample;\\n  const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\\n  const guessForT = intervalStart + dist * kSampleStepSize;\\n  const initialSlope = getSlope(guessForT, mX1, mX2);\\n  if (initialSlope >= NEWTON_MIN_SLOPE) {\\n    return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\\n  } else if (initialSlope === 0.0) {\\n    return guessForT;\\n  } else {\\n    return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\\n  }\\n}\";\n        _f.__workletHash = 16767251613109;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAwHE,iBAASA,CAASC,IAAW;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAE3B,IAAIC,aAAa,GAAG,GAAG;EACvB,IAAIC,aAAa,GAAG,CAAC;EACrB,MAAMC,UAAU,GAAGC,gBAAgB,GAAG,CAAC;EAEvC,OAEEF,aAAa,KAAKC,UAAU,IAAIE,YAAY,CAACH,aAAa,CAAC,IAAIF,EAAE,EACjE,EAAEE,aAAa,EACf;IACAD,aAAa,IAAIK,eAAe;EAClC;EACA,EAAEJ,aAAa;EAGf,MAAMK,IAAI,GACR,CAACP,EAAE,GAAGK,YAAY,CAACH,aAAa,CAAC,KAChCG,YAAY,CAACH,aAAa,GAAG,CAAC,CAAC,GAAGG,YAAY,CAACH,aAAa,CAAC,CAAC;EACjE,MAAMM,SAAS,GAAGP,aAAa,GAAGM,IAAI,GAAGD,eAAe;EAExD,MAAMG,YAAY,GAAGC,QAAQ,CAACF,SAAS,EAAEG,GAAG,EAAEC,GAAG,CAAC;EAClD,IAAIH,YAAY,IAAII,gBAAgB,EAAE;IACpC,OAAOC,oBAAoB,CAACd,EAAE,EAAEQ,SAAS,EAAEG,GAAG,EAAEC,GAAG,CAAC;EACtD,CAAC,MAAM,IAAIH,YAAY,KAAK,GAAG,EAAE;IAC/B,OAAOD,SAAS;EAClB,CAAC,MAAM;IACL,OAAOO,eAAe,CACpBf,EAAE,EACFC,aAAa,EACbA,aAAa,GAAGK,eAAe,EAC/BK,GAAG,EACHC,GAAG,CACJ;EACH;AACF\\\",\\\"names\\\":[\\\"getTForX\\\",\\\"aX\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"kSplineTableSize\\\",\\\"sampleValues\\\",\\\"kSampleStepSize\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\",\\\"getSlope\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n      return function () {\n        var _e = [new Error(), -7, -20];\n        var _f = function _f(x) {\n          if (mX1 === mY1 && mX2 === mY2) {\n            return x;\n          }\n          if (x === 0) {\n            return 0;\n          }\n          if (x === 1) {\n            return 1;\n          }\n          return calcBezier(getTForX(x), mY1, mY2);\n        };\n        _f._closure = {\n          mX1: mX1,\n          mY1: mY1,\n          mX2: mX2,\n          mY2: mY2,\n          calcBezier: calcBezier,\n          getTForX: getTForX\n        };\n        _f.asString = \"function BezierEasing(x) {\\n  const {\\n    mX1,\\n    mY1,\\n    mX2,\\n    mY2,\\n    calcBezier,\\n    getTForX\\n  } = this._closure;\\n  if (mX1 === mY1 && mX2 === mY2) {\\n    return x;\\n  }\\n  if (x === 0) {\\n    return 0;\\n  }\\n  if (x === 1) {\\n    return 1;\\n  }\\n  return calcBezier(getTForX(x), mY1, mY2);\\n}\";\n        _f.__workletHash = 11458292201024;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA6JS,qBAASA,CAAaC,CAACA;EAAAA;IAAAA;IAAAA;IAAAA;IAAAA;IAAAA;IAAAA;EAAAA;EAE5B,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,EAAE;IAC9B,OAAOJ,CAAC;EACV;EAEA,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;EACV;EACA,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;EACV;EACA,OAAOK,UAAU,CAACC,QAAQ,CAACN,CAAC,CAAC,EAAEE,GAAG,EAAEE,GAAG,CAAC;AAC1C\\\",\\\"names\\\":[\\\"BezierEasing\\\",\\\"x\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"calcBezier\\\",\\\"getTForX\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }();\n    };\n    _f._closure = {};\n    _f.asString = \"function Bezier(mX1, mY1, mX2, mY2) {\\n  const NEWTON_ITERATIONS = 4;\\n  const NEWTON_MIN_SLOPE = 0.001;\\n  const SUBDIVISION_PRECISION = 0.0000001;\\n  const SUBDIVISION_MAX_ITERATIONS = 10;\\n  const kSplineTableSize = 11;\\n  const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\\n  function A(aA1, aA2) {\\n    'worklet';\\n\\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\\n  }\\n  function B(aA1, aA2) {\\n    'worklet';\\n\\n    return 3.0 * aA2 - 6.0 * aA1;\\n  }\\n  function C(aA1) {\\n    'worklet';\\n\\n    return 3.0 * aA1;\\n  }\\n  function calcBezier(aT, aA1, aA2) {\\n    'worklet';\\n\\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\\n  }\\n  function getSlope(aT, aA1, aA2) {\\n    'worklet';\\n\\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\\n  }\\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\\n    'worklet';\\n\\n    let currentX;\\n    let currentT;\\n    let i = 0;\\n    do {\\n      currentT = aA + (aB - aA) / 2.0;\\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\\n      if (currentX > 0.0) {\\n        aB = currentT;\\n      } else {\\n        aA = currentT;\\n      }\\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\\n    return currentT;\\n  }\\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\\n    'worklet';\\n\\n    for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\\n      const currentSlope = getSlope(aGuessT, mX1, mX2);\\n      if (currentSlope === 0.0) {\\n        return aGuessT;\\n      }\\n      const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\\n      aGuessT -= currentX / currentSlope;\\n    }\\n    return aGuessT;\\n  }\\n  function LinearEasing(x) {\\n    'worklet';\\n\\n    return x;\\n  }\\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\\n    throw new Error('bezier x values must be in [0, 1] range');\\n  }\\n  if (mX1 === mY1 && mX2 === mY2) {\\n    return LinearEasing;\\n  }\\n  const sampleValues = new Array(kSplineTableSize);\\n  for (let i = 0; i < kSplineTableSize; ++i) {\\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\\n  }\\n  function getTForX(aX) {\\n    'worklet';\\n\\n    let intervalStart = 0.0;\\n    let currentSample = 1;\\n    const lastSample = kSplineTableSize - 1;\\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\\n      intervalStart += kSampleStepSize;\\n    }\\n    --currentSample;\\n    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\\n    const guessForT = intervalStart + dist * kSampleStepSize;\\n    const initialSlope = getSlope(guessForT, mX1, mX2);\\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\\n    } else if (initialSlope === 0.0) {\\n      return guessForT;\\n    } else {\\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\\n    }\\n  }\\n  return function BezierEasing(x) {\\n    'worklet';\\n\\n    if (mX1 === mY1 && mX2 === mY2) {\\n      return x;\\n    }\\n    if (x === 0) {\\n      return 0;\\n    }\\n    if (x === 1) {\\n      return 1;\\n    }\\n    return calcBezier(getTForX(x), mY1, mY2);\\n  };\\n}\";\n    _f.__workletHash = 11048418097672;\n    _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\";\n    _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"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\\\",\\\"names\\\":[\\\"Bezier\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"NEWTON_ITERATIONS\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"SUBDIVISION_PRECISION\\\",\\\"SUBDIVISION_MAX_ITERATIONS\\\",\\\"kSplineTableSize\\\",\\\"kSampleStepSize\\\",\\\"A\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"B\\\",\\\"C\\\",\\\"calcBezier\\\",\\\"aT\\\",\\\"getSlope\\\",\\\"binarySubdivide\\\",\\\"aX\\\",\\\"aA\\\",\\\"aB\\\",\\\"currentX\\\",\\\"currentT\\\",\\\"i\\\",\\\"Math\\\",\\\"abs\\\",\\\"newtonRaphsonIterate\\\",\\\"aGuessT\\\",\\\"currentSlope\\\",\\\"LinearEasing\\\",\\\"x\\\",\\\"Error\\\",\\\"sampleValues\\\",\\\"Array\\\",\\\"getTForX\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\",\\\"BezierEasing\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/Bezier.ts\\\"]}\";\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  exports.Bezier = Bezier;\n});","lineCount":243,"map":[[6,6,9,16,"Bezier"],[6,12,9,22],[7,4,9,22],[8,4,9,22],[8,25,10,2,"mX1"],[8,28,10,13],[8,30,11,2,"mY1"],[8,33,11,13],[8,35,12,2,"mX2"],[8,38,12,13],[8,40,13,2,"mY2"],[8,43,13,13],[8,45,14,25],[9,6,17,2],[9,10,17,8,"NEWTON_ITERATIONS"],[9,27,17,25],[9,30,17,28],[9,31,17,29],[10,6,18,2],[10,10,18,8,"NEWTON_MIN_SLOPE"],[10,26,18,24],[10,29,18,27],[10,34,18,32],[11,6,19,2],[11,10,19,8,"SUBDIVISION_PRECISION"],[11,31,19,29],[11,34,19,32],[11,43,19,41],[12,6,20,2],[12,10,20,8,"SUBDIVISION_MAX_ITERATIONS"],[12,36,20,34],[12,39,20,37],[12,41,20,39],[13,6,22,2],[13,10,22,8,"kSplineTableSize"],[13,26,22,24],[13,29,22,27],[13,31,22,29],[14,6,23,2],[14,10,23,8,"kSampleStepSize"],[14,25,23,23],[14,28,23,26],[14,31,23,29],[14,35,23,33,"kSplineTableSize"],[14,51,23,49],[14,54,23,52],[14,57,23,55],[14,58,23,56],[15,6,23,57],[15,10,25,11,"A"],[15,11,25,12],[16,8,25,12],[17,8,25,12],[17,29,25,13,"aA1"],[17,32,25,24],[17,34,25,26,"aA2"],[17,37,25,37],[17,39,25,47],[18,10,27,4],[18,17,27,11],[18,20,27,14],[18,23,27,17],[18,26,27,20],[18,29,27,23,"aA2"],[18,32,27,26],[18,35,27,29],[18,38,27,32],[18,41,27,35,"aA1"],[18,44,27,38],[19,8,28,2],[19,9,28,3],[20,8,28,3],[21,8,28,3],[22,8,28,3],[23,8,28,3],[24,8,28,3],[25,8,28,3],[26,8,28,3],[27,6,28,3],[28,6,28,3],[28,10,29,11,"B"],[28,11,29,12],[29,8,29,12],[30,8,29,12],[30,29,29,13,"aA1"],[30,32,29,24],[30,34,29,26,"aA2"],[30,37,29,37],[30,39,29,47],[31,10,31,4],[31,17,31,11],[31,20,31,14],[31,23,31,17,"aA2"],[31,26,31,20],[31,29,31,23],[31,32,31,26],[31,35,31,29,"aA1"],[31,38,31,32],[32,8,32,2],[32,9,32,3],[33,8,32,3],[34,8,32,3],[35,8,32,3],[36,8,32,3],[37,8,32,3],[38,8,32,3],[39,8,32,3],[40,6,32,3],[41,6,32,3],[41,10,33,11,"C"],[41,11,33,12],[42,8,33,12],[43,8,33,12],[43,29,33,13,"aA1"],[43,32,33,24],[43,34,33,26],[44,10,35,4],[44,17,35,11],[44,20,35,14],[44,23,35,17,"aA1"],[44,26,35,20],[45,8,36,2],[45,9,36,3],[46,8,36,3],[47,8,36,3],[48,8,36,3],[49,8,36,3],[50,8,36,3],[51,8,36,3],[52,8,36,3],[53,6,36,3],[54,6,36,3],[54,10,39,11,"calcBezier"],[54,20,39,21],[55,8,39,21],[56,8,39,21],[56,29,39,22,"aT"],[56,31,39,32],[56,33,39,34,"aA1"],[56,36,39,45],[56,38,39,47,"aA2"],[56,41,39,58],[56,43,39,68],[57,10,41,4],[57,17,41,11],[57,18,41,12],[57,19,41,13,"A"],[57,20,41,14],[57,21,41,15,"aA1"],[57,24,41,18],[57,26,41,20,"aA2"],[57,29,41,23],[57,30,41,24],[57,33,41,27,"aT"],[57,35,41,29],[57,38,41,32,"B"],[57,39,41,33],[57,40,41,34,"aA1"],[57,43,41,37],[57,45,41,39,"aA2"],[57,48,41,42],[57,49,41,43],[57,53,41,47,"aT"],[57,55,41,49],[57,58,41,52,"C"],[57,59,41,53],[57,60,41,54,"aA1"],[57,63,41,57],[57,64,41,58],[57,68,41,62,"aT"],[57,70,41,64],[58,8,42,2],[58,9,42,3],[59,8,42,3],[60,10,42,3],[60,13,3,11,"A"],[60,14,3,12],[61,10,3,12],[61,13,3,30,"B"],[61,14,3,31],[62,10,3,31],[62,13,3,50,"C"],[63,8,3,51],[64,8,3,51],[65,8,3,51],[66,8,3,51],[67,8,3,51],[68,8,3,51],[69,8,3,51],[70,6,3,51],[71,6,3,51],[71,10,45,11,"getSlope"],[71,18,45,19],[72,8,45,19],[73,8,45,19],[73,29,45,20,"aT"],[73,31,45,30],[73,33,45,32,"aA1"],[73,36,45,43],[73,38,45,45,"aA2"],[73,41,45,56],[73,43,45,66],[74,10,47,4],[74,17,47,11],[74,20,47,14],[74,23,47,17,"A"],[74,24,47,18],[74,25,47,19,"aA1"],[74,28,47,22],[74,30,47,24,"aA2"],[74,33,47,27],[74,34,47,28],[74,37,47,31,"aT"],[74,39,47,33],[74,42,47,36,"aT"],[74,44,47,38],[74,47,47,41],[74,50,47,44],[74,53,47,47,"B"],[74,54,47,48],[74,55,47,49,"aA1"],[74,58,47,52],[74,60,47,54,"aA2"],[74,63,47,57],[74,64,47,58],[74,67,47,61,"aT"],[74,69,47,63],[74,72,47,66,"C"],[74,73,47,67],[74,74,47,68,"aA1"],[74,77,47,71],[74,78,47,72],[75,8,48,2],[75,9,48,3],[76,8,48,3],[77,10,48,3],[77,13,3,15,"A"],[77,14,3,16],[78,10,3,16],[78,13,3,45,"B"],[78,14,3,46],[79,10,3,46],[79,13,3,64,"C"],[80,8,3,65],[81,8,3,65],[82,8,3,65],[83,8,3,65],[84,8,3,65],[85,8,3,65],[86,8,3,65],[87,6,3,65],[88,6,3,65],[88,10,50,11,"binarySubdivide"],[88,25,50,26],[89,8,50,26],[90,8,50,26],[90,29,51,4,"aX"],[90,31,51,14],[90,33,52,4,"aA"],[90,35,52,14],[90,37,53,4,"aB"],[90,39,53,14],[90,41,54,4,"mX1"],[90,44,54,15],[90,46,55,4,"mX2"],[90,49,55,15],[90,51,56,12],[91,10,58,4],[91,14,58,8,"currentX"],[91,22,58,16],[92,10,59,4],[92,14,59,8,"currentT"],[92,22,59,16],[93,10,60,4],[93,14,60,8,"i"],[93,15,60,9],[93,18,60,12],[93,19,60,13],[94,10,61,4],[94,13,61,7],[95,12,62,6,"currentT"],[95,20,62,14],[95,23,62,17,"aA"],[95,25,62,19],[95,28,62,22],[95,29,62,23,"aB"],[95,31,62,25],[95,34,62,28,"aA"],[95,36,62,30],[95,40,62,34],[95,43,62,37],[96,12,63,6,"currentX"],[96,20,63,14],[96,23,63,17,"calcBezier"],[96,33,63,27],[96,34,63,28,"currentT"],[96,42,63,36],[96,44,63,38,"mX1"],[96,47,63,41],[96,49,63,43,"mX2"],[96,52,63,46],[96,53,63,47],[96,56,63,50,"aX"],[96,58,63,52],[97,12,64,6],[97,16,64,10,"currentX"],[97,24,64,18],[97,27,64,21],[97,30,64,24],[97,32,64,26],[98,14,65,8,"aB"],[98,16,65,10],[98,19,65,13,"currentT"],[98,27,65,21],[99,12,66,6],[99,13,66,7],[99,19,66,13],[100,14,67,8,"aA"],[100,16,67,10],[100,19,67,13,"currentT"],[100,27,67,21],[101,12,68,6],[102,10,69,4],[102,11,69,5],[102,19,70,6,"Math"],[102,23,70,10],[102,24,70,11,"abs"],[102,27,70,14],[102,28,70,15,"currentX"],[102,36,70,23],[102,37,70,24],[102,40,70,27,"SUBDIVISION_PRECISION"],[102,61,70,48],[102,65,71,6],[102,67,71,8,"i"],[102,68,71,9],[102,71,71,12,"SUBDIVISION_MAX_ITERATIONS"],[102,97,71,38],[103,10,73,4],[103,17,73,11,"currentT"],[103,25,73,19],[104,8,74,2],[104,9,74,3],[105,8,74,3],[106,10,74,3],[106,33,13,32,"SUBDIVISION_PRECISION"],[106,54,13,53],[107,10,13,53],[107,38,13,63,"SUBDIVISION_MAX_ITERATIONS"],[107,64,13,89],[108,10,13,89],[108,22,7,15,"calcBezier"],[109,8,7,25],[110,8,7,25],[111,8,7,25],[112,8,7,25],[113,8,7,25],[114,8,7,25],[115,8,7,25],[116,6,7,25],[117,6,7,25],[117,10,76,11,"newtonRaphsonIterate"],[117,30,76,31],[118,8,76,31],[119,8,76,31],[119,29,77,4,"aX"],[119,31,77,14],[119,33,78,4,"aGuessT"],[119,40,78,19],[119,42,79,4,"mX1"],[119,45,79,15],[119,47,80,4,"mX2"],[119,50,80,15],[119,52,81,12],[120,10,83,4],[120,15,83,9],[120,19,83,13,"i"],[120,20,83,14],[120,23,83,17],[120,24,83,18],[120,26,83,20,"i"],[120,27,83,21],[120,30,83,24,"NEWTON_ITERATIONS"],[120,47,83,41],[120,49,83,43],[120,51,83,45,"i"],[120,52,83,46],[120,54,83,48],[121,12,84,6],[121,16,84,12,"currentSlope"],[121,28,84,24],[121,31,84,27,"getSlope"],[121,39,84,35],[121,40,84,36,"aGuessT"],[121,47,84,43],[121,49,84,45,"mX1"],[121,52,84,48],[121,54,84,50,"mX2"],[121,57,84,53],[121,58,84,54],[122,12,85,6],[122,16,85,10,"currentSlope"],[122,28,85,22],[122,33,85,27],[122,36,85,30],[122,38,85,32],[123,14,86,8],[123,21,86,15,"aGuessT"],[123,28,86,22],[124,12,87,6],[125,12,88,6],[125,16,88,12,"currentX"],[125,24,88,20],[125,27,88,23,"calcBezier"],[125,37,88,33],[125,38,88,34,"aGuessT"],[125,45,88,41],[125,47,88,43,"mX1"],[125,50,88,46],[125,52,88,48,"mX2"],[125,55,88,51],[125,56,88,52],[125,59,88,55,"aX"],[125,61,88,57],[126,12,89,6,"aGuessT"],[126,19,89,13],[126,23,89,17,"currentX"],[126,31,89,25],[126,34,89,28,"currentSlope"],[126,46,89,40],[127,10,90,4],[128,10,91,4],[128,17,91,11,"aGuessT"],[128,24,91,18],[129,8,92,2],[129,9,92,3],[130,8,92,3],[131,10,92,3],[131,29,2,22,"NEWTON_ITERATIONS"],[131,46,2,39],[132,10,2,39],[132,20,3,25,"getSlope"],[132,28,3,33],[133,10,3,33],[133,22,7,21,"calcBezier"],[134,8,7,31],[135,8,7,31],[136,8,7,31],[137,8,7,31],[138,8,7,31],[139,8,7,31],[140,8,7,31],[141,6,7,31],[142,6,7,31],[142,10,94,11,"LinearEasing"],[142,22,94,23],[143,8,94,23],[144,8,94,23],[144,29,94,24,"x"],[144,30,94,33],[144,32,94,43],[145,10,96,4],[145,17,96,11,"x"],[145,18,96,12],[146,8,97,2],[146,9,97,3],[147,8,97,3],[148,8,97,3],[149,8,97,3],[150,8,97,3],[151,8,97,3],[152,8,97,3],[153,8,97,3],[154,6,97,3],[155,6,99,2],[155,10,99,6],[155,12,99,8,"mX1"],[155,15,99,11],[155,19,99,15],[155,20,99,16],[155,24,99,20,"mX1"],[155,27,99,23],[155,31,99,27],[155,32,99,28],[155,36,99,32,"mX2"],[155,39,99,35],[155,43,99,39],[155,44,99,40],[155,48,99,44,"mX2"],[155,51,99,47],[155,55,99,51],[155,56,99,52],[155,57,99,53],[155,59,99,55],[156,8,100,4],[156,14,100,10],[156,18,100,14,"Error"],[156,23,100,19],[156,24,100,20],[156,65,100,61],[156,66,100,62],[157,6,101,2],[158,6,103,2],[158,10,103,6,"mX1"],[158,13,103,9],[158,18,103,14,"mY1"],[158,21,103,17],[158,25,103,21,"mX2"],[158,28,103,24],[158,33,103,29,"mY2"],[158,36,103,32],[158,38,103,34],[159,8,104,4],[159,15,104,11,"LinearEasing"],[159,27,104,23],[160,6,105,2],[161,6,115,2],[161,10,115,8,"sampleValues"],[161,22,115,20],[161,25,115,23],[161,29,115,27,"Array"],[161,34,115,32],[161,35,115,33,"kSplineTableSize"],[161,51,115,49],[161,52,115,50],[162,6,117,2],[162,11,117,7],[162,15,117,11,"i"],[162,16,117,12],[162,19,117,15],[162,20,117,16],[162,22,117,18,"i"],[162,23,117,19],[162,26,117,22,"kSplineTableSize"],[162,42,117,38],[162,44,117,40],[162,46,117,42,"i"],[162,47,117,43],[162,49,117,45],[163,8,118,4,"sampleValues"],[163,20,118,16],[163,21,118,17,"i"],[163,22,118,18],[163,23,118,19],[163,26,118,22,"calcBezier"],[163,36,118,32],[163,37,118,33,"i"],[163,38,118,34],[163,41,118,37,"kSampleStepSize"],[163,56,118,52],[163,58,118,54,"mX1"],[163,61,118,57],[163,63,118,59,"mX2"],[163,66,118,62],[163,67,118,63],[164,6,119,2],[165,6,119,3],[165,10,121,11,"getTForX"],[165,18,121,19],[166,8,121,19],[167,8,121,19],[167,29,121,20,"aX"],[167,31,121,30],[167,33,121,40],[168,10,123,4],[168,14,123,8,"intervalStart"],[168,27,123,21],[168,30,123,24],[168,33,123,27],[169,10,124,4],[169,14,124,8,"currentSample"],[169,27,124,21],[169,30,124,24],[169,31,124,25],[170,10,125,4],[170,14,125,10,"lastSample"],[170,24,125,20],[170,27,125,23,"kSplineTableSize"],[170,43,125,39],[170,46,125,42],[170,47,125,43],[171,10,127,4],[171,17,129,6,"currentSample"],[171,30,129,19],[171,35,129,24,"lastSample"],[171,45,129,34],[171,49,129,38,"sampleValues"],[171,61,129,50],[171,62,129,51,"currentSample"],[171,75,129,64],[171,76,129,65],[171,80,129,69,"aX"],[171,82,129,71],[171,84,130,6],[171,86,130,8,"currentSample"],[171,99,130,21],[171,101,131,6],[172,12,132,6,"intervalStart"],[172,25,132,19],[172,29,132,23,"kSampleStepSize"],[172,44,132,38],[173,10,133,4],[174,10,134,4],[174,12,134,6,"currentSample"],[174,25,134,19],[175,10,137,4],[175,14,137,10,"dist"],[175,18,137,14],[175,21,138,6],[175,22,138,7,"aX"],[175,24,138,9],[175,27,138,12,"sampleValues"],[175,39,138,24],[175,40,138,25,"currentSample"],[175,53,138,38],[175,54,138,39],[175,59,139,7,"sampleValues"],[175,71,139,19],[175,72,139,20,"currentSample"],[175,85,139,33],[175,88,139,36],[175,89,139,37],[175,90,139,38],[175,93,139,41,"sampleValues"],[175,105,139,53],[175,106,139,54,"currentSample"],[175,119,139,67],[175,120,139,68],[175,121,139,69],[176,10,140,4],[176,14,140,10,"guessForT"],[176,23,140,19],[176,26,140,22,"intervalStart"],[176,39,140,35],[176,42,140,38,"dist"],[176,46,140,42],[176,49,140,45,"kSampleStepSize"],[176,64,140,60],[177,10,142,4],[177,14,142,10,"initialSlope"],[177,26,142,22],[177,29,142,25,"getSlope"],[177,37,142,33],[177,38,142,34,"guessForT"],[177,47,142,43],[177,49,142,45,"mX1"],[177,52,142,48],[177,54,142,50,"mX2"],[177,57,142,53],[177,58,142,54],[178,10,143,4],[178,14,143,8,"initialSlope"],[178,26,143,20],[178,30,143,24,"NEWTON_MIN_SLOPE"],[178,46,143,40],[178,48,143,42],[179,12,144,6],[179,19,144,13,"newtonRaphsonIterate"],[179,39,144,33],[179,40,144,34,"aX"],[179,42,144,36],[179,44,144,38,"guessForT"],[179,53,144,47],[179,55,144,49,"mX1"],[179,58,144,52],[179,60,144,54,"mX2"],[179,63,144,57],[179,64,144,58],[180,10,145,4],[180,11,145,5],[180,17,145,11],[180,21,145,15,"initialSlope"],[180,33,145,27],[180,38,145,32],[180,41,145,35],[180,43,145,37],[181,12,146,6],[181,19,146,13,"guessForT"],[181,28,146,22],[182,10,147,4],[182,11,147,5],[182,17,147,11],[183,12,148,6],[183,19,148,13,"binarySubdivide"],[183,34,148,28],[183,35,149,8,"aX"],[183,37,149,10],[183,39,150,8,"intervalStart"],[183,52,150,21],[183,54,151,8,"intervalStart"],[183,67,151,21],[183,70,151,24,"kSampleStepSize"],[183,85,151,39],[183,87,152,8,"mX1"],[183,90,152,11],[183,92,153,8,"mX2"],[183,95,153,11],[183,96,154,7],[184,10,155,4],[185,8,156,2],[185,9,156,3],[186,8,156,3],[187,10,156,3],[187,28,4,21,"kSplineTableSize"],[187,44,4,37],[188,10,4,37],[188,24,11,87,"sampleValues"],[188,36,11,99],[189,10,11,99],[189,27,19,62,"kSampleStepSize"],[189,42,19,77],[190,10,19,77],[190,20,13,23,"getSlope"],[190,28,13,31],[191,10,13,31],[191,15,19,79,"mX1"],[191,18,19,82],[192,10,19,82],[192,15,19,84,"mX2"],[192,18,19,87],[193,10,19,87],[193,28,14,22,"NEWTON_MIN_SLOPE"],[193,44,14,38],[194,10,14,38],[194,32,15,11,"newtonRaphsonIterate"],[194,52,15,31],[195,10,15,31],[195,27,19,11,"binarySubdivide"],[196,8,19,26],[197,8,19,26],[198,8,19,26],[199,8,19,26],[200,8,19,26],[201,8,19,26],[202,8,19,26],[203,6,19,26],[204,6,158,2],[205,8,158,2],[206,8,158,2],[206,29,158,31,"x"],[206,30,158,32],[206,32,158,34],[207,10,160,4],[207,14,160,8,"mX1"],[207,17,160,11],[207,22,160,16,"mY1"],[207,25,160,19],[207,29,160,23,"mX2"],[207,32,160,26],[207,37,160,31,"mY2"],[207,40,160,34],[207,42,160,36],[208,12,161,6],[208,19,161,13,"x"],[208,20,161,14],[209,10,162,4],[210,10,164,4],[210,14,164,8,"x"],[210,15,164,9],[210,20,164,14],[210,21,164,15],[210,23,164,17],[211,12,165,6],[211,19,165,13],[211,20,165,14],[212,10,166,4],[213,10,167,4],[213,14,167,8,"x"],[213,15,167,9],[213,20,167,14],[213,21,167,15],[213,23,167,17],[214,12,168,6],[214,19,168,13],[214,20,168,14],[215,10,169,4],[216,10,170,4],[216,17,170,11,"calcBezier"],[216,27,170,21],[216,28,170,22,"getTForX"],[216,36,170,30],[216,37,170,31,"x"],[216,38,170,32],[216,39,170,33],[216,41,170,35,"mY1"],[216,44,170,38],[216,46,170,40,"mY2"],[216,49,170,43],[216,50,170,44],[217,8,171,2],[217,9,171,3],[218,8,171,3],[219,10,171,3],[219,15,2,6,"mX1"],[219,18,2,9],[220,10,2,9],[220,15,12,33,"mY1"],[220,18,12,36],[221,10,12,36],[221,15,2,21,"mX2"],[221,18,2,24],[222,10,2,24],[222,15,12,38,"mY2"],[222,18,12,41],[223,10,12,41],[223,22,12,9,"calcBezier"],[223,32,12,19],[224,10,12,19],[224,20,12,20,"getTForX"],[225,8,12,28],[226,8,12,28],[227,8,12,28],[228,8,12,28],[229,8,12,28],[230,8,12,28],[231,8,12,28],[232,6,12,28],[233,4,172,0],[233,5,172,1],[234,4,172,1],[235,4,172,1],[236,4,172,1],[237,4,172,1],[238,4,172,1],[239,4,172,1],[240,4,172,1],[241,2,172,1],[242,2,172,1],[243,0,172,1]],"functionMap":{"names":["<global>","Bezier","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","LinearEasing","getTForX","BezierEasing"],"mappings":"AAA;OCQ;ECgB;GDG;EEC;GFG;EGC;GHG;EIG;GJG;EKG;GLG;EME;GNwB;EOE;GPgB;EQE;GRG;ESwB;GTmC;SUE;GVa;CDC"}},"type":"js/module"}]}