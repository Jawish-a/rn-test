{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":496,"column":0,"index":13848}},{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":496,"column":0,"index":13848}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"./BaseRouter","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"1AJ7xeIZIqyL6CYOeCndb3n2akI="}},{"name":"nanoid/non-secure","data":{"asyncType":null,"locs":[{"start":{"line":118,"column":22,"index":3054},"end":{"line":118,"column":28,"index":3060},"identifierName":"nanoid"},{"start":{"line":123,"column":40,"index":3174},"end":{"line":123,"column":46,"index":3180},"identifierName":"nanoid"},{"start":{"line":144,"column":49,"index":3704},"end":{"line":144,"column":55,"index":3710},"identifierName":"nanoid"},{"start":{"line":162,"column":38,"index":4253},"end":{"line":162,"column":44,"index":4259},"identifierName":"nanoid"},{"start":{"line":171,"column":22,"index":4454},"end":{"line":171,"column":28,"index":4460},"identifierName":"nanoid"},{"start":{"line":196,"column":38,"index":5128},"end":{"line":196,"column":44,"index":5134},"identifierName":"nanoid"},{"start":{"line":249,"column":62,"index":6435},"end":{"line":249,"column":68,"index":6441},"identifierName":"nanoid"},{"start":{"line":295,"column":49,"index":7961},"end":{"line":295,"column":55,"index":7967},"identifierName":"nanoid"},{"start":{"line":407,"column":68,"index":11412},"end":{"line":407,"column":74,"index":11418},"identifierName":"nanoid"}],"key":"aLLVXWB8QP15fri3afEUab9H+Os="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackActions = void 0;\n  exports.default = StackRouter;\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _BaseRouter = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"./BaseRouter\"));\n  var StackActions = {\n    replace: function replace(name, params) {\n      return {\n        type: 'REPLACE',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    push: function push(name, params) {\n      return {\n        type: 'PUSH',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    pop: function pop() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return {\n        type: 'POP',\n        payload: {\n          count: count\n        }\n      };\n    },\n    popToTop: function popToTop() {\n      return {\n        type: 'POP_TO_TOP'\n      };\n    }\n  };\n  exports.StackActions = StackActions;\n  function StackRouter(options) {\n    var router = Object.assign({}, _BaseRouter.default, {\n      type: 'stack',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n          routeParamList = _ref.routeParamList;\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        return {\n          stale: false,\n          type: 'stack',\n          key: `stack-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n          index: 0,\n          routeNames: routeNames,\n          routes: [{\n            key: `${initialRouteName}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          }]\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        }).map(function (route) {\n          return Object.assign({}, route, {\n            key: route.key || `${route.name}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n            params: routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], route.params) : route.params\n          });\n        });\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: `${initialRouteName}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n        return {\n          stale: false,\n          type: 'stack',\n          key: `stack-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n          index: routes.length - 1,\n          routeNames: routeNames,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList,\n          routeKeyChanges = _ref3.routeKeyChanges;\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name) && !routeKeyChanges.includes(route.name);\n        });\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: `${initialRouteName}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n        return Object.assign({}, state, {\n          routeNames: routeNames,\n          routes: routes,\n          index: Math.min(state.index, routes.length - 1)\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return Object.assign({}, state, {\n          index: index,\n          routes: state.routes.slice(0, index + 1)\n        });\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        var routeParamList = options.routeParamList;\n        switch (action.type) {\n          case 'REPLACE':\n            {\n              var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n              if (index === -1) {\n                return null;\n              }\n              var _action$payload = action.payload,\n                name = _action$payload.name,\n                key = _action$payload.key,\n                _params = _action$payload.params;\n              if (!state.routeNames.includes(name)) {\n                return null;\n              }\n              return Object.assign({}, state, {\n                routes: state.routes.map(function (route, i) {\n                  return i === index ? {\n                    key: key !== undefined ? key : `${name}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n                    name: name,\n                    params: routeParamList[name] !== undefined ? Object.assign({}, routeParamList[name], _params) : _params\n                  } : route;\n                })\n              });\n            }\n          case 'PUSH':\n            if (state.routeNames.includes(action.payload.name)) {\n              var getId = options.routeGetIdList[action.payload.name];\n              var id = getId == null ? void 0 : getId({\n                params: action.payload.params\n              });\n              var route = id ? state.routes.find(function (route) {\n                return route.name === action.payload.name && id === (getId == null ? void 0 : getId({\n                  params: route.params\n                }));\n              }) : undefined;\n              var routes;\n              if (route) {\n                routes = state.routes.filter(function (r) {\n                  return r.key !== route.key;\n                });\n                routes.push(Object.assign({}, route, {\n                  params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n                }));\n              } else {\n                routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: `${action.payload.name}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n                }]);\n              }\n              return Object.assign({}, state, {\n                index: routes.length - 1,\n                routes: routes\n              });\n            }\n            return null;\n          case 'POP':\n            {\n              var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n              if (_index > 0) {\n                var _count = Math.max(_index - action.payload.count + 1, 1);\n                var _routes = state.routes.slice(0, _count).concat(state.routes.slice(_index + 1));\n                return Object.assign({}, state, {\n                  index: _routes.length - 1,\n                  routes: _routes\n                });\n              }\n              return null;\n            }\n          case 'POP_TO_TOP':\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: state.routes.length - 1\n              }\n            }, options);\n          case 'NAVIGATE':\n            if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n              return null;\n            }\n            if (action.payload.key || action.payload.name) {\n              var _action$payload$path;\n              var _index2 = -1;\n              var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n              var _id = _getId == null ? void 0 : _getId({\n                params: action.payload.params\n              });\n              if (_id) {\n                _index2 = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name && _id === (_getId == null ? void 0 : _getId({\n                    params: route.params\n                  }));\n                });\n              } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n                _index2 = state.index;\n              } else {\n                for (var i = state.routes.length - 1; i >= 0; i--) {\n                  if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                    _index2 = i;\n                    break;\n                  }\n                }\n              }\n              if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n                return null;\n              }\n              if (_index2 === -1 && action.payload.name !== undefined) {\n                var _action$payload$key;\n                var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: (_action$payload$key = action.payload.key) != null ? _action$payload$key : `${action.payload.name}-${(0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n                }]);\n                return Object.assign({}, state, {\n                  routes: _routes2,\n                  index: _routes2.length - 1\n                });\n              }\n              var _route = state.routes[_index2];\n              var _params2;\n              if (action.payload.merge) {\n                _params2 = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? Object.assign({}, routeParamList[_route.name], _route.params, action.payload.params) : _route.params;\n              } else {\n                _params2 = routeParamList[_route.name] !== undefined ? Object.assign({}, routeParamList[_route.name], action.payload.params) : action.payload.params;\n              }\n              return Object.assign({}, state, {\n                index: _index2,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params2 !== _route.params || action.payload.path && action.payload.path !== _route.path ? Object.assign({}, _route, {\n                  path: (_action$payload$path = action.payload.path) != null ? _action$payload$path : _route.path,\n                  params: _params2\n                }) : state.routes[_index2]])\n              });\n            }\n            return null;\n          case 'GO_BACK':\n            if (state.index > 0) {\n              return router.getStateForAction(state, {\n                type: 'POP',\n                payload: {\n                  count: 1\n                },\n                target: action.target,\n                source: action.source\n              }, options);\n            }\n            return null;\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      actionCreators: StackActions\n    });\n    return router;\n  }\n});","lineCount":290,"map":[[8,2,3,0],[9,2,84,7],[9,6,84,13,"StackActions"],[9,18,84,25],[9,21,84,28],[10,4,85,2,"replace"],[10,11,85,9],[10,30,85,10,"name"],[10,34,85,22],[10,36,85,24,"params"],[10,42,85,39],[10,44,85,58],[11,6,86,4],[11,13,86,11],[12,8,86,13,"type"],[12,12,86,17],[12,14,86,19],[12,23,86,28],[13,8,86,30,"payload"],[13,15,86,37],[13,17,86,39],[14,10,86,41,"name"],[14,14,86,45],[14,16,86,41,"name"],[14,20,86,45],[15,10,86,47,"params"],[15,16,86,53],[15,18,86,47,"params"],[16,8,86,54],[17,6,86,56],[17,7,86,57],[18,4,87,2],[18,5,87,3],[19,4,88,2,"push"],[19,8,88,6],[19,24,88,7,"name"],[19,28,88,19],[19,30,88,21,"params"],[19,36,88,36],[19,38,88,55],[20,6,89,4],[20,13,89,11],[21,8,89,13,"type"],[21,12,89,17],[21,14,89,19],[21,20,89,25],[22,8,89,27,"payload"],[22,15,89,34],[22,17,89,36],[23,10,89,38,"name"],[23,14,89,42],[23,16,89,38,"name"],[23,20,89,42],[24,10,89,44,"params"],[24,16,89,50],[24,18,89,44,"params"],[25,8,89,51],[26,6,89,53],[26,7,89,54],[27,4,90,2],[27,5,90,3],[28,4,91,2,"pop"],[28,7,91,5],[28,24,91,42],[29,6,91,42],[29,10,91,6,"count"],[29,15,91,19],[29,86,91,22],[29,87,91,23],[30,6,92,4],[30,13,92,11],[31,8,92,13,"type"],[31,12,92,17],[31,14,92,19],[31,19,92,24],[32,8,92,26,"payload"],[32,15,92,33],[32,17,92,35],[33,10,92,37,"count"],[33,15,92,42],[33,17,92,37,"count"],[34,8,92,43],[35,6,92,45],[35,7,92,46],[36,4,93,2],[36,5,93,3],[37,4,94,2,"popToTop"],[37,12,94,10],[37,34,94,30],[38,6,95,4],[38,13,95,11],[39,8,95,13,"type"],[39,12,95,17],[39,14,95,19],[40,6,95,32],[40,7,95,33],[41,4,96,2],[42,2,97,0],[42,3,97,1],[43,2,97,2],[44,2,99,15],[44,11,99,24,"StackRouter"],[44,22,99,35],[44,23,99,36,"options"],[44,30,99,63],[44,32,99,65],[45,4,100,2],[45,8,100,8,"router"],[45,14,103,3],[45,35,104,7,"BaseRouter"],[45,54,104,17],[46,6,106,4,"type"],[46,10,106,8],[46,12,106,10],[46,19,106,17],[47,6,108,4,"getInitialState"],[47,21,108,19],[47,54,108,52],[48,8,108,52],[48,12,108,22,"routeNames"],[48,22,108,32],[48,30,108,22,"routeNames"],[48,40,108,32],[49,10,108,34,"routeParamList"],[49,24,108,48],[49,32,108,34,"routeParamList"],[49,46,108,48],[50,8,109,6],[50,12,109,12,"initialRouteName"],[50,28,109,28],[50,31,110,8,"options"],[50,38,110,15],[50,39,110,16,"initialRouteName"],[50,55,110,32],[50,60,110,37,"undefined"],[50,69,110,46],[50,73,111,8,"routeNames"],[50,83,111,18],[50,84,111,19,"includes"],[50,92,111,27],[50,93,111,28,"options"],[50,100,111,35],[50,101,111,36,"initialRouteName"],[50,117,111,52],[50,118,111,53],[50,121,112,12,"options"],[50,128,112,19],[50,129,112,20,"initialRouteName"],[50,145,112,36],[50,148,113,12,"routeNames"],[50,158,113,22],[50,159,113,23],[50,160,113,24],[50,161,113,25],[51,8,115,6],[51,15,115,13],[52,10,116,8,"stale"],[52,15,116,13],[52,17,116,15],[52,22,116,20],[53,10,117,8,"type"],[53,14,117,12],[53,16,117,14],[53,23,117,21],[54,10,118,8,"key"],[54,13,118,11],[54,15,118,14],[54,24,118,22],[54,28,118,22,"nanoid"],[54,86,118,28],[54,89,118,31],[54,91,118,32],[55,10,119,8,"index"],[55,15,119,13],[55,17,119,15],[55,18,119,16],[56,10,120,8,"routeNames"],[56,20,120,18],[56,22,120,8,"routeNames"],[56,32,120,18],[57,10,121,8,"routes"],[57,16,121,14],[57,18,121,16],[57,19,122,10],[58,12,123,12,"key"],[58,15,123,15],[58,17,123,18],[58,20,123,20,"initialRouteName"],[58,36,123,37],[58,40,123,40],[58,44,123,40,"nanoid"],[58,102,123,46],[58,105,123,49],[58,107,123,50],[59,12,124,12,"name"],[59,16,124,16],[59,18,124,18,"initialRouteName"],[59,34,124,34],[60,12,125,12,"params"],[60,18,125,18],[60,20,125,20,"routeParamList"],[60,34,125,34],[60,35,125,35,"initialRouteName"],[60,51,125,51],[61,10,126,10],[61,11,126,11],[62,8,128,6],[62,9,128,7],[63,6,129,4],[63,7,129,5],[64,6,131,4,"getRehydratedState"],[64,24,131,22],[64,54,131,23,"partialState"],[64,66,131,35],[64,75,131,69],[65,8,131,69],[65,12,131,39,"routeNames"],[65,22,131,49],[65,31,131,39,"routeNames"],[65,41,131,49],[66,10,131,51,"routeParamList"],[66,24,131,65],[66,33,131,51,"routeParamList"],[66,47,131,65],[67,8,132,6],[67,12,132,10,"state"],[67,17,132,15],[67,20,132,18,"partialState"],[67,32,132,30],[68,8,134,6],[68,12,134,10,"state"],[68,17,134,15],[68,18,134,16,"stale"],[68,23,134,21],[68,28,134,26],[68,33,134,31],[68,35,134,33],[69,10,135,8],[69,17,135,15,"state"],[69,22,135,20],[70,8,136,6],[71,8,138,6],[71,12,138,12,"routes"],[71,18,138,18],[71,21,138,21,"state"],[71,26,138,26],[71,27,138,27,"routes"],[71,33,138,33],[71,34,139,9,"filter"],[71,40,139,15],[71,41,139,16],[71,51,139,17,"route"],[71,56,139,22],[72,10,139,22],[72,17,139,27,"routeNames"],[72,27,139,37],[72,28,139,38,"includes"],[72,36,139,46],[72,37,139,47,"route"],[72,42,139,52],[72,43,139,53,"name"],[72,47,139,57],[72,48,139,58],[73,8,139,58],[73,10,139,59],[73,11,140,9,"map"],[73,14,140,12],[73,15,141,10],[73,25,141,11,"route"],[73,30,141,16],[74,10,141,16],[74,35,143,17,"route"],[74,40,143,22],[75,12,144,14,"key"],[75,15,144,17],[75,17,144,19,"route"],[75,22,144,24],[75,23,144,25,"key"],[75,26,144,28],[75,30,144,33],[75,33,144,35,"route"],[75,38,144,40],[75,39,144,41,"name"],[75,43,144,46],[75,47,144,49],[75,51,144,49,"nanoid"],[75,109,144,55],[75,112,144,58],[75,114,144,59],[76,12,145,14,"params"],[76,18,145,20],[76,20,146,16,"routeParamList"],[76,34,146,30],[76,35,146,31,"route"],[76,40,146,36],[76,41,146,37,"name"],[76,45,146,41],[76,46,146,42],[76,51,146,47,"undefined"],[76,60,146,56],[76,81,148,25,"routeParamList"],[76,95,148,39],[76,96,148,40,"route"],[76,101,148,45],[76,102,148,46,"name"],[76,106,148,50],[76,107,148,51],[76,109,149,25,"route"],[76,114,149,30],[76,115,149,31,"params"],[76,121,149,37],[76,125,151,20,"route"],[76,130,151,25],[76,131,151,26,"params"],[77,10,151,32],[78,8,151,32],[78,9,152,31],[78,10,153,9],[79,8,155,6],[79,12,155,10,"routes"],[79,18,155,16],[79,19,155,17,"length"],[79,25,155,23],[79,30,155,28],[79,31,155,29],[79,33,155,31],[80,10,156,8],[80,14,156,14,"initialRouteName"],[80,30,156,30],[80,33,157,10,"options"],[80,40,157,17],[80,41,157,18,"initialRouteName"],[80,57,157,34],[80,62,157,39,"undefined"],[80,71,157,48],[80,74,158,14,"options"],[80,81,158,21],[80,82,158,22,"initialRouteName"],[80,98,158,38],[80,101,159,14,"routeNames"],[80,111,159,24],[80,112,159,25],[80,113,159,26],[80,114,159,27],[81,10,161,8,"routes"],[81,16,161,14],[81,17,161,15,"push"],[81,21,161,19],[81,22,161,20],[82,12,162,10,"key"],[82,15,162,13],[82,17,162,16],[82,20,162,18,"initialRouteName"],[82,36,162,35],[82,40,162,38],[82,44,162,38,"nanoid"],[82,102,162,44],[82,105,162,47],[82,107,162,48],[83,12,163,10,"name"],[83,16,163,14],[83,18,163,16,"initialRouteName"],[83,34,163,32],[84,12,164,10,"params"],[84,18,164,16],[84,20,164,18,"routeParamList"],[84,34,164,32],[84,35,164,33,"initialRouteName"],[84,51,164,49],[85,10,165,8],[85,11,165,9],[85,12,165,10],[86,8,166,6],[87,8,168,6],[87,15,168,13],[88,10,169,8,"stale"],[88,15,169,13],[88,17,169,15],[88,22,169,20],[89,10,170,8,"type"],[89,14,170,12],[89,16,170,14],[89,23,170,21],[90,10,171,8,"key"],[90,13,171,11],[90,15,171,14],[90,24,171,22],[90,28,171,22,"nanoid"],[90,86,171,28],[90,89,171,31],[90,91,171,32],[91,10,172,8,"index"],[91,15,172,13],[91,17,172,15,"routes"],[91,23,172,21],[91,24,172,22,"length"],[91,30,172,28],[91,33,172,31],[91,34,172,32],[92,10,173,8,"routeNames"],[92,20,173,18],[92,22,173,8,"routeNames"],[92,32,173,18],[93,10,174,8,"routes"],[93,16,174,14],[93,18,174,8,"routes"],[94,8,175,6],[94,9,175,7],[95,6,176,4],[95,7,176,5],[96,6,178,4,"getStateForRouteNamesChange"],[96,33,178,31],[96,72,179,6,"state"],[96,77,179,11],[96,86,181,6],[97,8,181,6],[97,12,180,8,"routeNames"],[97,22,180,18],[97,31,180,8,"routeNames"],[97,41,180,18],[98,10,180,20,"routeParamList"],[98,24,180,34],[98,33,180,20,"routeParamList"],[98,47,180,34],[99,10,180,36,"routeKeyChanges"],[99,25,180,51],[99,34,180,36,"routeKeyChanges"],[99,49,180,51],[100,8,182,6],[100,12,182,12,"routes"],[100,18,182,18],[100,21,182,21,"state"],[100,26,182,26],[100,27,182,27,"routes"],[100,33,182,33],[100,34,182,34,"filter"],[100,40,182,40],[100,41,183,8],[100,51,183,9,"route"],[100,56,183,14],[101,10,183,14],[101,17,184,10,"routeNames"],[101,27,184,20],[101,28,184,21,"includes"],[101,36,184,29],[101,37,184,30,"route"],[101,42,184,35],[101,43,184,36,"name"],[101,47,184,40],[101,48,184,41],[101,52,185,10],[101,53,185,11,"routeKeyChanges"],[101,68,185,26],[101,69,185,27,"includes"],[101,77,185,35],[101,78,185,36,"route"],[101,83,185,41],[101,84,185,42,"name"],[101,88,185,46],[101,89,185,47],[102,8,185,47],[102,10,186,7],[103,8,188,6],[103,12,188,10,"routes"],[103,18,188,16],[103,19,188,17,"length"],[103,25,188,23],[103,30,188,28],[103,31,188,29],[103,33,188,31],[104,10,189,8],[104,14,189,14,"initialRouteName"],[104,30,189,30],[104,33,190,10,"options"],[104,40,190,17],[104,41,190,18,"initialRouteName"],[104,57,190,34],[104,62,190,39,"undefined"],[104,71,190,48],[104,75,191,10,"routeNames"],[104,85,191,20],[104,86,191,21,"includes"],[104,94,191,29],[104,95,191,30,"options"],[104,102,191,37],[104,103,191,38,"initialRouteName"],[104,119,191,54],[104,120,191,55],[104,123,192,14,"options"],[104,130,192,21],[104,131,192,22,"initialRouteName"],[104,147,192,38],[104,150,193,14,"routeNames"],[104,160,193,24],[104,161,193,25],[104,162,193,26],[104,163,193,27],[105,10,195,8,"routes"],[105,16,195,14],[105,17,195,15,"push"],[105,21,195,19],[105,22,195,20],[106,12,196,10,"key"],[106,15,196,13],[106,17,196,16],[106,20,196,18,"initialRouteName"],[106,36,196,35],[106,40,196,38],[106,44,196,38,"nanoid"],[106,102,196,44],[106,105,196,47],[106,107,196,48],[107,12,197,10,"name"],[107,16,197,14],[107,18,197,16,"initialRouteName"],[107,34,197,32],[108,12,198,10,"params"],[108,18,198,16],[108,20,198,18,"routeParamList"],[108,34,198,32],[108,35,198,33,"initialRouteName"],[108,51,198,49],[109,10,199,8],[109,11,199,9],[109,12,199,10],[110,8,200,6],[111,8,202,6],[111,33,203,11,"state"],[111,38,203,16],[112,10,204,8,"routeNames"],[112,20,204,18],[112,22,204,8,"routeNames"],[112,32,204,18],[113,10,205,8,"routes"],[113,16,205,14],[113,18,205,8,"routes"],[113,24,205,14],[114,10,206,8,"index"],[114,15,206,13],[114,17,206,15,"Math"],[114,21,206,19],[114,22,206,20,"min"],[114,25,206,23],[114,26,206,24,"state"],[114,31,206,29],[114,32,206,30,"index"],[114,37,206,35],[114,39,206,37,"routes"],[114,45,206,43],[114,46,206,44,"length"],[114,52,206,50],[114,55,206,53],[114,56,206,54],[115,8,206,55],[116,6,208,4],[116,7,208,5],[117,6,210,4,"getStateForRouteFocus"],[117,27,210,25],[117,60,210,26,"state"],[117,65,210,31],[117,67,210,33,"key"],[117,70,210,36],[117,72,210,38],[118,8,211,6],[118,12,211,12,"index"],[118,17,211,17],[118,20,211,20,"state"],[118,25,211,25],[118,26,211,26,"routes"],[118,32,211,32],[118,33,211,33,"findIndex"],[118,42,211,42],[118,43,211,43],[118,53,211,44,"r"],[118,54,211,45],[119,10,211,45],[119,17,211,50,"r"],[119,18,211,51],[119,19,211,52,"key"],[119,22,211,55],[119,27,211,60,"key"],[119,30,211,63],[120,8,211,63],[120,10,211,64],[121,8,213,6],[121,12,213,10,"index"],[121,17,213,15],[121,22,213,20],[121,23,213,21],[121,24,213,22],[121,28,213,26,"index"],[121,33,213,31],[121,38,213,36,"state"],[121,43,213,41],[121,44,213,42,"index"],[121,49,213,47],[121,51,213,49],[122,10,214,8],[122,17,214,15,"state"],[122,22,214,20],[123,8,215,6],[124,8,217,6],[124,33,218,11,"state"],[124,38,218,16],[125,10,219,8,"index"],[125,15,219,13],[125,17,219,8,"index"],[125,22,219,13],[126,10,220,8,"routes"],[126,16,220,14],[126,18,220,16,"state"],[126,23,220,21],[126,24,220,22,"routes"],[126,30,220,28],[126,31,220,29,"slice"],[126,36,220,34],[126,37,220,35],[126,38,220,36],[126,40,220,38,"index"],[126,45,220,43],[126,48,220,46],[126,49,220,47],[127,8,220,48],[128,6,222,4],[128,7,222,5],[129,6,224,4,"getStateForAction"],[129,23,224,21],[129,52,224,22,"state"],[129,57,224,27],[129,59,224,29,"action"],[129,65,224,35],[129,67,224,37,"options"],[129,74,224,44],[129,76,224,46],[130,8,225,6],[130,12,225,14,"routeParamList"],[130,26,225,28],[130,29,225,33,"options"],[130,36,225,40],[130,37,225,14,"routeParamList"],[130,51,225,28],[131,8,227,6],[131,16,227,14,"action"],[131,22,227,20],[131,23,227,21,"type"],[131,27,227,25],[132,10,228,8],[132,15,228,13],[132,24,228,22],[133,12,228,24],[134,14,229,10],[134,18,229,16,"index"],[134,23,229,21],[134,26,230,12,"action"],[134,32,230,18],[134,33,230,19,"target"],[134,39,230,25],[134,44,230,30,"state"],[134,49,230,35],[134,50,230,36,"key"],[134,53,230,39],[134,57,230,43,"action"],[134,63,230,49],[134,64,230,50,"source"],[134,70,230,56],[134,73,231,16,"state"],[134,78,231,21],[134,79,231,22,"routes"],[134,85,231,28],[134,86,231,29,"findIndex"],[134,95,231,38],[134,96,231,39],[134,106,231,40,"r"],[134,107,231,41],[135,16,231,41],[135,23,231,46,"r"],[135,24,231,47],[135,25,231,48,"key"],[135,28,231,51],[135,33,231,56,"action"],[135,39,231,62],[135,40,231,63,"source"],[135,46,231,69],[136,14,231,69],[136,16,231,70],[136,19,232,16,"state"],[136,24,232,21],[136,25,232,22,"index"],[136,30,232,27],[137,14,234,10],[137,18,234,14,"index"],[137,23,234,19],[137,28,234,24],[137,29,234,25],[137,30,234,26],[137,32,234,28],[138,16,235,12],[138,23,235,19],[138,27,235,23],[139,14,236,10],[140,14,238,10],[140,36,238,40,"action"],[140,42,238,46],[140,43,238,47,"payload"],[140,50,238,54],[141,16,238,18,"name"],[141,20,238,22],[141,39,238,18,"name"],[141,43,238,22],[142,16,238,24,"key"],[142,19,238,27],[142,38,238,24,"key"],[142,41,238,27],[143,16,238,29,"params"],[143,23,238,35],[143,42,238,29,"params"],[143,48,238,35],[144,14,240,10],[144,18,240,14],[144,19,240,15,"state"],[144,24,240,20],[144,25,240,21,"routeNames"],[144,35,240,31],[144,36,240,32,"includes"],[144,44,240,40],[144,45,240,41,"name"],[144,49,240,45],[144,50,240,46],[144,52,240,48],[145,16,241,12],[145,23,241,19],[145,27,241,23],[146,14,242,10],[147,14,244,10],[147,39,245,15,"state"],[147,44,245,20],[148,16,246,12,"routes"],[148,22,246,18],[148,24,246,20,"state"],[148,29,246,25],[148,30,246,26,"routes"],[148,36,246,32],[148,37,246,33,"map"],[148,40,246,36],[148,41,246,37],[148,51,246,38,"route"],[148,56,246,43],[148,58,246,45,"i"],[148,59,246,46],[149,18,246,46],[149,25,247,14,"i"],[149,26,247,15],[149,31,247,20,"index"],[149,36,247,25],[149,39,248,18],[150,20,249,20,"key"],[150,23,249,23],[150,25,249,25,"key"],[150,28,249,28],[150,33,249,33,"undefined"],[150,42,249,42],[150,45,249,45,"key"],[150,48,249,48],[150,51,249,52],[150,54,249,54,"name"],[150,58,249,59],[150,62,249,62],[150,66,249,62,"nanoid"],[150,124,249,68],[150,127,249,71],[150,129,249,72],[151,20,250,20,"name"],[151,24,250,24],[151,26,250,20,"name"],[151,30,250,24],[152,20,251,20,"params"],[152,26,251,26],[152,28,252,22,"routeParamList"],[152,42,252,36],[152,43,252,37,"name"],[152,47,252,41],[152,48,252,42],[152,53,252,47,"undefined"],[152,62,252,56],[152,83,254,31,"routeParamList"],[152,97,254,45],[152,98,254,46,"name"],[152,102,254,50],[152,103,254,51],[152,105,255,31,"params"],[152,112,255,37],[152,116,257,26,"params"],[153,18,258,18],[153,19,258,19],[153,22,259,18,"route"],[153,27,259,23],[154,16,259,23],[155,14,260,13],[156,12,262,8],[157,10,264,8],[157,15,264,13],[157,21,264,19],[158,12,265,10],[158,16,265,14,"state"],[158,21,265,19],[158,22,265,20,"routeNames"],[158,32,265,30],[158,33,265,31,"includes"],[158,41,265,39],[158,42,265,40,"action"],[158,48,265,46],[158,49,265,47,"payload"],[158,56,265,54],[158,57,265,55,"name"],[158,61,265,59],[158,62,265,60],[158,64,265,62],[159,14,266,12],[159,18,266,18,"getId"],[159,23,266,23],[159,26,266,26,"options"],[159,33,266,33],[159,34,266,34,"routeGetIdList"],[159,48,266,48],[159,49,266,49,"action"],[159,55,266,55],[159,56,266,56,"payload"],[159,63,266,63],[159,64,266,64,"name"],[159,68,266,68],[159,69,266,69],[160,14,267,12],[160,18,267,18,"id"],[160,20,267,20],[160,23,267,23,"getId"],[160,28,267,28],[160,48,267,23,"getId"],[160,53,267,28],[160,54,267,31],[161,16,267,33,"params"],[161,22,267,39],[161,24,267,41,"action"],[161,30,267,47],[161,31,267,48,"payload"],[161,38,267,55],[161,39,267,56,"params"],[162,14,267,63],[162,15,267,64],[162,16,267,65],[163,14,269,12],[163,18,269,18,"route"],[163,23,269,23],[163,26,269,26,"id"],[163,28,269,28],[163,31,270,16,"state"],[163,36,270,21],[163,37,270,22,"routes"],[163,43,270,28],[163,44,270,29,"find"],[163,48,270,33],[163,49,271,18],[163,59,271,19,"route"],[163,64,271,24],[164,16,271,24],[164,23,272,20,"route"],[164,28,272,25],[164,29,272,26,"name"],[164,33,272,30],[164,38,272,35,"action"],[164,44,272,41],[164,45,272,42,"payload"],[164,52,272,49],[164,53,272,50,"name"],[164,57,272,54],[164,61,273,20,"id"],[164,63,273,22],[164,69,273,27,"getId"],[164,74,273,32],[164,94,273,27,"getId"],[164,99,273,32],[164,100,273,35],[165,18,273,37,"params"],[165,24,273,43],[165,26,273,45,"route"],[165,31,273,50],[165,32,273,51,"params"],[166,16,273,58],[166,17,273,59],[166,18,273,60],[167,14,273,60],[167,16,274,17],[167,19,275,16,"undefined"],[167,28,275,25],[168,14,277,12],[168,18,277,16,"routes"],[168,24,277,39],[169,14,279,12],[169,18,279,16,"route"],[169,23,279,21],[169,25,279,23],[170,16,280,14,"routes"],[170,22,280,20],[170,25,280,23,"state"],[170,30,280,28],[170,31,280,29,"routes"],[170,37,280,35],[170,38,280,36,"filter"],[170,44,280,42],[170,45,280,43],[170,55,280,44,"r"],[170,56,280,45],[171,18,280,45],[171,25,280,50,"r"],[171,26,280,51],[171,27,280,52,"key"],[171,30,280,55],[171,35,280,60,"route"],[171,40,280,65],[171,41,280,66,"key"],[171,44,280,69],[172,16,280,69],[172,18,280,70],[173,16,281,14,"routes"],[173,22,281,20],[173,23,281,21,"push"],[173,27,281,25],[173,46,282,19,"route"],[173,51,282,24],[174,18,283,16,"params"],[174,24,283,22],[174,26,284,18,"routeParamList"],[174,40,284,32],[174,41,284,33,"action"],[174,47,284,39],[174,48,284,40,"payload"],[174,55,284,47],[174,56,284,48,"name"],[174,60,284,52],[174,61,284,53],[174,66,284,58,"undefined"],[174,75,284,67],[174,96,286,27,"routeParamList"],[174,110,286,41],[174,111,286,42,"action"],[174,117,286,48],[174,118,286,49,"payload"],[174,125,286,56],[174,126,286,57,"name"],[174,130,286,61],[174,131,286,62],[174,133,287,27,"action"],[174,139,287,33],[174,140,287,34,"payload"],[174,147,287,41],[174,148,287,42,"params"],[174,154,287,48],[174,158,289,22,"action"],[174,164,289,28],[174,165,289,29,"payload"],[174,172,289,36],[174,173,289,37,"params"],[175,16,289,43],[175,19,290,16],[176,14,291,12],[176,15,291,13],[176,21,291,19],[177,16,292,14,"routes"],[177,22,292,20],[177,68,293,19,"state"],[177,73,293,24],[177,74,293,25,"routes"],[177,80,293,31],[177,84,294,16],[178,18,295,18,"key"],[178,21,295,21],[178,23,295,24],[178,26,295,26,"action"],[178,32,295,32],[178,33,295,33,"payload"],[178,40,295,40],[178,41,295,41,"name"],[178,45,295,46],[178,49,295,49],[178,53,295,49,"nanoid"],[178,111,295,55],[178,114,295,58],[178,116,295,59],[179,18,296,18,"name"],[179,22,296,22],[179,24,296,24,"action"],[179,30,296,30],[179,31,296,31,"payload"],[179,38,296,38],[179,39,296,39,"name"],[179,43,296,43],[180,18,297,18,"params"],[180,24,297,24],[180,26,298,20,"routeParamList"],[180,40,298,34],[180,41,298,35,"action"],[180,47,298,41],[180,48,298,42,"payload"],[180,55,298,49],[180,56,298,50,"name"],[180,60,298,54],[180,61,298,55],[180,66,298,60,"undefined"],[180,75,298,69],[180,96,300,29,"routeParamList"],[180,110,300,43],[180,111,300,44,"action"],[180,117,300,50],[180,118,300,51,"payload"],[180,125,300,58],[180,126,300,59,"name"],[180,130,300,63],[180,131,300,64],[180,133,301,29,"action"],[180,139,301,35],[180,140,301,36,"payload"],[180,147,301,43],[180,148,301,44,"params"],[180,154,301,50],[180,158,303,24,"action"],[180,164,303,30],[180,165,303,31,"payload"],[180,172,303,38],[180,173,303,39,"params"],[181,16,304,16],[181,17,304,17],[181,19,305,15],[182,14,306,12],[183,14,308,12],[183,39,309,17,"state"],[183,44,309,22],[184,16,310,14,"index"],[184,21,310,19],[184,23,310,21,"routes"],[184,29,310,27],[184,30,310,28,"length"],[184,36,310,34],[184,39,310,37],[184,40,310,38],[185,16,311,14,"routes"],[185,22,311,20],[185,24,311,14,"routes"],[186,14,311,20],[187,12,313,10],[188,12,315,10],[188,19,315,17],[188,23,315,21],[189,10,317,8],[189,15,317,13],[189,20,317,18],[190,12,317,20],[191,14,318,10],[191,18,318,16,"index"],[191,24,318,21],[191,27,319,12,"action"],[191,33,319,18],[191,34,319,19,"target"],[191,40,319,25],[191,45,319,30,"state"],[191,50,319,35],[191,51,319,36,"key"],[191,54,319,39],[191,58,319,43,"action"],[191,64,319,49],[191,65,319,50,"source"],[191,71,319,56],[191,74,320,16,"state"],[191,79,320,21],[191,80,320,22,"routes"],[191,86,320,28],[191,87,320,29,"findIndex"],[191,96,320,38],[191,97,320,39],[191,107,320,40,"r"],[191,108,320,41],[192,16,320,41],[192,23,320,46,"r"],[192,24,320,47],[192,25,320,48,"key"],[192,28,320,51],[192,33,320,56,"action"],[192,39,320,62],[192,40,320,63,"source"],[192,46,320,69],[193,14,320,69],[193,16,320,70],[193,19,321,16,"state"],[193,24,321,21],[193,25,321,22,"index"],[193,30,321,27],[194,14,323,10],[194,18,323,14,"index"],[194,24,323,19],[194,27,323,22],[194,28,323,23],[194,30,323,25],[195,16,324,12],[195,20,324,18,"count"],[195,26,324,23],[195,29,324,26,"Math"],[195,33,324,30],[195,34,324,31,"max"],[195,37,324,34],[195,38,324,35,"index"],[195,44,324,40],[195,47,324,43,"action"],[195,53,324,49],[195,54,324,50,"payload"],[195,61,324,57],[195,62,324,58,"count"],[195,67,324,63],[195,70,324,66],[195,71,324,67],[195,73,324,69],[195,74,324,70],[195,75,324,71],[196,16,325,12],[196,20,325,18,"routes"],[196,27,325,24],[196,30,325,27,"state"],[196,35,325,32],[196,36,325,33,"routes"],[196,42,325,39],[196,43,326,15,"slice"],[196,48,326,20],[196,49,326,21],[196,50,326,22],[196,52,326,24,"count"],[196,58,326,29],[196,59,326,30],[196,60,327,15,"concat"],[196,66,327,21],[196,67,327,22,"state"],[196,72,327,27],[196,73,327,28,"routes"],[196,79,327,34],[196,80,327,35,"slice"],[196,85,327,40],[196,86,327,41,"index"],[196,92,327,46],[196,95,327,49],[196,96,327,50],[196,97,327,51],[196,98,327,52],[197,16,329,12],[197,41,330,17,"state"],[197,46,330,22],[198,18,331,14,"index"],[198,23,331,19],[198,25,331,21,"routes"],[198,32,331,27],[198,33,331,28,"length"],[198,39,331,34],[198,42,331,37],[198,43,331,38],[199,18,332,14,"routes"],[199,24,332,20],[199,26,332,14,"routes"],[200,16,332,20],[201,14,334,10],[202,14,336,10],[202,21,336,17],[202,25,336,21],[203,12,337,8],[204,10,339,8],[204,15,339,13],[204,27,339,25],[205,12,340,10],[205,19,340,17,"router"],[205,25,340,23],[205,26,340,24,"getStateForAction"],[205,43,340,41],[205,44,341,12,"state"],[205,49,341,17],[205,51,342,12],[206,14,343,14,"type"],[206,18,343,18],[206,20,343,20],[206,25,343,25],[207,14,344,14,"payload"],[207,21,344,21],[207,23,344,23],[208,16,344,25,"count"],[208,21,344,30],[208,23,344,32,"state"],[208,28,344,37],[208,29,344,38,"routes"],[208,35,344,44],[208,36,344,45,"length"],[208,42,344,51],[208,45,344,54],[209,14,344,56],[210,12,345,12],[210,13,345,13],[210,15,346,12,"options"],[210,22,346,19],[210,23,347,11],[211,10,349,8],[211,15,349,13],[211,25,349,23],[212,12,350,10],[212,16,351,12,"action"],[212,22,351,18],[212,23,351,19,"payload"],[212,30,351,26],[212,31,351,27,"name"],[212,35,351,31],[212,40,351,36,"undefined"],[212,49,351,45],[212,53,352,12],[212,54,352,13,"state"],[212,59,352,18],[212,60,352,19,"routeNames"],[212,70,352,29],[212,71,352,30,"includes"],[212,79,352,38],[212,80,352,39,"action"],[212,86,352,45],[212,87,352,46,"payload"],[212,94,352,53],[212,95,352,54,"name"],[212,99,352,58],[212,100,352,59],[212,102,353,12],[213,14,354,12],[213,21,354,19],[213,25,354,23],[214,12,355,10],[215,12,357,10],[215,16,357,14,"action"],[215,22,357,20],[215,23,357,21,"payload"],[215,30,357,28],[215,31,357,29,"key"],[215,34,357,32],[215,38,357,36,"action"],[215,44,357,42],[215,45,357,43,"payload"],[215,52,357,50],[215,53,357,51,"name"],[215,57,357,55],[215,59,357,57],[216,14,357,57],[217,14,359,12],[217,18,359,16,"index"],[217,25,359,21],[217,28,359,24],[217,29,359,25],[217,30,359,26],[218,14,361,12],[218,18,361,18,"getId"],[218,24,361,23],[218,27,363,14,"action"],[218,33,363,20],[218,34,363,21,"payload"],[218,41,363,28],[218,42,363,29,"key"],[218,45,363,32],[218,50,363,37,"undefined"],[218,59,363,46],[218,63,364,14,"action"],[218,69,364,20],[218,70,364,21,"payload"],[218,77,364,28],[218,78,364,29,"name"],[218,82,364,33],[218,87,364,38,"undefined"],[218,96,364,47],[218,99,365,18,"options"],[218,106,365,25],[218,107,365,26,"routeGetIdList"],[218,121,365,40],[218,122,365,41,"action"],[218,128,365,47],[218,129,365,48,"payload"],[218,136,365,55],[218,137,365,56,"name"],[218,141,365,60],[218,142,365,61],[218,145,366,18,"undefined"],[218,154,366,27],[219,14,367,12],[219,18,367,18,"id"],[219,21,367,20],[219,24,367,23,"getId"],[219,30,367,28],[219,50,367,23,"getId"],[219,56,367,28],[219,57,367,31],[220,16,367,33,"params"],[220,22,367,39],[220,24,367,41,"action"],[220,30,367,47],[220,31,367,48,"payload"],[220,38,367,55],[220,39,367,56,"params"],[221,14,367,63],[221,15,367,64],[221,16,367,65],[222,14,369,12],[222,18,369,16,"id"],[222,21,369,18],[222,23,369,20],[223,16,370,14,"index"],[223,23,370,19],[223,26,370,22,"state"],[223,31,370,27],[223,32,370,28,"routes"],[223,38,370,34],[223,39,370,35,"findIndex"],[223,48,370,44],[223,49,371,16],[223,59,371,17,"route"],[223,64,371,22],[224,18,371,22],[224,25,372,18,"route"],[224,30,372,23],[224,31,372,24,"name"],[224,35,372,28],[224,40,372,33,"action"],[224,46,372,39],[224,47,372,40,"payload"],[224,54,372,47],[224,55,372,48,"name"],[224,59,372,52],[224,63,373,18,"id"],[224,66,373,20],[224,72,373,25,"getId"],[224,78,373,30],[224,98,373,25,"getId"],[224,104,373,30],[224,105,373,33],[225,20,373,35,"params"],[225,26,373,41],[225,28,373,43,"route"],[225,33,373,48],[225,34,373,49,"params"],[226,18,373,56],[226,19,373,57],[226,20,373,58],[227,16,373,58],[227,18,374,15],[228,14,375,12],[228,15,375,13],[228,21,375,19],[228,25,376,15,"state"],[228,30,376,20],[228,31,376,21,"routes"],[228,37,376,27],[228,38,376,28,"state"],[228,43,376,33],[228,44,376,34,"index"],[228,49,376,39],[228,50,376,40],[228,51,376,41,"name"],[228,55,376,45],[228,60,376,50,"action"],[228,66,376,56],[228,67,376,57,"payload"],[228,74,376,64],[228,75,376,65,"name"],[228,79,376,69],[228,83,377,16,"action"],[228,89,377,22],[228,90,377,23,"payload"],[228,97,377,30],[228,98,377,31,"key"],[228,101,377,34],[228,106,377,39,"undefined"],[228,115,377,48],[228,119,378,14,"state"],[228,124,378,19],[228,125,378,20,"routes"],[228,131,378,26],[228,132,378,27,"state"],[228,137,378,32],[228,138,378,33,"index"],[228,143,378,38],[228,144,378,39],[228,145,378,40,"key"],[228,148,378,43],[228,153,378,48,"action"],[228,159,378,54],[228,160,378,55,"payload"],[228,167,378,62],[228,168,378,63,"key"],[228,171,378,66],[228,173,379,14],[229,16,380,14,"index"],[229,23,380,19],[229,26,380,22,"state"],[229,31,380,27],[229,32,380,28,"index"],[229,37,380,33],[230,14,381,12],[230,15,381,13],[230,21,381,19],[231,16,382,14],[231,21,382,19],[231,25,382,23,"i"],[231,26,382,24],[231,29,382,27,"state"],[231,34,382,32],[231,35,382,33,"routes"],[231,41,382,39],[231,42,382,40,"length"],[231,48,382,46],[231,51,382,49],[231,52,382,50],[231,54,382,52,"i"],[231,55,382,53],[231,59,382,57],[231,60,382,58],[231,62,382,60,"i"],[231,63,382,61],[231,65,382,63],[231,67,382,65],[232,18,383,16],[232,22,384,19,"state"],[232,27,384,24],[232,28,384,25,"routes"],[232,34,384,31],[232,35,384,32,"i"],[232,36,384,33],[232,37,384,34],[232,38,384,35,"name"],[232,42,384,39],[232,47,384,44,"action"],[232,53,384,50],[232,54,384,51,"payload"],[232,61,384,58],[232,62,384,59,"name"],[232,66,384,63],[232,70,385,20,"action"],[232,76,385,26],[232,77,385,27,"payload"],[232,84,385,34],[232,85,385,35,"key"],[232,88,385,38],[232,93,385,43,"undefined"],[232,102,385,52],[232,106,386,18,"state"],[232,111,386,23],[232,112,386,24,"routes"],[232,118,386,30],[232,119,386,31,"i"],[232,120,386,32],[232,121,386,33],[232,122,386,34,"key"],[232,125,386,37],[232,130,386,42,"action"],[232,136,386,48],[232,137,386,49,"payload"],[232,144,386,56],[232,145,386,57,"key"],[232,148,386,60],[232,150,387,18],[233,20,388,18,"index"],[233,27,388,23],[233,30,388,26,"i"],[233,31,388,27],[234,20,389,18],[235,18,390,16],[236,16,391,14],[237,14,392,12],[238,14,394,12],[238,18,395,14,"index"],[238,25,395,19],[238,30,395,24],[238,31,395,25],[238,32,395,26],[238,36,396,14,"action"],[238,42,396,20],[238,43,396,21,"payload"],[238,50,396,28],[238,51,396,29,"key"],[238,54,396,32],[238,58,397,14,"action"],[238,64,397,20],[238,65,397,21,"payload"],[238,72,397,28],[238,73,397,29,"name"],[238,77,397,33],[238,82,397,38,"undefined"],[238,91,397,47],[238,93,398,14],[239,16,399,14],[239,23,399,21],[239,27,399,25],[240,14,400,12],[241,14,402,12],[241,18,402,16,"index"],[241,25,402,21],[241,30,402,26],[241,31,402,27],[241,32,402,28],[241,36,402,32,"action"],[241,42,402,38],[241,43,402,39,"payload"],[241,50,402,46],[241,51,402,47,"name"],[241,55,402,51],[241,60,402,56,"undefined"],[241,69,402,65],[241,71,402,67],[242,16,402,67],[243,16,403,14],[243,20,403,20,"routes"],[243,28,403,26],[243,74,404,19,"state"],[243,79,404,24],[243,80,404,25,"routes"],[243,86,404,31],[243,90,405,16],[244,18,406,18,"key"],[244,21,406,21],[244,46,407,20,"action"],[244,52,407,26],[244,53,407,27,"payload"],[244,60,407,34],[244,61,407,35,"key"],[244,64,407,38],[244,98,407,43],[244,101,407,45,"action"],[244,107,407,51],[244,108,407,52,"payload"],[244,115,407,59],[244,116,407,60,"name"],[244,120,407,65],[244,124,407,68],[244,128,407,68,"nanoid"],[244,186,407,74],[244,189,407,77],[244,191,407,78],[245,18,408,18,"name"],[245,22,408,22],[245,24,408,24,"action"],[245,30,408,30],[245,31,408,31,"payload"],[245,38,408,38],[245,39,408,39,"name"],[245,43,408,43],[246,18,409,18,"path"],[246,22,409,22],[246,24,409,24,"action"],[246,30,409,30],[246,31,409,31,"payload"],[246,38,409,38],[246,39,409,39,"path"],[246,43,409,43],[247,18,410,18,"params"],[247,24,410,24],[247,26,411,20,"routeParamList"],[247,40,411,34],[247,41,411,35,"action"],[247,47,411,41],[247,48,411,42,"payload"],[247,55,411,49],[247,56,411,50,"name"],[247,60,411,54],[247,61,411,55],[247,66,411,60,"undefined"],[247,75,411,69],[247,96,413,29,"routeParamList"],[247,110,413,43],[247,111,413,44,"action"],[247,117,413,50],[247,118,413,51,"payload"],[247,125,413,58],[247,126,413,59,"name"],[247,130,413,63],[247,131,413,64],[247,133,414,29,"action"],[247,139,414,35],[247,140,414,36,"payload"],[247,147,414,43],[247,148,414,44,"params"],[247,154,414,50],[247,158,416,24,"action"],[247,164,416,30],[247,165,416,31,"payload"],[247,172,416,38],[247,173,416,39,"params"],[248,16,417,16],[248,17,417,17],[248,19,418,15],[249,16,420,14],[249,41,421,19,"state"],[249,46,421,24],[250,18,422,16,"routes"],[250,24,422,22],[250,26,422,16,"routes"],[250,34,422,22],[251,18,423,16,"index"],[251,23,423,21],[251,25,423,23,"routes"],[251,33,423,29],[251,34,423,30,"length"],[251,40,423,36],[251,43,423,39],[252,16,423,40],[253,14,425,12],[254,14,427,12],[254,18,427,18,"route"],[254,24,427,23],[254,27,427,26,"state"],[254,32,427,31],[254,33,427,32,"routes"],[254,39,427,38],[254,40,427,39,"index"],[254,47,427,44],[254,48,427,45],[255,14,429,12],[255,18,429,16,"params"],[255,26,429,22],[256,14,431,12],[256,18,431,16,"action"],[256,24,431,22],[256,25,431,23,"payload"],[256,32,431,30],[256,33,431,31,"merge"],[256,38,431,36],[256,40,431,38],[257,16,432,14,"params"],[257,24,432,20],[257,27,433,16,"action"],[257,33,433,22],[257,34,433,23,"payload"],[257,41,433,30],[257,42,433,31,"params"],[257,48,433,37],[257,53,433,42,"undefined"],[257,62,433,51],[257,66,434,16,"routeParamList"],[257,80,434,30],[257,81,434,31,"route"],[257,87,434,36],[257,88,434,37,"name"],[257,92,434,41],[257,93,434,42],[257,98,434,47,"undefined"],[257,107,434,56],[257,128,436,25,"routeParamList"],[257,142,436,39],[257,143,436,40,"route"],[257,149,436,45],[257,150,436,46,"name"],[257,154,436,50],[257,155,436,51],[257,157,437,25,"route"],[257,163,437,30],[257,164,437,31,"params"],[257,170,437,37],[257,172,438,25,"action"],[257,178,438,31],[257,179,438,32,"payload"],[257,186,438,39],[257,187,438,40,"params"],[257,193,438,46],[257,197,440,20,"route"],[257,203,440,25],[257,204,440,26,"params"],[257,210,440,32],[258,14,441,12],[258,15,441,13],[258,21,441,19],[259,16,442,14,"params"],[259,24,442,20],[259,27,443,16,"routeParamList"],[259,41,443,30],[259,42,443,31,"route"],[259,48,443,36],[259,49,443,37,"name"],[259,53,443,41],[259,54,443,42],[259,59,443,47,"undefined"],[259,68,443,56],[259,89,445,25,"routeParamList"],[259,103,445,39],[259,104,445,40,"route"],[259,110,445,45],[259,111,445,46,"name"],[259,115,445,50],[259,116,445,51],[259,118,446,25,"action"],[259,124,446,31],[259,125,446,32,"payload"],[259,132,446,39],[259,133,446,40,"params"],[259,139,446,46],[259,143,448,20,"action"],[259,149,448,26],[259,150,448,27,"payload"],[259,157,448,34],[259,158,448,35,"params"],[259,164,448,41],[260,14,449,12],[261,14,451,12],[261,39,452,17,"state"],[261,44,452,22],[262,16,453,14,"index"],[262,21,453,19],[262,23,453,14,"index"],[262,30,453,19],[263,16,454,14,"routes"],[263,22,454,20],[263,67,455,19,"state"],[263,72,455,24],[263,73,455,25,"routes"],[263,79,455,31],[263,80,455,32,"slice"],[263,85,455,37],[263,86,455,38],[263,87,455,39],[263,89,455,41,"index"],[263,96,455,46],[263,97,455,47],[263,101,456,16,"params"],[263,109,456,22],[263,114,456,27,"route"],[263,120,456,32],[263,121,456,33,"params"],[263,127,456,39],[263,131,457,17,"action"],[263,137,457,23],[263,138,457,24,"payload"],[263,145,457,31],[263,146,457,32,"path"],[263,150,457,36],[263,154,457,40,"action"],[263,160,457,46],[263,161,457,47,"payload"],[263,168,457,54],[263,169,457,55,"path"],[263,173,457,59],[263,178,457,64,"route"],[263,184,457,69],[263,185,457,70,"path"],[263,189,457,75],[263,210,459,25,"route"],[263,216,459,30],[264,18,460,22,"path"],[264,22,460,26],[264,48,460,28,"action"],[264,54,460,34],[264,55,460,35,"payload"],[264,62,460,42],[264,63,460,43,"path"],[264,67,460,47],[264,102,460,51,"route"],[264,108,460,56],[264,109,460,57,"path"],[264,113,460,61],[265,18,461,22,"params"],[265,24,461,28],[265,26,461,22,"params"],[266,16,461,28],[266,21,463,20,"state"],[266,26,463,25],[266,27,463,26,"routes"],[266,33,463,32],[266,34,463,33,"index"],[266,41,463,38],[266,42,463,39],[267,14,464,15],[268,12,466,10],[269,12,468,10],[269,19,468,17],[269,23,468,21],[270,10,470,8],[270,15,470,13],[270,24,470,22],[271,12,471,10],[271,16,471,14,"state"],[271,21,471,19],[271,22,471,20,"index"],[271,27,471,25],[271,30,471,28],[271,31,471,29],[271,33,471,31],[272,14,472,12],[272,21,472,19,"router"],[272,27,472,25],[272,28,472,26,"getStateForAction"],[272,45,472,43],[272,46,473,14,"state"],[272,51,473,19],[272,53,474,14],[273,16,475,16,"type"],[273,20,475,20],[273,22,475,22],[273,27,475,27],[274,16,476,16,"payload"],[274,23,476,23],[274,25,476,25],[275,18,476,27,"count"],[275,23,476,32],[275,25,476,34],[276,16,476,36],[276,17,476,37],[277,16,477,16,"target"],[277,22,477,22],[277,24,477,24,"action"],[277,30,477,30],[277,31,477,31,"target"],[277,37,477,37],[278,16,478,16,"source"],[278,22,478,22],[278,24,478,24,"action"],[278,30,478,30],[278,31,478,31,"source"],[279,14,479,14],[279,15,479,15],[279,17,480,14,"options"],[279,24,480,21],[279,25,481,13],[280,12,482,10],[281,12,484,10],[281,19,484,17],[281,23,484,21],[282,10,486,8],[283,12,487,10],[283,19,487,17,"BaseRouter"],[283,38,487,27],[283,39,487,28,"getStateForAction"],[283,56,487,45],[283,57,487,46,"state"],[283,62,487,51],[283,64,487,53,"action"],[283,70,487,59],[283,71,487,60],[284,8,487,61],[285,6,489,4],[285,7,489,5],[286,6,491,4,"actionCreators"],[286,20,491,18],[286,22,491,20,"StackActions"],[287,4,491,32],[287,6,492,3],[288,4,494,2],[288,11,494,9,"router"],[288,17,494,15],[289,2,495,0],[290,0,495,1]],"functionMap":{"names":["<global>","StackActions.replace","StackActions.push","StackActions.pop","StackActions.popToTop","StackRouter","router.getInitialState","router.getRehydratedState","state.routes.filter$argument_0","state.routes.filter.map$argument_0","router.getStateForRouteNamesChange","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","state.routes.find$argument_0"],"mappings":"AAA;ECoF;GDE;EEC;GFE;EGC;GHE;EIC;GJE;eKG;ICS;KDqB;IEE;gBCQ,0CD;UEE;+BFW;KFwB;IKE;QFK;+CEE;KLuB;IME;2CCC,oBD;KNW;IQE;uCDO,8BC;qCCe;uBDa;kBEY;4DFE;2CLO,0BK;uCDwC,8BC;gBDmD;0DCE;KRoH;CLM"}},"type":"js/module"}]}