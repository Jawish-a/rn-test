{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":68},"end":{"line":2,"column":31,"index":99}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"@react-navigation/native","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":30,"index":288},"end":{"line":9,"column":53,"index":311},"identifierName":"usePreventRemoveContext"}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useInvalidPreventRemoveError;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function useInvalidPreventRemoveError(descriptors) {\n    var _preventedDescriptor$, _preventedDescriptor$2;\n    var _usePreventRemoveCont = (0, _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/native\").usePreventRemoveContext)(),\n      preventedRoutes = _usePreventRemoveCont.preventedRoutes;\n    var preventedRouteKey = Object.keys(preventedRoutes)[0];\n    var preventedDescriptor = descriptors[preventedRouteKey];\n    var isHeaderBackButtonMenuEnabledOnPreventedScreen = preventedDescriptor == null ? void 0 : (_preventedDescriptor$ = preventedDescriptor.options) == null ? void 0 : _preventedDescriptor$.headerBackButtonMenuEnabled;\n    var preventedRouteName = preventedDescriptor == null ? void 0 : (_preventedDescriptor$2 = preventedDescriptor.route) == null ? void 0 : _preventedDescriptor$2.name;\n    React.useEffect(function () {\n      if (preventedRouteKey != null && isHeaderBackButtonMenuEnabledOnPreventedScreen) {\n        var message = `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` + `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n        console.error(message);\n      }\n    }, [preventedRouteKey, isHeaderBackButtonMenuEnabledOnPreventedScreen, preventedRouteName]);\n  }\n});","lineCount":24,"map":[[6,2,2,0],[7,2,2,31],[8,2,2,31],[9,2,6,15],[9,11,6,24,"useInvalidPreventRemoveError"],[9,39,6,52],[9,40,7,2,"descriptors"],[9,51,7,39],[9,53,8,2],[10,4,8,2],[11,4,9,2],[11,32,9,30],[11,36,9,30,"usePreventRemoveContext"],[11,118,9,53],[11,121,9,55],[12,6,9,10,"preventedRoutes"],[12,21,9,25],[12,46,9,10,"preventedRoutes"],[12,61,9,25],[13,4,10,2],[13,8,10,8,"preventedRouteKey"],[13,25,10,25],[13,28,10,28,"Object"],[13,34,10,34],[13,35,10,35,"keys"],[13,39,10,39],[13,40,10,40,"preventedRoutes"],[13,55,10,55],[13,56,10,56],[13,57,10,57],[13,58,10,58],[13,59,10,59],[14,4,11,2],[14,8,11,8,"preventedDescriptor"],[14,27,11,27],[14,30,11,30,"descriptors"],[14,41,11,41],[14,42,11,42,"preventedRouteKey"],[14,59,11,59],[14,60,11,60],[15,4,12,2],[15,8,12,8,"isHeaderBackButtonMenuEnabledOnPreventedScreen"],[15,54,12,54],[15,57,13,4,"preventedDescriptor"],[15,76,13,23],[15,121,13,4,"preventedDescriptor"],[15,140,13,23],[15,141,13,25,"options"],[15,148,13,32],[15,169,13,4],[15,191,13,34,"headerBackButtonMenuEnabled"],[15,218,13,61],[16,4,14,2],[16,8,14,8,"preventedRouteName"],[16,26,14,26],[16,29,14,29,"preventedDescriptor"],[16,48,14,48],[16,94,14,29,"preventedDescriptor"],[16,113,14,48],[16,114,14,50,"route"],[16,119,14,55],[16,140,14,29],[16,163,14,57,"name"],[16,167,14,61],[17,4,16,2,"React"],[17,9,16,7],[17,10,16,8,"useEffect"],[17,19,16,17],[17,20,16,18],[17,32,16,24],[18,6,17,4],[18,10,18,6,"preventedRouteKey"],[18,27,18,23],[18,31,18,27],[18,35,18,31],[18,39,19,6,"isHeaderBackButtonMenuEnabledOnPreventedScreen"],[18,85,19,52],[18,87,20,6],[19,8,21,6],[19,12,21,12,"message"],[19,19,21,19],[19,22,22,9],[19,36,22,22,"preventedRouteName"],[19,54,22,41],[19,161,22,147],[19,164,23,9],[19,226,23,70,"preventedRouteName"],[19,244,23,89],[19,279,23,123],[20,8,24,6,"console"],[20,15,24,13],[20,16,24,14,"error"],[20,21,24,19],[20,22,24,20,"message"],[20,29,24,27],[20,30,24,28],[21,6,25,4],[22,4,26,2],[22,5,26,3],[22,7,26,5],[22,8,27,4,"preventedRouteKey"],[22,25,27,21],[22,27,28,4,"isHeaderBackButtonMenuEnabledOnPreventedScreen"],[22,73,28,50],[22,75,29,4,"preventedRouteName"],[22,93,29,22],[22,94,30,3],[22,95,30,4],[23,2,31,0],[24,0,31,1]],"functionMap":{"names":["<global>","useInvalidPreventRemoveError","React.useEffect$argument_0"],"mappings":"AAA;eCK;kBCU;GDU;CDK"}},"type":"js/module"}]}