{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}},{"start":{"line":11,"column":0,"index":307},"end":{"line":11,"column":66,"index":373}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":802,"column":0,"index":25289}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":59,"index":59}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../../RNGestureHandlerModule","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":307},"end":{"line":11,"column":66,"index":373}}],"key":"cQ1FEvJIdZaKuqEXjeTxV5XMxro="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":0,"index":1440},"end":{"line":41,"column":40,"index":1480}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"../gestureHandlerCommon","data":{"asyncType":null,"locs":[{"start":{"line":52,"column":5,"index":1899},"end":{"line":52,"column":39,"index":1933},"identifierName":"baseGestureHandlerWithMonitorProps"},{"start":{"line":96,"column":2,"index":3221},"end":{"line":96,"column":25,"index":3244},"identifierName":"scheduleFlushOperations"},{"start":{"line":164,"column":6,"index":5361},"end":{"line":164,"column":18,"index":5373},"identifierName":"filterConfig"},{"start":{"line":191,"column":8,"index":6165},"end":{"line":191,"column":20,"index":6177},"identifierName":"filterConfig"},{"start":{"line":198,"column":4,"index":6326},"end":{"line":198,"column":27,"index":6349},"identifierName":"scheduleFlushOperations"},{"start":{"line":280,"column":8,"index":8783},"end":{"line":280,"column":20,"index":8795},"identifierName":"filterConfig"},{"start":{"line":320,"column":4,"index":10209},"end":{"line":320,"column":27,"index":10232},"identifierName":"scheduleFlushOperations"},{"start":{"line":657,"column":20,"index":20796},"end":{"line":657,"column":34,"index":20810},"identifierName":"findNodeHandle"},{"start":{"line":702,"column":20,"index":22214},"end":{"line":702,"column":34,"index":22228},"identifierName":"findNodeHandle"},{"start":{"line":738,"column":32,"index":23090},"end":{"line":738,"column":46,"index":23104},"identifierName":"findNodeHandle"}],"key":"Oni8OzKiQDNve3W974lYeI30FTo="}},{"name":"../TapGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":5,"index":1940},"end":{"line":53,"column":27,"index":1962},"identifierName":"tapGestureHandlerProps"}],"key":"0mfJmAXDhNQTHbYPT83kOSuQ0gM="}},{"name":"../PanGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":54,"column":5,"index":1969},"end":{"line":54,"column":27,"index":1991},"identifierName":"panGestureHandlerProps"},{"start":{"line":55,"column":5,"index":1998},"end":{"line":55,"column":39,"index":2032},"identifierName":"panGestureHandlerCustomNativeProps"}],"key":"nflFEht0O75d4g/uT7V6SEcZ6Jg="}},{"name":"../LongPressGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":56,"column":5,"index":2039},"end":{"line":56,"column":33,"index":2067},"identifierName":"longPressGestureHandlerProps"}],"key":"13tTt7wpzpOrDojUJvZUpUbM3tw="}},{"name":"../ForceTouchGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":57,"column":5,"index":2074},"end":{"line":57,"column":34,"index":2103},"identifierName":"forceTouchGestureHandlerProps"}],"key":"6CDL2Zy26UiwUaSSy4kxMb/aQbc="}},{"name":"../FlingGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":58,"column":5,"index":2110},"end":{"line":58,"column":29,"index":2134},"identifierName":"flingGestureHandlerProps"}],"key":"pAvFwOnqezREmdx3GI06VnQZW4o="}},{"name":"./gesture","data":{"asyncType":null,"locs":[{"start":{"line":74,"column":28,"index":2531},"end":{"line":74,"column":39,"index":2542},"identifierName":"BaseGesture"},{"start":{"line":365,"column":9,"index":11301},"end":{"line":365,"column":22,"index":11314},"identifierName":"CALLBACK_TYPE"},{"start":{"line":367,"column":9,"index":11361},"end":{"line":367,"column":22,"index":11374},"identifierName":"CALLBACK_TYPE"},{"start":{"line":369,"column":9,"index":11421},"end":{"line":369,"column":22,"index":11434},"identifierName":"CALLBACK_TYPE"},{"start":{"line":371,"column":9,"index":11483},"end":{"line":371,"column":22,"index":11496},"identifierName":"CALLBACK_TYPE"},{"start":{"line":373,"column":9,"index":11545},"end":{"line":373,"column":22,"index":11558},"identifierName":"CALLBACK_TYPE"},{"start":{"line":375,"column":9,"index":11601},"end":{"line":375,"column":22,"index":11614},"identifierName":"CALLBACK_TYPE"},{"start":{"line":377,"column":9,"index":11667},"end":{"line":377,"column":22,"index":11680},"identifierName":"CALLBACK_TYPE"},{"start":{"line":379,"column":9,"index":11740},"end":{"line":379,"column":22,"index":11753},"identifierName":"CALLBACK_TYPE"},{"start":{"line":381,"column":9,"index":11813},"end":{"line":381,"column":22,"index":11826},"identifierName":"CALLBACK_TYPE"},{"start":{"line":383,"column":9,"index":11882},"end":{"line":383,"column":22,"index":11895},"identifierName":"CALLBACK_TYPE"},{"start":{"line":21,"column":9,"index":704},"end":{"line":21,"column":22,"index":717},"identifierName":"CALLBACK_TYPE"},{"start":{"line":394,"column":13,"index":12136},"end":{"line":394,"column":26,"index":12149},"identifierName":"CALLBACK_TYPE"},{"start":{"line":396,"column":13,"index":12215},"end":{"line":396,"column":26,"index":12228},"identifierName":"CALLBACK_TYPE"},{"start":{"line":398,"column":13,"index":12292},"end":{"line":398,"column":26,"index":12305},"identifierName":"CALLBACK_TYPE"},{"start":{"line":400,"column":13,"index":12374},"end":{"line":400,"column":26,"index":12387},"identifierName":"CALLBACK_TYPE"},{"start":{"line":402,"column":9,"index":12420},"end":{"line":402,"column":22,"index":12433},"identifierName":"CALLBACK_TYPE"},{"start":{"line":12,"column":9,"index":441},"end":{"line":12,"column":22,"index":454},"identifierName":"CALLBACK_TYPE"},{"start":{"line":464,"column":23,"index":14294},"end":{"line":464,"column":36,"index":14307},"identifierName":"CALLBACK_TYPE"},{"start":{"line":470,"column":23,"index":14535},"end":{"line":470,"column":36,"index":14548},"identifierName":"CALLBACK_TYPE"},{"start":{"line":477,"column":25,"index":14836},"end":{"line":477,"column":38,"index":14849},"identifierName":"CALLBACK_TYPE"},{"start":{"line":479,"column":23,"index":14915},"end":{"line":479,"column":36,"index":14928},"identifierName":"CALLBACK_TYPE"},{"start":{"line":485,"column":25,"index":15198},"end":{"line":485,"column":38,"index":15211},"identifierName":"CALLBACK_TYPE"},{"start":{"line":487,"column":23,"index":15278},"end":{"line":487,"column":36,"index":15291},"identifierName":"CALLBACK_TYPE"},{"start":{"line":503,"column":21,"index":15804},"end":{"line":503,"column":34,"index":15817},"identifierName":"CALLBACK_TYPE"},{"start":{"line":507,"column":14,"index":15949},"end":{"line":507,"column":27,"index":15962},"identifierName":"CALLBACK_TYPE"},{"start":{"line":36,"column":21,"index":1863},"end":{"line":36,"column":34,"index":1876},"identifierName":"CALLBACK_TYPE"}],"key":"rijS9WvIw33qqKul2343YfpqKYE="}},{"name":"../handlersRegistry","data":{"asyncType":null,"locs":[{"start":{"line":93,"column":4,"index":3152},"end":{"line":93,"column":21,"index":3169},"identifierName":"unregisterHandler"},{"start":{"line":167,"column":4,"index":5417},"end":{"line":167,"column":19,"index":5432},"identifierName":"registerHandler"},{"start":{"line":286,"column":6,"index":8940},"end":{"line":286,"column":21,"index":8955},"identifierName":"registerHandler"}],"key":"P7bU7bdxHe/ouNqbCEYPugbwpjo="}},{"name":"../../utils","data":{"asyncType":null,"locs":[{"start":{"line":113,"column":6,"index":3899},"end":{"line":113,"column":16,"index":3909},"identifierName":"tagMessage"},{"start":{"line":418,"column":17,"index":12903},"end":{"line":418,"column":27,"index":12913},"identifierName":"tagMessage"},{"start":{"line":8,"column":17,"index":433},"end":{"line":8,"column":27,"index":443},"identifierName":"tagMessage"},{"start":{"line":559,"column":6,"index":17420},"end":{"line":559,"column":26,"index":17440},"identifierName":"REACT_NATIVE_VERSION"},{"start":{"line":559,"column":41,"index":17455},"end":{"line":559,"column":61,"index":17475},"identifierName":"REACT_NATIVE_VERSION"},{"start":{"line":649,"column":6,"index":20510},"end":{"line":649,"column":16,"index":20520},"identifierName":"tagMessage"},{"start":{"line":745,"column":10,"index":23390},"end":{"line":745,"column":18,"index":23398},"identifierName":"isFabric"},{"start":{"line":749,"column":12,"index":23550},"end":{"line":749,"column":22,"index":23560},"identifierName":"tagMessage"},{"start":{"line":793,"column":8,"index":24982},"end":{"line":793,"column":18,"index":24992},"identifierName":"tagMessage"}],"key":"dxL+BeUilKexbwMi0xaswBTAv3A="}},{"name":"../../ActionType","data":{"asyncType":null,"locs":[{"start":{"line":205,"column":8,"index":6506},"end":{"line":205,"column":18,"index":6516},"identifierName":"ActionType"},{"start":{"line":206,"column":8,"index":6544},"end":{"line":206,"column":18,"index":6554},"identifierName":"ActionType"},{"start":{"line":214,"column":8,"index":6789},"end":{"line":214,"column":18,"index":6799},"identifierName":"ActionType"}],"key":"fqg5Hqn3A1pytxyl6Vo2Wlwd/RY="}},{"name":"../../TouchEventType","data":{"asyncType":null,"locs":[{"start":{"line":393,"column":9,"index":12094},"end":{"line":393,"column":23,"index":12108},"identifierName":"TouchEventType"},{"start":{"line":395,"column":9,"index":12173},"end":{"line":395,"column":23,"index":12187},"identifierName":"TouchEventType"},{"start":{"line":397,"column":9,"index":12252},"end":{"line":397,"column":23,"index":12266},"identifierName":"TouchEventType"},{"start":{"line":399,"column":9,"index":12327},"end":{"line":399,"column":23,"index":12341},"identifierName":"TouchEventType"},{"start":{"line":9,"column":9,"index":348},"end":{"line":9,"column":23,"index":362},"identifierName":"TouchEventType"},{"start":{"line":494,"column":34,"index":15545},"end":{"line":494,"column":48,"index":15559},"identifierName":"TouchEventType"},{"start":{"line":30,"column":32,"index":1557},"end":{"line":30,"column":46,"index":1571},"identifierName":"TouchEventType"}],"key":"0COGSn1p4nINQM1Yy2Op/ci6ldU="}},{"name":"./reanimatedWrapper","data":{"asyncType":null,"locs":[{"start":{"line":426,"column":7,"index":13077},"end":{"line":426,"column":17,"index":13087},"identifierName":"Reanimated"},{"start":{"line":433,"column":34,"index":13349},"end":{"line":433,"column":44,"index":13359},"identifierName":"Reanimated"},{"start":{"line":438,"column":26,"index":13526},"end":{"line":438,"column":36,"index":13536},"identifierName":"Reanimated"},{"start":{"line":523,"column":16,"index":16332},"end":{"line":523,"column":26,"index":16342},"identifierName":"Reanimated"},{"start":{"line":801,"column":21,"index":25229},"end":{"line":801,"column":31,"index":25239},"identifierName":"Reanimated"},{"start":{"line":801,"column":21,"index":25229},"end":{"line":801,"column":31,"index":25239},"identifierName":"Reanimated"}],"key":"sqcAyO3CLffQYDEYJ5rMOhnZiK0="}},{"name":"../../State","data":{"asyncType":null,"locs":[{"start":{"line":461,"column":31,"index":14195},"end":{"line":461,"column":36,"index":14200},"identifierName":"State"},{"start":{"line":462,"column":28,"index":14245},"end":{"line":462,"column":33,"index":14250},"identifierName":"State"},{"start":{"line":466,"column":32,"index":14386},"end":{"line":466,"column":37,"index":14391},"identifierName":"State"},{"start":{"line":467,"column":33,"index":14434},"end":{"line":467,"column":38,"index":14439},"identifierName":"State"},{"start":{"line":468,"column":28,"index":14485},"end":{"line":468,"column":33,"index":14490},"identifierName":"State"},{"start":{"line":474,"column":28,"index":14736},"end":{"line":474,"column":33,"index":14741},"identifierName":"State"},{"start":{"line":476,"column":35,"index":14795},"end":{"line":476,"column":40,"index":14800},"identifierName":"State"},{"start":{"line":481,"column":29,"index":15013},"end":{"line":481,"column":34,"index":15018},"identifierName":"State"},{"start":{"line":481,"column":61,"index":15045},"end":{"line":481,"column":66,"index":15050},"identifierName":"State"},{"start":{"line":484,"column":35,"index":15157},"end":{"line":484,"column":40,"index":15162},"identifierName":"State"},{"start":{"line":21,"column":33,"index":1188},"end":{"line":21,"column":38,"index":1193},"identifierName":"State"}],"key":"RZfP8U6FoJi8Aycd62dM5Z1WP/M="}},{"name":"./gestureStateManager","data":{"asyncType":null,"locs":[{"start":{"line":491,"column":34,"index":15452},"end":{"line":491,"column":53,"index":15471},"identifierName":"GestureStateManager"},{"start":{"line":28,"column":32,"index":1469},"end":{"line":28,"column":51,"index":1488},"identifierName":"GestureStateManager"}],"key":"QKGCWBDeML1GTON70DcQJaEzAc4="}},{"name":"../../RNRenderer","data":{"asyncType":null,"locs":[{"start":{"line":566,"column":6,"index":17834},"end":{"line":566,"column":16,"index":17844},"identifierName":"RNRenderer"}],"key":"s7TNegHNlixQDokH4Me+weqaoX8="}},{"name":"./eventReceiver","data":{"asyncType":null,"locs":[{"start":{"line":625,"column":6,"index":19812},"end":{"line":625,"column":27,"index":19833},"identifierName":"onGestureHandlerEvent"},{"start":{"line":629,"column":10,"index":19992},"end":{"line":629,"column":31,"index":20013},"identifierName":"onGestureHandlerEvent"}],"key":"Hr6bAsy1YOYmfxDSknP8bOIbreA="}},{"name":"../../EnableExperimentalWebImplementation","data":{"asyncType":null,"locs":[{"start":{"line":627,"column":33,"index":19890},"end":{"line":627,"column":71,"index":19928},"identifierName":"isExperimentalWebImplementationEnabled"}],"key":"6Qt0fRf/398yQOiNLxe817+1oVQ="}},{"name":"../../getShadowNodeFromRef","data":{"asyncType":null,"locs":[{"start":{"line":746,"column":21,"index":23425},"end":{"line":746,"column":41,"index":23445},"identifierName":"getShadowNodeFromRef"}],"key":"sdukAUHCFHelEI7ya2JiHqMxpX8="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":761,"column":6,"index":23865},"end":{"line":765,"column":21,"index":24021}},{"start":{"line":768,"column":11,"index":24051},"end":{"line":768,"column":58,"index":24098}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureDetector = void 0;\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/slicedToArray\"));\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n  var _RNGestureHandlerModule = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[9], \"../../RNGestureHandlerModule\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n  var _Reanimated$default$c, _Reanimated$default;\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n  var ALLOWED_PROPS = [].concat((0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").baseGestureHandlerWithMonitorProps), (0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[12], \"../TapGestureHandler\").tapGestureHandlerProps), (0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[13], \"../PanGestureHandler\").panGestureHandlerProps), (0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[13], \"../PanGestureHandler\").panGestureHandlerCustomNativeProps), (0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[14], \"../LongPressGestureHandler\").longPressGestureHandlerProps), (0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[15], \"../ForceTouchGestureHandler\").forceTouchGestureHandlerProps), (0, _toConsumableArray2.default)(_$$_REQUIRE(_dependencyMap[16], \"../FlingGestureHandler\").flingGestureHandlerProps));\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _$$_REQUIRE(_dependencyMap[17], \"./gesture\").BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      var _ref$current$handlerT, _ref$current;\n      return (_ref$current$handlerT = (_ref$current = ref.current) == null ? void 0 : _ref$current.handlerTag) != null ? _ref$current$handlerT : -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    var _interactionGroup$map, _interactionGroup$map2;\n    return (_interactionGroup$map = interactionGroup == null ? void 0 : (_interactionGroup$map2 = interactionGroup.map(convertToHandlerTag)) == null ? void 0 : _interactionGroup$map2.filter(function (tag) {\n      return tag > 0;\n    })) != null ? _interactionGroup$map : [];\n  }\n  function dropHandlers(preparedGesture) {\n    for (var handler of preparedGesture.config) {\n      _RNGestureHandlerModule.default.dropGestureHandler(handler.handlerTag);\n      (0, _$$_REQUIRE(_dependencyMap[18], \"../handlersRegistry\").unregisterHandler)(handler.handlerTag, handler.config.testId);\n    }\n    (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").scheduleFlushOperations)();\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    var areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    var areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _$$_REQUIRE(_dependencyMap[19], \"../../utils\").tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n  }\n  function attachHandlers(_ref) {\n    var preparedGesture = _ref.preparedGesture,\n      gestureConfig = _ref.gestureConfig,\n      gesture = _ref.gesture,\n      viewTag = _ref.viewTag,\n      webEventHandlersRef = _ref.webEventHandlersRef,\n      mountedRef = _ref.mountedRef;\n    if (!preparedGesture.firstExecution) {\n      gestureConfig.initialize();\n    } else {\n      preparedGesture.firstExecution = false;\n    }\n    setImmediate(function () {\n      if (!mountedRef.current) {\n        return;\n      }\n      gestureConfig.prepare();\n    });\n    for (var handler of gesture) {\n      checkGestureCallbacksForWorklets(handler);\n      _RNGestureHandlerModule.default.createGestureHandler(handler.handlerName, handler.handlerTag, (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").filterConfig)(handler.config, ALLOWED_PROPS));\n      (0, _$$_REQUIRE(_dependencyMap[18], \"../handlersRegistry\").registerHandler)(handler.handlerTag, handler, handler.config.testId);\n    }\n    setImmediate(function () {\n      if (!mountedRef.current) {\n        return;\n      }\n      for (var _handler of gesture) {\n        var requireToFail = [];\n        if (_handler.config.requireToFail) {\n          requireToFail = extractValidHandlerTags(_handler.config.requireToFail);\n        }\n        var simultaneousWith = [];\n        if (_handler.config.simultaneousWith) {\n          simultaneousWith = extractValidHandlerTags(_handler.config.simultaneousWith);\n        }\n        _RNGestureHandlerModule.default.updateGestureHandler(_handler.handlerTag, (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").filterConfig)(_handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail\n        }));\n      }\n      (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").scheduleFlushOperations)();\n    });\n    preparedGesture.config = gesture;\n    for (var _gesture of preparedGesture.config) {\n      var actionType = _gesture.shouldUseReanimated ? _$$_REQUIRE(_dependencyMap[20], \"../../ActionType\").ActionType.REANIMATED_WORKLET : _$$_REQUIRE(_dependencyMap[20], \"../../ActionType\").ActionType.JS_FUNCTION_NEW_API;\n      if (_reactNative.Platform.OS === 'web') {\n        _RNGestureHandlerModule.default.attachGestureHandler(_gesture.handlerTag, viewTag, _$$_REQUIRE(_dependencyMap[20], \"../../ActionType\").ActionType.JS_FUNCTION_OLD_API, webEventHandlersRef);\n      } else {\n        _RNGestureHandlerModule.default.attachGestureHandler(_gesture.handlerTag, viewTag, actionType);\n      }\n    }\n    if (preparedGesture.animatedHandlers) {\n      var isAnimatedGesture = function isAnimatedGesture(g) {\n        return g.shouldUseReanimated;\n      };\n      preparedGesture.animatedHandlers.value = gesture.filter(isAnimatedGesture).map(function (g) {\n        return g.handlers;\n      });\n    }\n  }\n  function updateHandlers(preparedGesture, gestureConfig, gesture, mountedRef) {\n    gestureConfig.prepare();\n    for (var i = 0; i < gesture.length; i++) {\n      var handler = preparedGesture.config[i];\n      checkGestureCallbacksForWorklets(handler);\n      if (gesture[i].handlerTag !== handler.handlerTag) {\n        gesture[i].handlerTag = handler.handlerTag;\n        gesture[i].handlers.handlerTag = handler.handlerTag;\n      }\n    }\n    setImmediate(function () {\n      if (!mountedRef.current) {\n        return;\n      }\n      for (var _i = 0; _i < gesture.length; _i++) {\n        var _handler2 = preparedGesture.config[_i];\n        _handler2.config = gesture[_i].config;\n        _handler2.handlers = gesture[_i].handlers;\n        var requireToFail = extractValidHandlerTags(_handler2.config.requireToFail);\n        var simultaneousWith = extractValidHandlerTags(_handler2.config.simultaneousWith);\n        _RNGestureHandlerModule.default.updateGestureHandler(_handler2.handlerTag, (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").filterConfig)(_handler2.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail\n        }));\n        (0, _$$_REQUIRE(_dependencyMap[18], \"../handlersRegistry\").registerHandler)(_handler2.handlerTag, _handler2, _handler2.config.testId);\n      }\n      if (preparedGesture.animatedHandlers) {\n        var _preparedGesture$anim;\n        var previousHandlersValue = (_preparedGesture$anim = preparedGesture.animatedHandlers.value) != null ? _preparedGesture$anim : [];\n        var newHandlersValue = preparedGesture.config.filter(function (g) {\n          return g.shouldUseReanimated;\n        }).map(function (g) {\n          return g.handlers;\n        });\n        var shouldUpdateSharedValue = previousHandlersValue.length !== newHandlersValue.length;\n        if (!shouldUpdateSharedValue) {\n          for (var _i2 = 0; _i2 < newHandlersValue.length; _i2++) {\n            if (newHandlersValue[_i2].gestureId !== previousHandlersValue[_i2].gestureId) {\n              shouldUpdateSharedValue = true;\n              break;\n            }\n          }\n        }\n        if (shouldUpdateSharedValue) {\n          preparedGesture.animatedHandlers.value = newHandlersValue;\n        }\n      }\n      (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").scheduleFlushOperations)();\n    });\n  }\n  function needsToReattach(preparedGesture, gesture) {\n    if (gesture.length !== preparedGesture.config.length) {\n      return true;\n    }\n    for (var i = 0; i < gesture.length; i++) {\n      if (gesture[i].handlerName !== preparedGesture.config[i].handlerName || gesture[i].shouldUseReanimated !== preparedGesture.config[i].shouldUseReanimated) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var _worklet_6011490867213_init_data = {\n    code: \"function isStateChangeEvent(event) {\\n  return event.oldState != null;\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAuVA,2BAASA,CACPC,OACD;EAGC,OAAOA,KAAK,CAACC,QAAQ,IAAI,IAAI;AAC/B\\\",\\\"names\\\":[\\\"isStateChangeEvent\\\",\\\"event\\\",\\\"oldState\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"]}\"\n  };\n  var isStateChangeEvent = function () {\n    var _e = [new Error(), 1, -20];\n    var _f = function _f(event) {\n      return event.oldState != null;\n    };\n    _f._closure = {};\n    _f.__initData = _worklet_6011490867213_init_data;\n    _f.__workletHash = 6011490867213;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_10181097307677_init_data = {\n    code: \"function isTouchEvent(event) {\\n  return event.eventType != null;\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA+VA,qBAASA,CACPC,OACD;EAEC,OAAOA,KAAK,CAACC,SAAS,IAAI,IAAI;AAChC\\\",\\\"names\\\":[\\\"isTouchEvent\\\",\\\"event\\\",\\\"eventType\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"]}\"\n  };\n  var isTouchEvent = function () {\n    var _e = [new Error(), 1, -20];\n    var _f = function _f(event) {\n      return event.eventType != null;\n    };\n    _f._closure = {};\n    _f.__initData = _worklet_10181097307677_init_data;\n    _f.__workletHash = 10181097307677;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_6740083841975_init_data = {\n    code: \"function getHandler(type, gesture) {\\n  const {\\n    CALLBACK_TYPE\\n  } = this._closure;\\n  switch (type) {\\n    case CALLBACK_TYPE.BEGAN:\\n      return gesture.onBegin;\\n    case CALLBACK_TYPE.START:\\n      return gesture.onStart;\\n    case CALLBACK_TYPE.UPDATE:\\n      return gesture.onUpdate;\\n    case CALLBACK_TYPE.CHANGE:\\n      return gesture.onChange;\\n    case CALLBACK_TYPE.END:\\n      return gesture.onEnd;\\n    case CALLBACK_TYPE.FINALIZE:\\n      return gesture.onFinalize;\\n    case CALLBACK_TYPE.TOUCHES_DOWN:\\n      return gesture.onTouchesDown;\\n    case CALLBACK_TYPE.TOUCHES_MOVE:\\n      return gesture.onTouchesMove;\\n    case CALLBACK_TYPE.TOUCHES_UP:\\n      return gesture.onTouchesUp;\\n    case CALLBACK_TYPE.TOUCHES_CANCELLED:\\n      return gesture.onTouchesCancelled;\\n  }\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAsWA,mBAASA,CACPC,MAAmBC,OACnBA,EAAkD;EAAA;IAAA;EAAA;EAGlD,QAAQD,IAAI;IACV,KAAKE,aAAa,CAACC,KAAK;MACtB,OAAOF,OAAO,CAACG,OAAO;IACxB,KAAKF,aAAa,CAACG,KAAK;MACtB,OAAOJ,OAAO,CAACK,OAAO;IACxB,KAAKJ,aAAa,CAACK,MAAM;MACvB,OAAON,OAAO,CAACO,QAAQ;IACzB,KAAKN,aAAa,CAACO,MAAM;MACvB,OAAOR,OAAO,CAACS,QAAQ;IACzB,KAAKR,aAAa,CAACS,GAAG;MACpB,OAAOV,OAAO,CAACW,KAAK;IACtB,KAAKV,aAAa,CAACW,QAAQ;MACzB,OAAOZ,OAAO,CAACa,UAAU;IAC3B,KAAKZ,aAAa,CAACa,YAAY;MAC7B,OAAOd,OAAO,CAACe,aAAa;IAC9B,KAAKd,aAAa,CAACe,YAAY;MAC7B,OAAOhB,OAAO,CAACiB,aAAa;IAC9B,KAAKhB,aAAa,CAACiB,UAAU;MAC3B,OAAOlB,OAAO,CAACmB,WAAW;IAC5B,KAAKlB,aAAa,CAACmB,iBAAiB;MAClC,OAAOpB,OAAO,CAACqB,kBAAkB;EAAA;AAEvC\\\",\\\"names\\\":[\\\"getHandler\\\",\\\"type\\\",\\\"gesture\\\",\\\"CALLBACK_TYPE\\\",\\\"BEGAN\\\",\\\"onBegin\\\",\\\"START\\\",\\\"onStart\\\",\\\"UPDATE\\\",\\\"onUpdate\\\",\\\"CHANGE\\\",\\\"onChange\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FINALIZE\\\",\\\"onFinalize\\\",\\\"TOUCHES_DOWN\\\",\\\"onTouchesDown\\\",\\\"TOUCHES_MOVE\\\",\\\"onTouchesMove\\\",\\\"TOUCHES_UP\\\",\\\"onTouchesUp\\\",\\\"TOUCHES_CANCELLED\\\",\\\"onTouchesCancelled\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"]}\"\n  };\n  var getHandler = function () {\n    var _e = [new Error(), -2, -20];\n    var _f = function _f(type, gesture) {\n      switch (type) {\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.BEGAN:\n          return gesture.onBegin;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.START:\n          return gesture.onStart;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.UPDATE:\n          return gesture.onUpdate;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.CHANGE:\n          return gesture.onChange;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.END:\n          return gesture.onEnd;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.FINALIZE:\n          return gesture.onFinalize;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_DOWN:\n          return gesture.onTouchesDown;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_MOVE:\n          return gesture.onTouchesMove;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_UP:\n          return gesture.onTouchesUp;\n        case _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_CANCELLED:\n          return gesture.onTouchesCancelled;\n      }\n    };\n    _f._closure = {\n      CALLBACK_TYPE: _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE\n    };\n    _f.__initData = _worklet_6740083841975_init_data;\n    _f.__workletHash = 6740083841975;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_14936855169047_init_data = {\n    code: \"function touchEventTypeToCallbackType(eventType) {\\n  const {\\n    TouchEventType,\\n    CALLBACK_TYPE\\n  } = this._closure;\\n  switch (eventType) {\\n    case TouchEventType.TOUCHES_DOWN:\\n      return CALLBACK_TYPE.TOUCHES_DOWN;\\n    case TouchEventType.TOUCHES_MOVE:\\n      return CALLBACK_TYPE.TOUCHES_MOVE;\\n    case TouchEventType.TOUCHES_UP:\\n      return CALLBACK_TYPE.TOUCHES_UP;\\n    case TouchEventType.TOUCHES_CANCELLED:\\n      return CALLBACK_TYPE.TOUCHES_CANCELLED;\\n  }\\n  return CALLBACK_TYPE.UNDEFINED;\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAmYA,qCAASA,CACPC,WACD;EAAA;IAAA;IAAA;EAAA;EAEC,QAAQA,SAAS;IACf,KAAKC,cAAc,CAACC,YAAY;MAC9B,OAAOC,aAAa,CAACD,YAAY;IACnC,KAAKD,cAAc,CAACG,YAAY;MAC9B,OAAOD,aAAa,CAACC,YAAY;IACnC,KAAKH,cAAc,CAACI,UAAU;MAC5B,OAAOF,aAAa,CAACE,UAAU;IACjC,KAAKJ,cAAc,CAACK,iBAAiB;MACnC,OAAOH,aAAa,CAACG,iBAAiB;EAAA;EAE1C,OAAOH,aAAa,CAACI,SAAS;AAChC\\\",\\\"names\\\":[\\\"touchEventTypeToCallbackType\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"TOUCHES_DOWN\\\",\\\"CALLBACK_TYPE\\\",\\\"TOUCHES_MOVE\\\",\\\"TOUCHES_UP\\\",\\\"TOUCHES_CANCELLED\\\",\\\"UNDEFINED\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"]}\"\n  };\n  var touchEventTypeToCallbackType = function () {\n    var _e = [new Error(), -3, -20];\n    var _f = function _f(eventType) {\n      switch (eventType) {\n        case _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType.TOUCHES_DOWN:\n          return _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_DOWN;\n        case _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType.TOUCHES_MOVE:\n          return _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_MOVE;\n        case _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType.TOUCHES_UP:\n          return _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_UP;\n        case _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType.TOUCHES_CANCELLED:\n          return _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.TOUCHES_CANCELLED;\n      }\n      return _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.UNDEFINED;\n    };\n    _f._closure = {\n      TouchEventType: _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType,\n      CALLBACK_TYPE: _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE\n    };\n    _f.__initData = _worklet_14936855169047_init_data;\n    _f.__workletHash = 14936855169047;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_13267337103250_init_data = {\n    code: \"function runWorklet(type, gesture, event, ...args) {\\n  const {\\n    getHandler,\\n    tagMessage\\n  } = this._closure;\\n  const handler = getHandler(type, gesture);\\n  if (gesture.isWorklet[type]) {\\n    handler === null || handler === void 0 ? void 0 : handler(event, ...args);\\n  } else if (handler) {\\n    console.warn(tagMessage('Animated gesture callback must be a worklet'));\\n  }\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAoZA,mBAASA,CACPC,MAAmBC,OACnBA,EAAkDC,KAClDA,EAAuE,GACvEC,IAAGA,EAAW;EAAA;IAAA;IAAA;EAAA;EAGd,MAAMC,OAAO,GAAGC,UAAU,CAACL,IAAI,EAAEC,OAAO,CAAC;EACzC,IAAIA,OAAO,CAACK,SAAS,CAACN,IAAI,CAAC,EAAE;IAG3BI,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGF,KAAK,EAAE,GAAGC,IAAI,CAAC;EAC3B,CAAC,MAAM,IAAIC,OAAO,EAAE;IAClBG,OAAO,CAACC,IAAI,CAACC,UAAU,CAAC,6CAA6C,CAAC,CAAC;EACzE;AACF\\\",\\\"names\\\":[\\\"runWorklet\\\",\\\"type\\\",\\\"gesture\\\",\\\"event\\\",\\\"args\\\",\\\"handler\\\",\\\"getHandler\\\",\\\"isWorklet\\\",\\\"console\\\",\\\"warn\\\",\\\"tagMessage\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"]}\"\n  };\n  var runWorklet = function () {\n    var _e = [new Error(), -3, -20];\n    var _f = function _f(type, gesture, event) {\n      var handler = getHandler(type, gesture);\n      if (gesture.isWorklet[type]) {\n        for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n          args[_key - 3] = arguments[_key];\n        }\n        handler == null ? void 0 : handler.apply(void 0, [event].concat(args));\n      } else if (handler) {\n        console.warn((0, _$$_REQUIRE(_dependencyMap[19], \"../../utils\").tagMessage)('Animated gesture callback must be a worklet'));\n      }\n    };\n    _f._closure = {\n      getHandler: getHandler,\n      tagMessage: _$$_REQUIRE(_dependencyMap[19], \"../../utils\").tagMessage\n    };\n    _f.__initData = _worklet_13267337103250_init_data;\n    _f.__workletHash = 13267337103250;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  var _worklet_13191719275980_init_data = {\n    code: \"function anonymous(event) {\\n  const {\\n    sharedHandlersCallbacks,\\n    isStateChangeEvent,\\n    State,\\n    runWorklet,\\n    CALLBACK_TYPE,\\n    lastUpdateEvent,\\n    isTouchEvent,\\n    stateControllers,\\n    GestureStateManager,\\n    TouchEventType,\\n    touchEventTypeToCallbackType\\n  } = this._closure;\\n  const currentCallback = sharedHandlersCallbacks.value;\\n  if (!currentCallback) {\\n    return;\\n  }\\n  for (let i = 0; i < currentCallback.length; i++) {\\n    const gesture = currentCallback[i];\\n    if (event.handlerTag === gesture.handlerTag) {\\n      if (isStateChangeEvent(event)) {\\n        if (event.oldState === State.UNDETERMINED && event.state === State.BEGAN) {\\n          runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\\n        } else if ((event.oldState === State.BEGAN || event.oldState === State.UNDETERMINED) && event.state === State.ACTIVE) {\\n          runWorklet(CALLBACK_TYPE.START, gesture, event);\\n          lastUpdateEvent.value[gesture.handlerTag] = undefined;\\n        } else if (event.oldState !== event.state && event.state === State.END) {\\n          if (event.oldState === State.ACTIVE) {\\n            runWorklet(CALLBACK_TYPE.END, gesture, event, true);\\n          }\\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\\n        } else if ((event.state === State.FAILED || event.state === State.CANCELLED) && event.state !== event.oldState) {\\n          if (event.oldState === State.ACTIVE) {\\n            runWorklet(CALLBACK_TYPE.END, gesture, event, false);\\n          }\\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\\n        }\\n      } else if (isTouchEvent(event)) {\\n        if (!stateControllers[i]) {\\n          stateControllers[i] = GestureStateManager.create(event.handlerTag);\\n        }\\n        if (event.eventType !== TouchEventType.UNDETERMINED) {\\n          runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\\n        }\\n      } else {\\n        runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\\n        if (gesture.onChange && gesture.changeEventCalculator) {\\n          var _gesture$changeEventC;\\n          runWorklet(CALLBACK_TYPE.CHANGE, gesture, (_gesture$changeEventC = gesture.changeEventCalculator) === null || _gesture$changeEventC === void 0 ? void 0 : _gesture$changeEventC.call(gesture, event, lastUpdateEvent.value[gesture.handlerTag]));\\n          lastUpdateEvent.value[gesture.handlerTag] = event;\\n        }\\n      }\\n    }\\n  }\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA4bmB,SACfA,SACG;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAGH,MAAMC,eAAe,GAAGC,uBAAuB,CAACC,KAAK;EACrD,IAAI,CAACF,eAAe,EAAE;IACpB;EACF;EAEA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,eAAe,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC/C,MAAME,OAAO,GAAGL,eAAe,CAACG,CAAC,CAAC;IAElC,IAAIJ,KAAK,CAACO,UAAU,KAAKD,OAAO,CAACC,UAAU,EAAE;MAC3C,IAAIC,kBAAkB,CAACR,KAAK,CAAC,EAAE;QAC7B,IACEA,KAAK,CAACS,QAAQ,KAAKC,KAAK,CAACC,YAAY,IACrCX,KAAK,CAACY,KAAK,KAAKF,KAAK,CAACG,KAAK,EAC3B;UACAC,UAAU,CAACC,aAAa,CAACF,KAAK,EAAEP,OAAO,EAAEN,KAAK,CAAC;QACjD,CAAC,MAAM,IACL,CAACA,KAAK,CAACS,QAAQ,KAAKC,KAAK,CAACG,KAAK,IAC7Bb,KAAK,CAACS,QAAQ,KAAKC,KAAK,CAACC,YAAY,KACvCX,KAAK,CAACY,KAAK,KAAKF,KAAK,CAACM,MAAM,EAC5B;UACAF,UAAU,CAACC,aAAa,CAACE,KAAK,EAAEX,OAAO,EAAEN,KAAK,CAAC;UAC/CkB,eAAe,CAACf,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,GAAGY,SAAS;QACvD,CAAC,MAAM,IACLnB,KAAK,CAACS,QAAQ,KAAKT,KAAK,CAACY,KAAK,IAC9BZ,KAAK,CAACY,KAAK,KAAKF,KAAK,CAACU,GAAG,EACzB;UACA,IAAIpB,KAAK,CAACS,QAAQ,KAAKC,KAAK,CAACM,MAAM,EAAE;YACnCF,UAAU,CAACC,aAAa,CAACK,GAAG,EAAEd,OAAO,EAAEN,KAAK,EAAE,IAAI,CAAC;UACrD;UACAc,UAAU,CAACC,aAAa,CAACM,QAAQ,EAAEf,OAAO,EAAEN,KAAK,EAAE,IAAI,CAAC;QAC1D,CAAC,MAAM,IACL,CAACA,KAAK,CAACY,KAAK,KAAKF,KAAK,CAACY,MAAM,IAAItB,KAAK,CAACY,KAAK,KAAKF,KAAK,CAACa,SAAS,KAChEvB,KAAK,CAACY,KAAK,KAAKZ,KAAK,CAACS,QAAQ,EAC9B;UACA,IAAIT,KAAK,CAACS,QAAQ,KAAKC,KAAK,CAACM,MAAM,EAAE;YACnCF,UAAU,CAACC,aAAa,CAACK,GAAG,EAAEd,OAAO,EAAEN,KAAK,EAAE,KAAK,CAAC;UACtD;UACAc,UAAU,CAACC,aAAa,CAACM,QAAQ,EAAEf,OAAO,EAAEN,KAAK,EAAE,KAAK,CAAC;QAC3D;MACF,CAAC,MAAM,IAAIwB,YAAY,CAACxB,KAAK,CAAC,EAAE;QAC9B,IAAI,CAACyB,gBAAgB,CAACrB,CAAC,CAAC,EAAE;UACxBqB,gBAAgB,CAACrB,CAAC,CAAC,GAAGsB,mBAAmB,CAACC,MAAM,CAAC3B,KAAK,CAACO,UAAU,CAAC;QACpE;QAEA,IAAIP,KAAK,CAAC4B,SAAS,KAAKC,cAAc,CAAClB,YAAY,EAAE;UACnDG,UAAU,CACRgB,4BAA4B,CAAC9B,KAAK,CAAC4B,SAAS,CAAC,EAC7CtB,OAAO,EACPN,KAAK,EACLyB,gBAAgB,CAACrB,CAAC,CAAC,CACpB;QACH;MACF,CAAC,MAAM;QACLU,UAAU,CAACC,aAAa,CAACgB,MAAM,EAAEzB,OAAO,EAAEN,KAAK,CAAC;QAEhD,IAAIM,OAAO,CAAC0B,QAAQ,IAAI1B,OAAO,CAAC2B,qBAAqB,EAAE;UAAA;UACrDnB,UAAU,CACRC,aAAa,CAACmB,MAAM,EACpB5B,OAAO,2BACPA,OAAO,CAAC2B,qBAAqB,0DAA7B3B,kCAAO,EACLN,KAAK,EACLkB,eAAe,CAACf,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAC1C,CACF;UAEDW,eAAe,CAACf,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,GAAGP,KAAK;QACnD;MACF;IACF;EACF;AACF\\\",\\\"names\\\":[\\\"event\\\",\\\"currentCallback\\\",\\\"sharedHandlersCallbacks\\\",\\\"value\\\",\\\"i\\\",\\\"length\\\",\\\"gesture\\\",\\\"handlerTag\\\",\\\"isStateChangeEvent\\\",\\\"oldState\\\",\\\"State\\\",\\\"UNDETERMINED\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"runWorklet\\\",\\\"CALLBACK_TYPE\\\",\\\"ACTIVE\\\",\\\"START\\\",\\\"lastUpdateEvent\\\",\\\"undefined\\\",\\\"END\\\",\\\"FINALIZE\\\",\\\"FAILED\\\",\\\"CANCELLED\\\",\\\"isTouchEvent\\\",\\\"stateControllers\\\",\\\"GestureStateManager\\\",\\\"create\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"touchEventTypeToCallbackType\\\",\\\"UPDATE\\\",\\\"onChange\\\",\\\"changeEventCalculator\\\",\\\"CHANGE\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"]}\"\n  };\n  function useAnimatedGesture(preparedGesture, needsRebuild) {\n    if (!_$$_REQUIRE(_dependencyMap[22], \"./reanimatedWrapper\").Reanimated) {\n      return;\n    }\n    var sharedHandlersCallbacks = _$$_REQUIRE(_dependencyMap[22], \"./reanimatedWrapper\").Reanimated.useSharedValue(null);\n    var lastUpdateEvent = _$$_REQUIRE(_dependencyMap[22], \"./reanimatedWrapper\").Reanimated.useSharedValue([]);\n    var stateControllers = [];\n    var callback = function () {\n      var _e = [new Error(), -12, -20];\n      var _f = function _f(event) {\n        var currentCallback = sharedHandlersCallbacks.value;\n        if (!currentCallback) {\n          return;\n        }\n        for (var i = 0; i < currentCallback.length; i++) {\n          var gesture = currentCallback[i];\n          if (event.handlerTag === gesture.handlerTag) {\n            if (isStateChangeEvent(event)) {\n              if (event.oldState === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.UNDETERMINED && event.state === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.BEGAN) {\n                runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.BEGAN, gesture, event);\n              } else if ((event.oldState === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.BEGAN || event.oldState === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.UNDETERMINED) && event.state === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.ACTIVE) {\n                runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.START, gesture, event);\n                lastUpdateEvent.value[gesture.handlerTag] = undefined;\n              } else if (event.oldState !== event.state && event.state === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.END) {\n                if (event.oldState === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.ACTIVE) {\n                  runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.END, gesture, event, true);\n                }\n                runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.FINALIZE, gesture, event, true);\n              } else if ((event.state === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.FAILED || event.state === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.CANCELLED) && event.state !== event.oldState) {\n                if (event.oldState === _$$_REQUIRE(_dependencyMap[23], \"../../State\").State.ACTIVE) {\n                  runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.END, gesture, event, false);\n                }\n                runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.FINALIZE, gesture, event, false);\n              }\n            } else if (isTouchEvent(event)) {\n              if (!stateControllers[i]) {\n                stateControllers[i] = _$$_REQUIRE(_dependencyMap[24], \"./gestureStateManager\").GestureStateManager.create(event.handlerTag);\n              }\n              if (event.eventType !== _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType.UNDETERMINED) {\n                runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n              }\n            } else {\n              runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.UPDATE, gesture, event);\n              if (gesture.onChange && gesture.changeEventCalculator) {\n                runWorklet(_$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE.CHANGE, gesture, gesture.changeEventCalculator == null ? void 0 : gesture.changeEventCalculator(event, lastUpdateEvent.value[gesture.handlerTag]));\n                lastUpdateEvent.value[gesture.handlerTag] = event;\n              }\n            }\n          }\n        }\n      };\n      _f._closure = {\n        sharedHandlersCallbacks: sharedHandlersCallbacks,\n        isStateChangeEvent: isStateChangeEvent,\n        State: _$$_REQUIRE(_dependencyMap[23], \"../../State\").State,\n        runWorklet: runWorklet,\n        CALLBACK_TYPE: _$$_REQUIRE(_dependencyMap[17], \"./gesture\").CALLBACK_TYPE,\n        lastUpdateEvent: lastUpdateEvent,\n        isTouchEvent: isTouchEvent,\n        stateControllers: stateControllers,\n        GestureStateManager: _$$_REQUIRE(_dependencyMap[24], \"./gestureStateManager\").GestureStateManager,\n        TouchEventType: _$$_REQUIRE(_dependencyMap[21], \"../../TouchEventType\").TouchEventType,\n        touchEventTypeToCallbackType: touchEventTypeToCallbackType\n      };\n      _f.__initData = _worklet_13191719275980_init_data;\n      _f.__workletHash = 13191719275980;\n      _f.__stackDetails = _e;\n      return _f;\n    }();\n    var event = _$$_REQUIRE(_dependencyMap[22], \"./reanimatedWrapper\").Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n    preparedGesture.animatedEventHandler = event;\n    preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n  }\n  function validateDetectorChildren(ref) {\n    if (__DEV__ && _reactNative.Platform.OS !== 'web') {\n      var wrapType = _$$_REQUIRE(_dependencyMap[19], \"../../utils\").REACT_NATIVE_VERSION.minor > 63 || _$$_REQUIRE(_dependencyMap[19], \"../../utils\").REACT_NATIVE_VERSION.major > 0 ? ref._reactInternals.elementType : ref._reactInternalFiber.elementType;\n      var instance = _$$_REQUIRE(_dependencyMap[25], \"../../RNRenderer\").RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n      while (instance && instance.elementType !== wrapType) {\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n        instance = instance.return;\n      }\n    }\n  }\n  var applyUserSelectProp = function applyUserSelectProp(userSelect, gesture) {\n    for (var g of gesture.toGestureArray()) {\n      g.config.userSelect = userSelect;\n    }\n  };\n  var GestureDetector = function GestureDetector(props) {\n    var gestureConfig = props.gesture;\n    if (props.userSelect) {\n      applyUserSelectProp(props.userSelect, gestureConfig);\n    }\n    var gesture = gestureConfig.toGestureArray();\n    var useReanimatedHook = gesture.some(function (g) {\n      return g.shouldUseReanimated;\n    });\n    var state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceReattach: false\n    }).current;\n    var mountedRef = (0, _react.useRef)(false);\n    var webEventHandlersRef = (0, _react.useRef)({\n      onGestureHandlerEvent: function onGestureHandlerEvent(e) {\n        (0, _$$_REQUIRE(_dependencyMap[26], \"./eventReceiver\").onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _$$_REQUIRE(_dependencyMap[27], \"../../EnableExperimentalWebImplementation\").isExperimentalWebImplementationEnabled)() ? function (e) {\n        (0, _$$_REQUIRE(_dependencyMap[26], \"./eventReceiver\").onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      renderState = _useState2[0],\n      setRenderState = _useState2[1];\n    function forceRender() {\n      setRenderState(!renderState);\n    }\n    var preparedGesture = _react.default.useRef({\n      config: gesture,\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      firstExecution: true,\n      useReanimatedHook: useReanimatedHook\n    }).current;\n    if (useReanimatedHook !== preparedGesture.useReanimatedHook) {\n      throw new Error((0, _$$_REQUIRE(_dependencyMap[19], \"../../utils\").tagMessage)('You cannot change the thread the callbacks are ran on while the app is running'));\n    }\n    function onHandlersUpdate(skipConfigUpdate) {\n      var viewTag = (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").findNodeHandle)(state.viewRef);\n      var forceReattach = viewTag !== state.previousViewTag;\n      if (forceReattach || needsToReattach(preparedGesture, gesture)) {\n        validateDetectorChildren(state.viewRef);\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture: preparedGesture,\n          gestureConfig: gestureConfig,\n          gesture: gesture,\n          webEventHandlersRef: webEventHandlersRef,\n          viewTag: viewTag,\n          mountedRef: mountedRef\n        });\n        state.previousViewTag = viewTag;\n        state.forceReattach = forceReattach;\n        if (forceReattach) {\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        updateHandlers(preparedGesture, gestureConfig, gesture, mountedRef);\n      }\n    }\n    var needsToRebuildReanimatedEvent = preparedGesture.firstExecution || needsToReattach(preparedGesture, gesture) || state.forceReattach;\n    state.forceReattach = false;\n    if (preparedGesture.firstExecution) {\n      gestureConfig.initialize();\n    }\n    if (useReanimatedHook) {\n      useAnimatedGesture(preparedGesture, needsToRebuildReanimatedEvent);\n    }\n    (0, _react.useEffect)(function () {\n      var viewTag = (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").findNodeHandle)(state.viewRef);\n      state.firstRender = true;\n      mountedRef.current = true;\n      validateDetectorChildren(state.viewRef);\n      attachHandlers({\n        preparedGesture: preparedGesture,\n        gestureConfig: gestureConfig,\n        gesture: gesture,\n        webEventHandlersRef: webEventHandlersRef,\n        viewTag: viewTag,\n        mountedRef: mountedRef\n      });\n      return function () {\n        mountedRef.current = false;\n        dropHandlers(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(function () {\n      if (!state.firstRender) {\n        onHandlersUpdate();\n      } else {\n        state.firstRender = false;\n      }\n    }, [props]);\n    var refFunction = function refFunction(ref) {\n      if (ref !== null) {\n        state.viewRef = ref;\n        if (state.previousViewTag === -1) {\n          state.previousViewTag = (0, _$$_REQUIRE(_dependencyMap[11], \"../gestureHandlerCommon\").findNodeHandle)(state.viewRef);\n        }\n        onHandlersUpdate(true);\n        if ((0, _$$_REQUIRE(_dependencyMap[19], \"../../utils\").isFabric)()) {\n          var _node = (0, _$$_REQUIRE(_dependencyMap[28], \"../../getShadowNodeFromRef\").getShadowNodeFromRef)(ref);\n          if (global.isFormsStackingContext(_node) === false) {\n            console.error((0, _$$_REQUIRE(_dependencyMap[19], \"../../utils\").tagMessage)('GestureDetector has received a child that may get view-flattened. ' + '\\nTo prevent it from misbehaving you need to wrap the child with a `<View collapsable={false}>`.'));\n          }\n        }\n      }\n    };\n    if (useReanimatedHook) {\n      return (0, _$$_REQUIRE(_dependencyMap[29], \"react/jsx-runtime\").jsx)(AnimatedWrap, {\n        ref: refFunction,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler,\n        children: props.children\n      });\n    } else {\n      return (0, _$$_REQUIRE(_dependencyMap[29], \"react/jsx-runtime\").jsx)(Wrap, {\n        ref: refFunction,\n        children: props.children\n      });\n    }\n  };\n  exports.GestureDetector = GestureDetector;\n  var Wrap = function (_React$Component) {\n    (0, _inherits2.default)(Wrap, _React$Component);\n    var _super = _createSuper(Wrap);\n    function Wrap() {\n      (0, _classCallCheck2.default)(this, Wrap);\n      return _super.apply(this, arguments);\n    }\n    (0, _createClass2.default)(Wrap, [{\n      key: \"render\",\n      value: function render() {\n        try {\n          var child = _react.default.Children.only(this.props.children);\n          return _react.default.cloneElement(child, {\n            collapsable: false\n          }, child.props.children);\n        } catch (e) {\n          throw new Error((0, _$$_REQUIRE(_dependencyMap[19], \"../../utils\").tagMessage)(`GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n      }\n    }]);\n    return Wrap;\n  }(_react.default.Component);\n  var AnimatedWrap = (_Reanimated$default$c = _$$_REQUIRE(_dependencyMap[22], \"./reanimatedWrapper\").Reanimated == null ? void 0 : (_Reanimated$default = _$$_REQUIRE(_dependencyMap[22], \"./reanimatedWrapper\").Reanimated.default) == null ? void 0 : _Reanimated$default.createAnimatedComponent(Wrap)) != null ? _Reanimated$default$c : Wrap;\n});","lineCount":548,"map":[[13,2,1,0],[14,2,11,0],[15,2,41,0],[16,2,41,40],[17,2,41,40],[18,2,41,40],[19,2,41,40],[20,2,41,40],[21,2,51,0],[21,6,51,6,"ALLOWED_PROPS"],[21,19,51,19],[21,65,52,5,"baseGestureHandlerWithMonitorProps"],[21,158,52,39],[21,194,53,5,"tapGestureHandlerProps"],[21,272,53,27],[21,308,54,5,"panGestureHandlerProps"],[21,386,54,27],[21,422,55,5,"panGestureHandlerCustomNativeProps"],[21,512,55,39],[21,548,56,5,"longPressGestureHandlerProps"],[21,638,56,33],[21,674,57,5,"forceTouchGestureHandlerProps"],[21,766,57,34],[21,802,58,5,"flingGestureHandlerProps"],[21,884,58,29],[21,886,59,1],[22,2,71,0],[22,11,71,9,"convertToHandlerTag"],[22,30,71,28],[22,31,71,29,"ref"],[22,34,71,44],[22,36,71,54],[23,4,72,2],[23,8,72,6],[23,15,72,13,"ref"],[23,18,72,16],[23,23,72,21],[23,31,72,29],[23,33,72,31],[24,6,73,4],[24,13,73,11,"ref"],[24,16,73,14],[25,4,74,2],[25,5,74,3],[25,11,74,9],[25,15,74,13,"ref"],[25,18,74,16],[25,30,74,28,"BaseGesture"],[25,86,74,39],[25,88,74,41],[26,6,75,4],[26,13,75,11,"ref"],[26,16,75,14],[26,17,75,15,"handlerTag"],[26,27,75,25],[27,4,76,2],[27,5,76,3],[27,11,76,9],[28,6,76,9],[29,6,79,4],[29,54,79,11,"ref"],[29,57,79,14],[29,58,79,15,"current"],[29,65,79,22],[29,86,79,11],[29,99,79,24,"handlerTag"],[29,109,79,34],[29,145,79,38],[29,146,79,39],[29,147,79,40],[30,4,80,2],[31,2,81,0],[32,2,83,0],[32,11,83,9,"extractValidHandlerTags"],[32,34,83,32],[32,35,83,33,"interactionGroup"],[32,51,83,75],[32,53,83,77],[33,4,83,77],[34,4,84,2],[34,36,85,4,"interactionGroup"],[34,52,85,20],[34,98,85,4,"interactionGroup"],[34,114,85,20],[34,115,85,22,"map"],[34,118,85,25],[34,119,85,26,"convertToHandlerTag"],[34,138,85,45],[34,139,85,46],[34,160,85,4],[34,183,85,48,"filter"],[34,189,85,54],[34,190,85,55],[34,200,85,56,"tag"],[34,203,85,59],[35,6,85,59],[35,13,85,64,"tag"],[35,16,85,67],[35,19,85,70],[35,20,85,71],[36,4,85,71],[36,6,85,72],[36,42,85,76],[36,44,85,78],[37,2,87,0],[38,2,89,0],[38,11,89,9,"dropHandlers"],[38,23,89,21],[38,24,89,22,"preparedGesture"],[38,39,89,61],[38,41,89,63],[39,4,90,2],[39,9,90,7],[39,13,90,13,"handler"],[39,20,90,20],[39,24,90,24,"preparedGesture"],[39,39,90,39],[39,40,90,40,"config"],[39,46,90,46],[39,48,90,48],[40,6,91,4,"RNGestureHandlerModule"],[40,37,91,26],[40,38,91,27,"dropGestureHandler"],[40,56,91,45],[40,57,91,46,"handler"],[40,64,91,53],[40,65,91,54,"handlerTag"],[40,75,91,64],[40,76,91,65],[41,6,93,4],[41,10,93,4,"unregisterHandler"],[41,82,93,21],[41,84,93,22,"handler"],[41,91,93,29],[41,92,93,30,"handlerTag"],[41,102,93,40],[41,104,93,42,"handler"],[41,111,93,49],[41,112,93,50,"config"],[41,118,93,56],[41,119,93,57,"testId"],[41,125,93,63],[41,126,93,64],[42,4,94,2],[43,4,96,2],[43,8,96,2,"scheduleFlushOperations"],[43,90,96,25],[43,93,96,27],[44,2,97,0],[45,2,99,0],[45,11,99,9,"checkGestureCallbacksForWorklets"],[45,43,99,41],[45,44,99,42,"gesture"],[45,51,99,62],[45,53,99,64],[46,4,102,2],[46,8,102,6,"gesture"],[46,15,102,13],[46,16,102,14,"config"],[46,22,102,20],[46,23,102,21,"runOnJS"],[46,30,102,28],[46,32,102,30],[47,6,103,4],[48,4,104,2],[49,4,106,2],[49,8,106,8,"areSomeNotWorklets"],[49,26,106,26],[49,29,106,29,"gesture"],[49,36,106,36],[49,37,106,37,"handlers"],[49,45,106,45],[49,46,106,46,"isWorklet"],[49,55,106,55],[49,56,106,56,"includes"],[49,64,106,64],[49,65,106,65],[49,70,106,70],[49,71,106,71],[50,4,107,2],[50,8,107,8,"areSomeWorklets"],[50,23,107,23],[50,26,107,26,"gesture"],[50,33,107,33],[50,34,107,34,"handlers"],[50,42,107,42],[50,43,107,43,"isWorklet"],[50,52,107,52],[50,53,107,53,"includes"],[50,61,107,61],[50,62,107,62],[50,66,107,66],[50,67,107,67],[51,4,111,2],[51,8,111,6,"areSomeNotWorklets"],[51,26,111,24],[51,30,111,28,"areSomeWorklets"],[51,45,111,43],[51,47,111,45],[52,6,112,4,"console"],[52,13,112,11],[52,14,112,12,"error"],[52,19,112,17],[52,20,113,6],[52,24,113,6,"tagMessage"],[52,81,113,16],[52,83,114,9],[52,350,114,275],[52,351,115,7],[52,352,116,5],[53,4,117,2],[54,2,118,0],[55,2,136,0],[55,11,136,9,"attachHandlers"],[55,25,136,23],[55,32,143,25],[56,4,143,25],[56,8,137,2,"preparedGesture"],[56,23,137,17],[56,31,137,2,"preparedGesture"],[56,46,137,17],[57,6,138,2,"gestureConfig"],[57,19,138,15],[57,27,138,2,"gestureConfig"],[57,40,138,15],[58,6,139,2,"gesture"],[58,13,139,9],[58,21,139,2,"gesture"],[58,28,139,9],[59,6,140,2,"viewTag"],[59,13,140,9],[59,21,140,2,"viewTag"],[59,28,140,9],[60,6,141,2,"webEventHandlersRef"],[60,25,141,21],[60,33,141,2,"webEventHandlersRef"],[60,52,141,21],[61,6,142,2,"mountedRef"],[61,16,142,12],[61,24,142,2,"mountedRef"],[61,34,142,12],[62,4,144,2],[62,8,144,6],[62,9,144,7,"preparedGesture"],[62,24,144,22],[62,25,144,23,"firstExecution"],[62,39,144,37],[62,41,144,39],[63,6,145,4,"gestureConfig"],[63,19,145,17],[63,20,145,18,"initialize"],[63,30,145,28],[63,32,145,30],[64,4,146,2],[64,5,146,3],[64,11,146,9],[65,6,147,4,"preparedGesture"],[65,21,147,19],[65,22,147,20,"firstExecution"],[65,36,147,34],[65,39,147,37],[65,44,147,42],[66,4,148,2],[67,4,152,2,"setImmediate"],[67,16,152,14],[67,17,152,15],[67,29,152,21],[68,6,153,4],[68,10,153,8],[68,11,153,9,"mountedRef"],[68,21,153,19],[68,22,153,20,"current"],[68,29,153,27],[68,31,153,29],[69,8,154,6],[70,6,155,4],[71,6,156,4,"gestureConfig"],[71,19,156,17],[71,20,156,18,"prepare"],[71,27,156,25],[71,29,156,27],[72,4,157,2],[72,5,157,3],[72,6,157,4],[73,4,159,2],[73,9,159,7],[73,13,159,13,"handler"],[73,20,159,20],[73,24,159,24,"gesture"],[73,31,159,31],[73,33,159,33],[74,6,160,4,"checkGestureCallbacksForWorklets"],[74,38,160,36],[74,39,160,37,"handler"],[74,46,160,44],[74,47,160,45],[75,6,161,4,"RNGestureHandlerModule"],[75,37,161,26],[75,38,161,27,"createGestureHandler"],[75,58,161,47],[75,59,162,6,"handler"],[75,66,162,13],[75,67,162,14,"handlerName"],[75,78,162,25],[75,80,163,6,"handler"],[75,87,163,13],[75,88,163,14,"handlerTag"],[75,98,163,24],[75,100,164,6],[75,104,164,6,"filterConfig"],[75,175,164,18],[75,177,164,19,"handler"],[75,184,164,26],[75,185,164,27,"config"],[75,191,164,33],[75,193,164,35,"ALLOWED_PROPS"],[75,206,164,48],[75,207,164,49],[75,208,165,5],[76,6,167,4],[76,10,167,4,"registerHandler"],[76,80,167,19],[76,82,167,20,"handler"],[76,89,167,27],[76,90,167,28,"handlerTag"],[76,100,167,38],[76,102,167,40,"handler"],[76,109,167,47],[76,111,167,49,"handler"],[76,118,167,56],[76,119,167,57,"config"],[76,125,167,63],[76,126,167,64,"testId"],[76,132,167,70],[76,133,167,71],[77,4,168,2],[78,4,172,2,"setImmediate"],[78,16,172,14],[78,17,172,15],[78,29,172,21],[79,6,173,4],[79,10,173,8],[79,11,173,9,"mountedRef"],[79,21,173,19],[79,22,173,20,"current"],[79,29,173,27],[79,31,173,29],[80,8,174,6],[81,6,175,4],[82,6,176,4],[82,11,176,9],[82,15,176,15,"handler"],[82,23,176,22],[82,27,176,26,"gesture"],[82,34,176,33],[82,36,176,35],[83,8,177,6],[83,12,177,10,"requireToFail"],[83,25,177,33],[83,28,177,36],[83,30,177,38],[84,8,178,6],[84,12,178,10,"handler"],[84,20,178,17],[84,21,178,18,"config"],[84,27,178,24],[84,28,178,25,"requireToFail"],[84,41,178,38],[84,43,178,40],[85,10,179,8,"requireToFail"],[85,23,179,21],[85,26,179,24,"extractValidHandlerTags"],[85,49,179,47],[85,50,179,48,"handler"],[85,58,179,55],[85,59,179,56,"config"],[85,65,179,62],[85,66,179,63,"requireToFail"],[85,79,179,76],[85,80,179,77],[86,8,180,6],[87,8,182,6],[87,12,182,10,"simultaneousWith"],[87,28,182,36],[87,31,182,39],[87,33,182,41],[88,8,183,6],[88,12,183,10,"handler"],[88,20,183,17],[88,21,183,18,"config"],[88,27,183,24],[88,28,183,25,"simultaneousWith"],[88,44,183,41],[88,46,183,43],[89,10,184,8,"simultaneousWith"],[89,26,184,24],[89,29,184,27,"extractValidHandlerTags"],[89,52,184,50],[89,53,185,10,"handler"],[89,61,185,17],[89,62,185,18,"config"],[89,68,185,24],[89,69,185,25,"simultaneousWith"],[89,85,185,41],[89,86,186,9],[90,8,187,6],[91,8,189,6,"RNGestureHandlerModule"],[91,39,189,28],[91,40,189,29,"updateGestureHandler"],[91,60,189,49],[91,61,190,8,"handler"],[91,69,190,15],[91,70,190,16,"handlerTag"],[91,80,190,26],[91,82,191,8],[91,86,191,8,"filterConfig"],[91,157,191,20],[91,159,191,21,"handler"],[91,167,191,28],[91,168,191,29,"config"],[91,174,191,35],[91,176,191,37,"ALLOWED_PROPS"],[91,189,191,50],[91,191,191,52],[92,10,192,10,"simultaneousHandlers"],[92,30,192,30],[92,32,192,32,"simultaneousWith"],[92,48,192,48],[93,10,193,10,"waitFor"],[93,17,193,17],[93,19,193,19,"requireToFail"],[94,8,194,8],[94,9,194,9],[94,10,194,10],[94,11,195,7],[95,6,196,4],[96,6,198,4],[96,10,198,4,"scheduleFlushOperations"],[96,92,198,27],[96,95,198,29],[97,4,199,2],[97,5,199,3],[97,6,199,4],[98,4,201,2,"preparedGesture"],[98,19,201,17],[98,20,201,18,"config"],[98,26,201,24],[98,29,201,27,"gesture"],[98,36,201,34],[99,4,203,2],[99,9,203,7],[99,13,203,13,"gesture"],[99,21,203,20],[99,25,203,24,"preparedGesture"],[99,40,203,39],[99,41,203,40,"config"],[99,47,203,46],[99,49,203,48],[100,6,204,4],[100,10,204,10,"actionType"],[100,20,204,20],[100,23,204,23,"gesture"],[100,31,204,30],[100,32,204,31,"shouldUseReanimated"],[100,51,204,50],[100,54,205,8,"ActionType"],[100,116,205,18],[100,117,205,19,"REANIMATED_WORKLET"],[100,135,205,37],[100,138,206,8,"ActionType"],[100,200,206,18],[100,201,206,19,"JS_FUNCTION_NEW_API"],[100,220,206,38],[101,6,208,4],[101,10,208,8,"Platform"],[101,31,208,16],[101,32,208,17,"OS"],[101,34,208,19],[101,39,208,24],[101,44,208,29],[101,46,208,31],[102,8,210,8,"RNGestureHandlerModule"],[102,39,210,30],[102,40,210,31,"attachGestureHandler"],[102,60,210,51],[102,61,212,8,"gesture"],[102,69,212,15],[102,70,212,16,"handlerTag"],[102,80,212,26],[102,82,213,8,"viewTag"],[102,89,213,15],[102,91,214,8,"ActionType"],[102,153,214,18],[102,154,214,19,"JS_FUNCTION_OLD_API"],[102,173,214,38],[102,175,215,8,"webEventHandlersRef"],[102,194,215,27],[102,195,216,7],[103,6,217,4],[103,7,217,5],[103,13,217,11],[104,8,218,6,"RNGestureHandlerModule"],[104,39,218,28],[104,40,218,29,"attachGestureHandler"],[104,60,218,49],[104,61,219,8,"gesture"],[104,69,219,15],[104,70,219,16,"handlerTag"],[104,80,219,26],[104,82,220,8,"viewTag"],[104,89,220,15],[104,91,221,8,"actionType"],[104,101,221,18],[104,102,222,7],[105,6,223,4],[106,4,224,2],[107,4,226,2],[107,8,226,6,"preparedGesture"],[107,23,226,21],[107,24,226,22,"animatedHandlers"],[107,40,226,38],[107,42,226,40],[108,6,227,4],[108,10,227,10,"isAnimatedGesture"],[108,27,227,27],[108,30,227,30],[108,39,227,10,"isAnimatedGesture"],[108,56,227,27],[108,57,227,31,"g"],[108,58,227,45],[109,8,227,45],[109,15,227,50,"g"],[109,16,227,51],[109,17,227,52,"shouldUseReanimated"],[109,36,227,71],[110,6,227,71],[111,6,229,4,"preparedGesture"],[111,21,229,19],[111,22,229,20,"animatedHandlers"],[111,38,229,36],[111,39,229,37,"value"],[111,44,229,42],[111,47,229,45,"gesture"],[111,54,229,52],[111,55,230,7,"filter"],[111,61,230,13],[111,62,230,14,"isAnimatedGesture"],[111,79,230,31],[111,80,230,32],[111,81,231,7,"map"],[111,84,231,10],[111,85,231,11],[111,95,231,12,"g"],[111,96,231,13],[112,8,231,13],[112,15,231,18,"g"],[112,16,231,19],[112,17,231,20,"handlers"],[112,25,231,28],[113,6,231,28],[113,8,233,7],[114,4,234,2],[115,2,235,0],[116,2,237,0],[116,11,237,9,"updateHandlers"],[116,25,237,23],[116,26,238,2,"preparedGesture"],[116,41,238,41],[116,43,239,2,"gestureConfig"],[116,56,239,46],[116,58,240,2,"gesture"],[116,65,240,24],[116,67,241,2,"mountedRef"],[116,77,241,38],[116,79,242,2],[117,4,243,2,"gestureConfig"],[117,17,243,15],[117,18,243,16,"prepare"],[117,25,243,23],[117,27,243,25],[118,4,245,2],[118,9,245,7],[118,13,245,11,"i"],[118,14,245,12],[118,17,245,15],[118,18,245,16],[118,20,245,18,"i"],[118,21,245,19],[118,24,245,22,"gesture"],[118,31,245,29],[118,32,245,30,"length"],[118,38,245,36],[118,40,245,38,"i"],[118,41,245,39],[118,43,245,41],[118,45,245,43],[119,6,246,4],[119,10,246,10,"handler"],[119,17,246,17],[119,20,246,20,"preparedGesture"],[119,35,246,35],[119,36,246,36,"config"],[119,42,246,42],[119,43,246,43,"i"],[119,44,246,44],[119,45,246,45],[120,6,247,4,"checkGestureCallbacksForWorklets"],[120,38,247,36],[120,39,247,37,"handler"],[120,46,247,44],[120,47,247,45],[121,6,251,4],[121,10,251,8,"gesture"],[121,17,251,15],[121,18,251,16,"i"],[121,19,251,17],[121,20,251,18],[121,21,251,19,"handlerTag"],[121,31,251,29],[121,36,251,34,"handler"],[121,43,251,41],[121,44,251,42,"handlerTag"],[121,54,251,52],[121,56,251,54],[122,8,252,6,"gesture"],[122,15,252,13],[122,16,252,14,"i"],[122,17,252,15],[122,18,252,16],[122,19,252,17,"handlerTag"],[122,29,252,27],[122,32,252,30,"handler"],[122,39,252,37],[122,40,252,38,"handlerTag"],[122,50,252,48],[123,8,253,6,"gesture"],[123,15,253,13],[123,16,253,14,"i"],[123,17,253,15],[123,18,253,16],[123,19,253,17,"handlers"],[123,27,253,25],[123,28,253,26,"handlerTag"],[123,38,253,36],[123,41,253,39,"handler"],[123,48,253,46],[123,49,253,47,"handlerTag"],[123,59,253,57],[124,6,254,4],[125,4,255,2],[126,4,260,2,"setImmediate"],[126,16,260,14],[126,17,260,15],[126,29,260,21],[127,6,261,4],[127,10,261,8],[127,11,261,9,"mountedRef"],[127,21,261,19],[127,22,261,20,"current"],[127,29,261,27],[127,31,261,29],[128,8,262,6],[129,6,263,4],[130,6,264,4],[130,11,264,9],[130,15,264,13,"i"],[130,17,264,14],[130,20,264,17],[130,21,264,18],[130,23,264,20,"i"],[130,25,264,21],[130,28,264,24,"gesture"],[130,35,264,31],[130,36,264,32,"length"],[130,42,264,38],[130,44,264,40,"i"],[130,46,264,41],[130,48,264,43],[130,50,264,45],[131,8,265,6],[131,12,265,12,"handler"],[131,21,265,19],[131,24,265,22,"preparedGesture"],[131,39,265,37],[131,40,265,38,"config"],[131,46,265,44],[131,47,265,45,"i"],[131,49,265,46],[131,50,265,47],[132,8,267,6,"handler"],[132,17,267,13],[132,18,267,14,"config"],[132,24,267,20],[132,27,267,23,"gesture"],[132,34,267,30],[132,35,267,31,"i"],[132,37,267,32],[132,38,267,33],[132,39,267,34,"config"],[132,45,267,40],[133,8,268,6,"handler"],[133,17,268,13],[133,18,268,14,"handlers"],[133,26,268,22],[133,29,268,25,"gesture"],[133,36,268,32],[133,37,268,33,"i"],[133,39,268,34],[133,40,268,35],[133,41,268,36,"handlers"],[133,49,268,44],[134,8,270,6],[134,12,270,12,"requireToFail"],[134,25,270,25],[134,28,270,28,"extractValidHandlerTags"],[134,51,270,51],[134,52,271,8,"handler"],[134,61,271,15],[134,62,271,16,"config"],[134,68,271,22],[134,69,271,23,"requireToFail"],[134,82,271,36],[134,83,272,7],[135,8,274,6],[135,12,274,12,"simultaneousWith"],[135,28,274,28],[135,31,274,31,"extractValidHandlerTags"],[135,54,274,54],[135,55,275,8,"handler"],[135,64,275,15],[135,65,275,16,"config"],[135,71,275,22],[135,72,275,23,"simultaneousWith"],[135,88,275,39],[135,89,276,7],[136,8,278,6,"RNGestureHandlerModule"],[136,39,278,28],[136,40,278,29,"updateGestureHandler"],[136,60,278,49],[136,61,279,8,"handler"],[136,70,279,15],[136,71,279,16,"handlerTag"],[136,81,279,26],[136,83,280,8],[136,87,280,8,"filterConfig"],[136,158,280,20],[136,160,280,21,"handler"],[136,169,280,28],[136,170,280,29,"config"],[136,176,280,35],[136,178,280,37,"ALLOWED_PROPS"],[136,191,280,50],[136,193,280,52],[137,10,281,10,"simultaneousHandlers"],[137,30,281,30],[137,32,281,32,"simultaneousWith"],[137,48,281,48],[138,10,282,10,"waitFor"],[138,17,282,17],[138,19,282,19,"requireToFail"],[139,8,283,8],[139,9,283,9],[139,10,283,10],[139,11,284,7],[140,8,286,6],[140,12,286,6,"registerHandler"],[140,82,286,21],[140,84,286,22,"handler"],[140,93,286,29],[140,94,286,30,"handlerTag"],[140,104,286,40],[140,106,286,42,"handler"],[140,115,286,49],[140,117,286,51,"handler"],[140,126,286,58],[140,127,286,59,"config"],[140,133,286,65],[140,134,286,66,"testId"],[140,140,286,72],[140,141,286,73],[141,6,287,4],[142,6,289,4],[142,10,289,8,"preparedGesture"],[142,25,289,23],[142,26,289,24,"animatedHandlers"],[142,42,289,40],[142,44,289,42],[143,8,289,42],[144,8,290,6],[144,12,290,12,"previousHandlersValue"],[144,33,290,33],[144,61,291,8,"preparedGesture"],[144,76,291,23],[144,77,291,24,"animatedHandlers"],[144,93,291,40],[144,94,291,41,"value"],[144,99,291,46],[144,135,291,50],[144,137,291,52],[145,8,292,6],[145,12,292,12,"newHandlersValue"],[145,28,292,28],[145,31,292,31,"preparedGesture"],[145,46,292,46],[145,47,292,47,"config"],[145,53,292,53],[145,54,293,9,"filter"],[145,60,293,15],[145,61,293,16],[145,71,293,17,"g"],[145,72,293,18],[146,10,293,18],[146,17,293,23,"g"],[146,18,293,24],[146,19,293,25,"shouldUseReanimated"],[146,38,293,44],[147,8,293,44],[147,10,293,45],[147,11,294,9,"map"],[147,14,294,12],[147,15,294,13],[147,25,294,14,"g"],[147,26,294,15],[148,10,294,15],[148,17,294,20,"g"],[148,18,294,21],[148,19,294,22,"handlers"],[148,27,294,30],[149,8,294,30],[149,10,296,9],[150,8,299,6],[150,12,299,10,"shouldUpdateSharedValue"],[150,35,299,33],[150,38,300,8,"previousHandlersValue"],[150,59,300,29],[150,60,300,30,"length"],[150,66,300,36],[150,71,300,41,"newHandlersValue"],[150,87,300,57],[150,88,300,58,"length"],[150,94,300,64],[151,8,302,6],[151,12,302,10],[151,13,302,11,"shouldUpdateSharedValue"],[151,36,302,34],[151,38,302,36],[152,10,304,8],[152,15,304,13],[152,19,304,17,"i"],[152,22,304,18],[152,25,304,21],[152,26,304,22],[152,28,304,24,"i"],[152,31,304,25],[152,34,304,28,"newHandlersValue"],[152,50,304,44],[152,51,304,45,"length"],[152,57,304,51],[152,59,304,53,"i"],[152,62,304,54],[152,64,304,56],[152,66,304,58],[153,12,305,10],[153,16,307,12,"newHandlersValue"],[153,32,307,28],[153,33,307,29,"i"],[153,36,307,30],[153,37,307,31],[153,38,307,32,"gestureId"],[153,47,307,41],[153,52,307,46,"previousHandlersValue"],[153,73,307,67],[153,74,307,68,"i"],[153,77,307,69],[153,78,307,70],[153,79,307,71,"gestureId"],[153,88,307,80],[153,90,308,12],[154,14,309,12,"shouldUpdateSharedValue"],[154,37,309,35],[154,40,309,38],[154,44,309,42],[155,14,310,12],[156,12,311,10],[157,10,312,8],[158,8,313,6],[159,8,315,6],[159,12,315,10,"shouldUpdateSharedValue"],[159,35,315,33],[159,37,315,35],[160,10,316,8,"preparedGesture"],[160,25,316,23],[160,26,316,24,"animatedHandlers"],[160,42,316,40],[160,43,316,41,"value"],[160,48,316,46],[160,51,316,49,"newHandlersValue"],[160,67,316,65],[161,8,317,6],[162,6,318,4],[163,6,320,4],[163,10,320,4,"scheduleFlushOperations"],[163,92,320,27],[163,95,320,29],[164,4,321,2],[164,5,321,3],[164,6,321,4],[165,2,322,0],[166,2,324,0],[166,11,324,9,"needsToReattach"],[166,26,324,24],[166,27,325,2,"preparedGesture"],[166,42,325,41],[166,44,326,2,"gesture"],[166,51,326,24],[166,53,327,2],[167,4,328,2],[167,8,328,6,"gesture"],[167,15,328,13],[167,16,328,14,"length"],[167,22,328,20],[167,27,328,25,"preparedGesture"],[167,42,328,40],[167,43,328,41,"config"],[167,49,328,47],[167,50,328,48,"length"],[167,56,328,54],[167,58,328,56],[168,6,329,4],[168,13,329,11],[168,17,329,15],[169,4,330,2],[170,4,331,2],[170,9,331,7],[170,13,331,11,"i"],[170,14,331,12],[170,17,331,15],[170,18,331,16],[170,20,331,18,"i"],[170,21,331,19],[170,24,331,22,"gesture"],[170,31,331,29],[170,32,331,30,"length"],[170,38,331,36],[170,40,331,38,"i"],[170,41,331,39],[170,43,331,41],[170,45,331,43],[171,6,332,4],[171,10,333,6,"gesture"],[171,17,333,13],[171,18,333,14,"i"],[171,19,333,15],[171,20,333,16],[171,21,333,17,"handlerName"],[171,32,333,28],[171,37,333,33,"preparedGesture"],[171,52,333,48],[171,53,333,49,"config"],[171,59,333,55],[171,60,333,56,"i"],[171,61,333,57],[171,62,333,58],[171,63,333,59,"handlerName"],[171,74,333,70],[171,78,334,6,"gesture"],[171,85,334,13],[171,86,334,14,"i"],[171,87,334,15],[171,88,334,16],[171,89,334,17,"shouldUseReanimated"],[171,108,334,36],[171,113,335,8,"preparedGesture"],[171,128,335,23],[171,129,335,24,"config"],[171,135,335,30],[171,136,335,31,"i"],[171,137,335,32],[171,138,335,33],[171,139,335,34,"shouldUseReanimated"],[171,158,335,53],[171,160,336,6],[172,8,337,6],[172,15,337,13],[172,19,337,17],[173,6,338,4],[174,4,339,2],[175,4,341,2],[175,11,341,9],[175,16,341,14],[176,2,342,0],[177,2,342,1],[178,4,342,1],[179,4,342,1],[180,4,342,1],[181,2,342,1],[182,2,342,1],[182,6,344,9,"isStateChangeEvent"],[182,24,344,27],[183,4,344,27],[184,4,344,27],[184,25,345,2,"event"],[184,30,345,73],[184,32,346,36],[185,6,349,2],[185,13,349,9,"event"],[185,18,349,14],[185,19,349,15,"oldState"],[185,27,349,23],[185,31,349,27],[185,35,349,31],[186,4,350,0],[186,5,350,1],[187,4,350,1],[188,4,350,1],[189,4,350,1],[190,4,350,1],[191,4,350,1],[192,2,350,1],[193,2,350,1],[194,4,350,1],[195,4,350,1],[196,4,350,1],[197,2,350,1],[198,2,350,1],[198,6,352,9,"isTouchEvent"],[198,18,352,21],[199,4,352,21],[200,4,352,21],[200,25,353,2,"event"],[200,30,353,73],[200,32,354,30],[201,6,356,2],[201,13,356,9,"event"],[201,18,356,14],[201,19,356,15,"eventType"],[201,28,356,24],[201,32,356,28],[201,36,356,32],[202,4,357,0],[202,5,357,1],[203,4,357,1],[204,4,357,1],[205,4,357,1],[206,4,357,1],[207,4,357,1],[208,2,357,1],[209,2,357,1],[210,4,357,1],[211,4,357,1],[212,4,357,1],[213,2,357,1],[214,2,357,1],[214,6,359,9,"getHandler"],[214,16,359,19],[215,4,359,19],[216,4,359,19],[216,25,360,2,"type"],[216,29,360,21],[216,31,361,2,"gesture"],[216,38,361,52],[216,40,362,2],[217,6,364,2],[217,14,364,10,"type"],[217,18,364,14],[218,8,365,4],[218,13,365,9,"CALLBACK_TYPE"],[218,71,365,22],[218,72,365,23,"BEGAN"],[218,77,365,28],[219,10,366,6],[219,17,366,13,"gesture"],[219,24,366,20],[219,25,366,21,"onBegin"],[219,32,366,28],[220,8,367,4],[220,13,367,9,"CALLBACK_TYPE"],[220,71,367,22],[220,72,367,23,"START"],[220,77,367,28],[221,10,368,6],[221,17,368,13,"gesture"],[221,24,368,20],[221,25,368,21,"onStart"],[221,32,368,28],[222,8,369,4],[222,13,369,9,"CALLBACK_TYPE"],[222,71,369,22],[222,72,369,23,"UPDATE"],[222,78,369,29],[223,10,370,6],[223,17,370,13,"gesture"],[223,24,370,20],[223,25,370,21,"onUpdate"],[223,33,370,29],[224,8,371,4],[224,13,371,9,"CALLBACK_TYPE"],[224,71,371,22],[224,72,371,23,"CHANGE"],[224,78,371,29],[225,10,372,6],[225,17,372,13,"gesture"],[225,24,372,20],[225,25,372,21,"onChange"],[225,33,372,29],[226,8,373,4],[226,13,373,9,"CALLBACK_TYPE"],[226,71,373,22],[226,72,373,23,"END"],[226,75,373,26],[227,10,374,6],[227,17,374,13,"gesture"],[227,24,374,20],[227,25,374,21,"onEnd"],[227,30,374,26],[228,8,375,4],[228,13,375,9,"CALLBACK_TYPE"],[228,71,375,22],[228,72,375,23,"FINALIZE"],[228,80,375,31],[229,10,376,6],[229,17,376,13,"gesture"],[229,24,376,20],[229,25,376,21,"onFinalize"],[229,35,376,31],[230,8,377,4],[230,13,377,9,"CALLBACK_TYPE"],[230,71,377,22],[230,72,377,23,"TOUCHES_DOWN"],[230,84,377,35],[231,10,378,6],[231,17,378,13,"gesture"],[231,24,378,20],[231,25,378,21,"onTouchesDown"],[231,38,378,34],[232,8,379,4],[232,13,379,9,"CALLBACK_TYPE"],[232,71,379,22],[232,72,379,23,"TOUCHES_MOVE"],[232,84,379,35],[233,10,380,6],[233,17,380,13,"gesture"],[233,24,380,20],[233,25,380,21,"onTouchesMove"],[233,38,380,34],[234,8,381,4],[234,13,381,9,"CALLBACK_TYPE"],[234,71,381,22],[234,72,381,23,"TOUCHES_UP"],[234,82,381,33],[235,10,382,6],[235,17,382,13,"gesture"],[235,24,382,20],[235,25,382,21,"onTouchesUp"],[235,36,382,32],[236,8,383,4],[236,13,383,9,"CALLBACK_TYPE"],[236,71,383,22],[236,72,383,23,"TOUCHES_CANCELLED"],[236,89,383,40],[237,10,384,6],[237,17,384,13,"gesture"],[237,24,384,20],[237,25,384,21,"onTouchesCancelled"],[237,43,384,39],[238,6,384,40],[239,4,386,0],[239,5,386,1],[240,4,386,1],[241,6,386,1],[241,21,21,9,"CALLBACK_TYPE"],[242,4,21,22],[243,4,21,22],[244,4,21,22],[245,4,21,22],[246,4,21,22],[247,2,21,22],[248,2,21,22],[249,4,21,22],[250,4,21,22],[251,4,21,22],[252,2,21,22],[253,2,21,22],[253,6,388,9,"touchEventTypeToCallbackType"],[253,34,388,37],[254,4,388,37],[255,4,388,37],[255,25,389,2,"eventType"],[255,34,389,27],[255,36,390,17],[256,6,392,2],[256,14,392,10,"eventType"],[256,23,392,19],[257,8,393,4],[257,13,393,9,"TouchEventType"],[257,83,393,23],[257,84,393,24,"TOUCHES_DOWN"],[257,96,393,36],[258,10,394,6],[258,17,394,13,"CALLBACK_TYPE"],[258,75,394,26],[258,76,394,27,"TOUCHES_DOWN"],[258,88,394,39],[259,8,395,4],[259,13,395,9,"TouchEventType"],[259,83,395,23],[259,84,395,24,"TOUCHES_MOVE"],[259,96,395,36],[260,10,396,6],[260,17,396,13,"CALLBACK_TYPE"],[260,75,396,26],[260,76,396,27,"TOUCHES_MOVE"],[260,88,396,39],[261,8,397,4],[261,13,397,9,"TouchEventType"],[261,83,397,23],[261,84,397,24,"TOUCHES_UP"],[261,94,397,34],[262,10,398,6],[262,17,398,13,"CALLBACK_TYPE"],[262,75,398,26],[262,76,398,27,"TOUCHES_UP"],[262,86,398,37],[263,8,399,4],[263,13,399,9,"TouchEventType"],[263,83,399,23],[263,84,399,24,"TOUCHES_CANCELLED"],[263,101,399,41],[264,10,400,6],[264,17,400,13,"CALLBACK_TYPE"],[264,75,400,26],[264,76,400,27,"TOUCHES_CANCELLED"],[264,93,400,44],[265,6,400,45],[266,6,402,2],[266,13,402,9,"CALLBACK_TYPE"],[266,71,402,22],[266,72,402,23,"UNDEFINED"],[266,81,402,32],[267,4,403,0],[267,5,403,1],[268,4,403,1],[269,6,403,1],[269,22,9,9,"TouchEventType"],[269,92,9,23],[270,6,9,23],[270,21,12,9,"CALLBACK_TYPE"],[271,4,12,22],[272,4,12,22],[273,4,12,22],[274,4,12,22],[275,4,12,22],[276,2,12,22],[277,2,12,22],[278,4,12,22],[279,4,12,22],[280,4,12,22],[281,2,12,22],[282,2,12,22],[282,6,405,9,"runWorklet"],[282,16,405,19],[283,4,405,19],[284,4,405,19],[284,25,406,2,"type"],[284,29,406,21],[284,31,407,2,"gesture"],[284,38,407,52],[284,40,408,2,"event"],[284,45,408,73],[284,47,410,2],[285,6,412,2],[285,10,412,8,"handler"],[285,17,412,15],[285,20,412,18,"getHandler"],[285,30,412,28],[285,31,412,29,"type"],[285,35,412,33],[285,37,412,35,"gesture"],[285,44,412,42],[285,45,412,43],[286,6,413,2],[286,10,413,6,"gesture"],[286,17,413,13],[286,18,413,14,"isWorklet"],[286,27,413,23],[286,28,413,24,"type"],[286,32,413,28],[286,33,413,29],[286,35,413,31],[287,8,413,31],[287,42,409,5,"args"],[287,46,409,9],[288,10,409,5,"args"],[288,14,409,9],[289,8,409,9],[290,8,416,4,"handler"],[290,15,416,11],[290,35,416,4,"handler"],[290,42,416,11],[290,58,416,14,"event"],[290,63,416,19],[290,72,416,24,"args"],[290,76,416,28],[290,78,416,29],[291,6,417,2],[291,7,417,3],[291,13,417,9],[291,17,417,13,"handler"],[291,24,417,20],[291,26,417,22],[292,8,418,4,"console"],[292,15,418,11],[292,16,418,12,"warn"],[292,20,418,16],[292,21,418,17],[292,25,418,17,"tagMessage"],[292,82,418,27],[292,84,418,28],[292,129,418,73],[292,130,418,74],[292,131,418,75],[293,6,419,2],[294,4,420,0],[294,5,420,1],[295,4,420,1],[296,6,420,1],[296,18,2,18,"getHandler"],[296,28,2,28],[297,6,2,28],[297,18,8,17,"tagMessage"],[298,4,8,27],[299,4,8,27],[300,4,8,27],[301,4,8,27],[302,4,8,27],[303,2,8,27],[304,2,8,27],[305,4,8,27],[306,4,8,27],[307,4,8,27],[308,2,8,27],[309,2,422,0],[309,11,422,9,"useAnimatedGesture"],[309,29,422,27],[309,30,423,2,"preparedGesture"],[309,45,423,41],[309,47,424,2,"needsRebuild"],[309,59,424,23],[309,61,425,2],[310,4,426,2],[310,8,426,6],[310,9,426,7,"Reanimated"],[310,74,426,17],[310,76,426,19],[311,6,427,4],[312,4,428,2],[313,4,433,2],[313,8,433,8,"sharedHandlersCallbacks"],[313,31,433,31],[313,34,433,34,"Reanimated"],[313,99,433,44],[313,100,433,45,"useSharedValue"],[313,114,433,59],[313,115,435,4],[313,119,435,8],[313,120,435,9],[314,4,438,2],[314,8,438,8,"lastUpdateEvent"],[314,23,438,23],[314,26,438,26,"Reanimated"],[314,91,438,36],[314,92,438,37,"useSharedValue"],[314,106,438,51],[314,107,440,4],[314,109,440,6],[314,110,440,7],[315,4,443,2],[315,8,443,8,"stateControllers"],[315,24,443,51],[315,27,443,54],[315,29,443,56],[316,4,445,2],[316,8,445,8,"callback"],[316,16,445,16],[317,6,445,16],[318,6,445,16],[318,27,446,4,"event"],[318,32,446,75],[318,34,447,7],[319,8,450,4],[319,12,450,10,"currentCallback"],[319,27,450,25],[319,30,450,28,"sharedHandlersCallbacks"],[319,53,450,51],[319,54,450,52,"value"],[319,59,450,57],[320,8,451,4],[320,12,451,8],[320,13,451,9,"currentCallback"],[320,28,451,24],[320,30,451,26],[321,10,452,6],[322,8,453,4],[323,8,455,4],[323,13,455,9],[323,17,455,13,"i"],[323,18,455,14],[323,21,455,17],[323,22,455,18],[323,24,455,20,"i"],[323,25,455,21],[323,28,455,24,"currentCallback"],[323,43,455,39],[323,44,455,40,"length"],[323,50,455,46],[323,52,455,48,"i"],[323,53,455,49],[323,55,455,51],[323,57,455,53],[324,10,456,6],[324,14,456,12,"gesture"],[324,21,456,19],[324,24,456,22,"currentCallback"],[324,39,456,37],[324,40,456,38,"i"],[324,41,456,39],[324,42,456,40],[325,10,458,6],[325,14,458,10,"event"],[325,19,458,15],[325,20,458,16,"handlerTag"],[325,30,458,26],[325,35,458,31,"gesture"],[325,42,458,38],[325,43,458,39,"handlerTag"],[325,53,458,49],[325,55,458,51],[326,12,459,8],[326,16,459,12,"isStateChangeEvent"],[326,34,459,30],[326,35,459,31,"event"],[326,40,459,36],[326,41,459,37],[326,43,459,39],[327,14,460,10],[327,18,461,12,"event"],[327,23,461,17],[327,24,461,18,"oldState"],[327,32,461,26],[327,37,461,31,"State"],[327,89,461,36],[327,90,461,37,"UNDETERMINED"],[327,102,461,49],[327,106,462,12,"event"],[327,111,462,17],[327,112,462,18,"state"],[327,117,462,23],[327,122,462,28,"State"],[327,174,462,33],[327,175,462,34,"BEGAN"],[327,180,462,39],[327,182,463,12],[328,16,464,12,"runWorklet"],[328,26,464,22],[328,27,464,23,"CALLBACK_TYPE"],[328,85,464,36],[328,86,464,37,"BEGAN"],[328,91,464,42],[328,93,464,44,"gesture"],[328,100,464,51],[328,102,464,53,"event"],[328,107,464,58],[328,108,464,59],[329,14,465,10],[329,15,465,11],[329,21,465,17],[329,25,466,12],[329,26,466,13,"event"],[329,31,466,18],[329,32,466,19,"oldState"],[329,40,466,27],[329,45,466,32,"State"],[329,97,466,37],[329,98,466,38,"BEGAN"],[329,103,466,43],[329,107,467,14,"event"],[329,112,467,19],[329,113,467,20,"oldState"],[329,121,467,28],[329,126,467,33,"State"],[329,178,467,38],[329,179,467,39,"UNDETERMINED"],[329,191,467,51],[329,196,468,12,"event"],[329,201,468,17],[329,202,468,18,"state"],[329,207,468,23],[329,212,468,28,"State"],[329,264,468,33],[329,265,468,34,"ACTIVE"],[329,271,468,40],[329,273,469,12],[330,16,470,12,"runWorklet"],[330,26,470,22],[330,27,470,23,"CALLBACK_TYPE"],[330,85,470,36],[330,86,470,37,"START"],[330,91,470,42],[330,93,470,44,"gesture"],[330,100,470,51],[330,102,470,53,"event"],[330,107,470,58],[330,108,470,59],[331,16,471,12,"lastUpdateEvent"],[331,31,471,27],[331,32,471,28,"value"],[331,37,471,33],[331,38,471,34,"gesture"],[331,45,471,41],[331,46,471,42,"handlerTag"],[331,56,471,52],[331,57,471,53],[331,60,471,56,"undefined"],[331,69,471,65],[332,14,472,10],[332,15,472,11],[332,21,472,17],[332,25,473,12,"event"],[332,30,473,17],[332,31,473,18,"oldState"],[332,39,473,26],[332,44,473,31,"event"],[332,49,473,36],[332,50,473,37,"state"],[332,55,473,42],[332,59,474,12,"event"],[332,64,474,17],[332,65,474,18,"state"],[332,70,474,23],[332,75,474,28,"State"],[332,127,474,33],[332,128,474,34,"END"],[332,131,474,37],[332,133,475,12],[333,16,476,12],[333,20,476,16,"event"],[333,25,476,21],[333,26,476,22,"oldState"],[333,34,476,30],[333,39,476,35,"State"],[333,91,476,40],[333,92,476,41,"ACTIVE"],[333,98,476,47],[333,100,476,49],[334,18,477,14,"runWorklet"],[334,28,477,24],[334,29,477,25,"CALLBACK_TYPE"],[334,87,477,38],[334,88,477,39,"END"],[334,91,477,42],[334,93,477,44,"gesture"],[334,100,477,51],[334,102,477,53,"event"],[334,107,477,58],[334,109,477,60],[334,113,477,64],[334,114,477,65],[335,16,478,12],[336,16,479,12,"runWorklet"],[336,26,479,22],[336,27,479,23,"CALLBACK_TYPE"],[336,85,479,36],[336,86,479,37,"FINALIZE"],[336,94,479,45],[336,96,479,47,"gesture"],[336,103,479,54],[336,105,479,56,"event"],[336,110,479,61],[336,112,479,63],[336,116,479,67],[336,117,479,68],[337,14,480,10],[337,15,480,11],[337,21,480,17],[337,25,481,12],[337,26,481,13,"event"],[337,31,481,18],[337,32,481,19,"state"],[337,37,481,24],[337,42,481,29,"State"],[337,94,481,34],[337,95,481,35,"FAILED"],[337,101,481,41],[337,105,481,45,"event"],[337,110,481,50],[337,111,481,51,"state"],[337,116,481,56],[337,121,481,61,"State"],[337,173,481,66],[337,174,481,67,"CANCELLED"],[337,183,481,76],[337,188,482,12,"event"],[337,193,482,17],[337,194,482,18,"state"],[337,199,482,23],[337,204,482,28,"event"],[337,209,482,33],[337,210,482,34,"oldState"],[337,218,482,42],[337,220,483,12],[338,16,484,12],[338,20,484,16,"event"],[338,25,484,21],[338,26,484,22,"oldState"],[338,34,484,30],[338,39,484,35,"State"],[338,91,484,40],[338,92,484,41,"ACTIVE"],[338,98,484,47],[338,100,484,49],[339,18,485,14,"runWorklet"],[339,28,485,24],[339,29,485,25,"CALLBACK_TYPE"],[339,87,485,38],[339,88,485,39,"END"],[339,91,485,42],[339,93,485,44,"gesture"],[339,100,485,51],[339,102,485,53,"event"],[339,107,485,58],[339,109,485,60],[339,114,485,65],[339,115,485,66],[340,16,486,12],[341,16,487,12,"runWorklet"],[341,26,487,22],[341,27,487,23,"CALLBACK_TYPE"],[341,85,487,36],[341,86,487,37,"FINALIZE"],[341,94,487,45],[341,96,487,47,"gesture"],[341,103,487,54],[341,105,487,56,"event"],[341,110,487,61],[341,112,487,63],[341,117,487,68],[341,118,487,69],[342,14,488,10],[343,12,489,8],[343,13,489,9],[343,19,489,15],[343,23,489,19,"isTouchEvent"],[343,35,489,31],[343,36,489,32,"event"],[343,41,489,37],[343,42,489,38],[343,44,489,40],[344,14,490,10],[344,18,490,14],[344,19,490,15,"stateControllers"],[344,35,490,31],[344,36,490,32,"i"],[344,37,490,33],[344,38,490,34],[344,40,490,36],[345,16,491,12,"stateControllers"],[345,32,491,28],[345,33,491,29,"i"],[345,34,491,30],[345,35,491,31],[345,38,491,34,"GestureStateManager"],[345,114,491,53],[345,115,491,54,"create"],[345,121,491,60],[345,122,491,61,"event"],[345,127,491,66],[345,128,491,67,"handlerTag"],[345,138,491,77],[345,139,491,78],[346,14,492,10],[347,14,494,10],[347,18,494,14,"event"],[347,23,494,19],[347,24,494,20,"eventType"],[347,33,494,29],[347,38,494,34,"TouchEventType"],[347,108,494,48],[347,109,494,49,"UNDETERMINED"],[347,121,494,61],[347,123,494,63],[348,16,495,12,"runWorklet"],[348,26,495,22],[348,27,496,14,"touchEventTypeToCallbackType"],[348,55,496,42],[348,56,496,43,"event"],[348,61,496,48],[348,62,496,49,"eventType"],[348,71,496,58],[348,72,496,59],[348,74,497,14,"gesture"],[348,81,497,21],[348,83,498,14,"event"],[348,88,498,19],[348,90,499,14,"stateControllers"],[348,106,499,30],[348,107,499,31,"i"],[348,108,499,32],[348,109,499,33],[348,110,500,13],[349,14,501,10],[350,12,502,8],[350,13,502,9],[350,19,502,15],[351,14,503,10,"runWorklet"],[351,24,503,20],[351,25,503,21,"CALLBACK_TYPE"],[351,83,503,34],[351,84,503,35,"UPDATE"],[351,90,503,41],[351,92,503,43,"gesture"],[351,99,503,50],[351,101,503,52,"event"],[351,106,503,57],[351,107,503,58],[352,14,505,10],[352,18,505,14,"gesture"],[352,25,505,21],[352,26,505,22,"onChange"],[352,34,505,30],[352,38,505,34,"gesture"],[352,45,505,41],[352,46,505,42,"changeEventCalculator"],[352,67,505,63],[352,69,505,65],[353,16,506,12,"runWorklet"],[353,26,506,22],[353,27,507,14,"CALLBACK_TYPE"],[353,85,507,27],[353,86,507,28,"CHANGE"],[353,92,507,34],[353,94,508,14,"gesture"],[353,101,508,21],[353,103,509,14,"gesture"],[353,110,509,21],[353,111,509,22,"changeEventCalculator"],[353,132,509,43],[353,152,509,14,"gesture"],[353,159,509,21],[353,160,509,22,"changeEventCalculator"],[353,181,509,43],[353,182,510,16,"event"],[353,187,510,21],[353,189,511,16,"lastUpdateEvent"],[353,204,511,31],[353,205,511,32,"value"],[353,210,511,37],[353,211,511,38,"gesture"],[353,218,511,45],[353,219,511,46,"handlerTag"],[353,229,511,56],[353,230,511,57],[353,231,512,15],[353,232,513,13],[354,16,515,12,"lastUpdateEvent"],[354,31,515,27],[354,32,515,28,"value"],[354,37,515,33],[354,38,515,34,"gesture"],[354,45,515,41],[354,46,515,42,"handlerTag"],[354,56,515,52],[354,57,515,53],[354,60,515,56,"event"],[354,65,515,61],[355,14,516,10],[356,12,517,8],[357,10,518,6],[358,8,519,4],[359,6,520,2],[359,7,520,3],[360,6,520,3],[361,8,520,3],[361,33,2,26,"sharedHandlersCallbacks"],[361,56,2,49],[362,8,2,49],[362,28,9,10,"isStateChangeEvent"],[362,46,9,28],[363,8,9,28],[363,15,21,33,"State"],[363,67,21,38],[364,8,21,38],[364,20,36,10,"runWorklet"],[364,30,36,20],[365,8,36,20],[365,23,36,21,"CALLBACK_TYPE"],[365,81,36,34],[366,8,36,34],[366,25,37,10,"lastUpdateEvent"],[366,40,37,25],[367,8,37,25],[367,22,26,17,"isTouchEvent"],[367,34,26,29],[368,8,26,29],[368,26,31,84,"stateControllers"],[368,42,31,100],[369,8,31,100],[369,29,28,32,"GestureStateManager"],[369,105,28,51],[370,8,28,51],[370,24,30,32,"TouchEventType"],[370,94,30,46],[371,8,30,46],[371,38,31,21,"touchEventTypeToCallbackType"],[372,6,31,49],[373,6,31,49],[374,6,31,49],[375,6,31,49],[376,6,31,49],[377,4,31,49],[377,7,520,3],[378,4,523,2],[378,8,523,8,"event"],[378,13,523,13],[378,16,523,16,"Reanimated"],[378,81,523,26],[378,82,523,27,"useEvent"],[378,90,523,35],[378,91,524,4,"callback"],[378,99,524,12],[378,101,525,4],[378,102,525,5],[378,131,525,34],[378,133,525,36],[378,156,525,59],[378,157,525,60],[378,159,526,4,"needsRebuild"],[378,171,526,16],[378,172,527,3],[379,4,529,2,"preparedGesture"],[379,19,529,17],[379,20,529,18,"animatedEventHandler"],[379,40,529,38],[379,43,529,41,"event"],[379,48,529,46],[380,4,530,2,"preparedGesture"],[380,19,530,17],[380,20,530,18,"animatedHandlers"],[380,36,530,34],[380,39,530,37,"sharedHandlersCallbacks"],[380,62,530,60],[381,2,531,0],[382,2,534,0],[382,11,534,9,"validateDetectorChildren"],[382,35,534,33],[382,36,534,34,"ref"],[382,39,534,42],[382,41,534,44],[383,4,556,2],[383,8,556,6,"__DEV__"],[383,15,556,13],[383,19,556,17,"Platform"],[383,40,556,25],[383,41,556,26,"OS"],[383,43,556,28],[383,48,556,33],[383,53,556,38],[383,55,556,40],[384,6,558,4],[384,10,558,10,"wrapType"],[384,18,558,18],[384,21,559,6,"REACT_NATIVE_VERSION"],[384,88,559,26],[384,89,559,27,"minor"],[384,94,559,32],[384,97,559,35],[384,99,559,37],[384,103,559,41,"REACT_NATIVE_VERSION"],[384,170,559,61],[384,171,559,62,"major"],[384,176,559,67],[384,179,559,70],[384,180,559,71],[384,183,561,10,"ref"],[384,186,561,13],[384,187,561,14,"_reactInternals"],[384,202,561,29],[384,203,561,30,"elementType"],[384,214,561,41],[384,217,563,10,"ref"],[384,220,563,13],[384,221,563,14,"_reactInternalFiber"],[384,240,563,33],[384,241,563,34,"elementType"],[384,252,563,45],[385,6,565,4],[385,10,565,8,"instance"],[385,18,565,16],[385,21,566,6,"RNRenderer"],[385,83,566,16],[385,84,566,17,"findHostInstance_DEPRECATED"],[385,111,566,44],[385,112,567,8,"ref"],[385,115,567,11],[385,116,568,7],[385,117,568,8,"_internalFiberInstanceHandleDEV"],[385,148,568,39],[386,6,571,4],[386,13,571,11,"instance"],[386,21,571,19],[386,25,571,23,"instance"],[386,33,571,31],[386,34,571,32,"elementType"],[386,45,571,43],[386,50,571,48,"wrapType"],[386,58,571,56],[386,60,571,58],[387,8,573,6],[387,12,573,10,"instance"],[387,20,573,18],[387,21,573,19,"sibling"],[387,28,573,26],[387,30,573,28],[388,10,574,8],[388,16,574,14],[388,20,574,18,"Error"],[388,25,574,23],[388,26,575,10],[388,269,575,253],[388,270,576,9],[389,8,577,6],[390,8,580,6,"instance"],[390,16,580,14],[390,19,580,17,"instance"],[390,27,580,25],[390,28,580,26,"return"],[390,34,580,32],[391,6,581,4],[392,4,582,2],[393,2,583,0],[394,2,585,0],[394,6,585,6,"applyUserSelectProp"],[394,25,585,25],[394,28,585,28],[394,37,585,6,"applyUserSelectProp"],[394,56,585,25],[394,57,586,2,"userSelect"],[394,67,586,24],[394,69,587,2,"gesture"],[394,76,587,40],[394,78,588,11],[395,4,589,2],[395,9,589,7],[395,13,589,13,"g"],[395,14,589,14],[395,18,589,18,"gesture"],[395,25,589,25],[395,26,589,26,"toGestureArray"],[395,40,589,40],[395,42,589,42],[395,44,589,44],[396,6,590,4,"g"],[396,7,590,5],[396,8,590,6,"config"],[396,14,590,12],[396,15,590,13,"userSelect"],[396,25,590,23],[396,28,590,26,"userSelect"],[396,38,590,36],[397,4,591,2],[398,2,592,0],[398,3,592,1],[399,2,605,7],[399,6,605,13,"GestureDetector"],[399,21,605,28],[399,24,605,31],[399,33,605,13,"GestureDetector"],[399,48,605,28],[399,49,605,32,"props"],[399,54,605,59],[399,56,605,64],[400,4,606,2],[400,8,606,8,"gestureConfig"],[400,21,606,21],[400,24,606,24,"props"],[400,29,606,29],[400,30,606,30,"gesture"],[400,37,606,37],[401,4,608,2],[401,8,608,6,"props"],[401,13,608,11],[401,14,608,12,"userSelect"],[401,24,608,22],[401,26,608,24],[402,6,609,4,"applyUserSelectProp"],[402,25,609,23],[402,26,609,24,"props"],[402,31,609,29],[402,32,609,30,"userSelect"],[402,42,609,40],[402,44,609,42,"gestureConfig"],[402,57,609,55],[402,58,609,56],[403,4,610,2],[404,4,612,2],[404,8,612,8,"gesture"],[404,15,612,15],[404,18,612,18,"gestureConfig"],[404,31,612,31],[404,32,612,32,"toGestureArray"],[404,46,612,46],[404,48,612,48],[405,4,613,2],[405,8,613,8,"useReanimatedHook"],[405,25,613,25],[405,28,613,28,"gesture"],[405,35,613,35],[405,36,613,36,"some"],[405,40,613,40],[405,41,613,41],[405,51,613,42,"g"],[405,52,613,43],[406,6,613,43],[406,13,613,48,"g"],[406,14,613,49],[406,15,613,50,"shouldUseReanimated"],[406,34,613,69],[407,4,613,69],[407,6,613,70],[408,4,616,2],[408,8,616,8,"state"],[408,13,616,13],[408,16,616,16],[408,20,616,16,"useRef"],[408,33,616,22],[408,35,616,45],[409,6,617,4,"firstRender"],[409,17,617,15],[409,19,617,17],[409,23,617,21],[410,6,618,4,"viewRef"],[410,13,618,11],[410,15,618,13],[410,19,618,17],[411,6,619,4,"previousViewTag"],[411,21,619,19],[411,23,619,21],[411,24,619,22],[411,25,619,23],[412,6,620,4,"forceReattach"],[412,19,620,17],[412,21,620,19],[413,4,621,2],[413,5,621,3],[413,6,621,4],[413,7,621,5,"current"],[413,14,621,12],[414,4,622,2],[414,8,622,8,"mountedRef"],[414,18,622,18],[414,21,622,21],[414,25,622,21,"useRef"],[414,38,622,27],[414,40,622,28],[414,45,622,33],[414,46,622,34],[415,4,623,2],[415,8,623,8,"webEventHandlersRef"],[415,27,623,27],[415,30,623,30],[415,34,623,30,"useRef"],[415,47,623,36],[415,49,623,54],[416,6,624,4,"onGestureHandlerEvent"],[416,27,624,25],[416,29,624,27],[416,60,624,28,"e"],[416,61,624,63],[416,63,624,68],[417,8,625,6],[417,12,625,6,"onGestureHandlerEvent"],[417,84,625,27],[417,86,625,28,"e"],[417,87,625,29],[417,88,625,30,"nativeEvent"],[417,99,625,41],[417,100,625,42],[418,6,626,4],[418,7,626,5],[419,6,627,4,"onGestureHandlerStateChange"],[419,33,627,31],[419,35,627,33],[419,39,627,33,"isExperimentalWebImplementationEnabled"],[419,154,627,71],[419,157,627,73],[419,160,628,8],[419,170,628,9,"e"],[419,171,628,44],[419,173,628,49],[420,8,629,10],[420,12,629,10,"onGestureHandlerEvent"],[420,84,629,31],[420,86,629,32,"e"],[420,87,629,33],[420,88,629,34,"nativeEvent"],[420,99,629,45],[420,100,629,46],[421,6,630,8],[421,7,630,9],[421,10,631,8,"undefined"],[422,4,632,2],[422,5,632,3],[422,6,632,4],[423,4,634,2],[423,20,634,40],[423,24,634,40,"useState"],[423,39,634,48],[423,41,634,49],[423,46,634,54],[423,47,634,55],[424,6,634,55],[425,6,634,9,"renderState"],[425,17,634,20],[426,6,634,22,"setRenderState"],[426,20,634,36],[427,4,635,2],[427,13,635,11,"forceRender"],[427,24,635,22],[427,27,635,25],[428,6,636,4,"setRenderState"],[428,20,636,18],[428,21,636,19],[428,22,636,20,"renderState"],[428,33,636,31],[428,34,636,32],[429,4,637,2],[430,4,639,2],[430,8,639,8,"preparedGesture"],[430,23,639,23],[430,26,639,26,"React"],[430,40,639,31],[430,41,639,32,"useRef"],[430,47,639,38],[430,48,639,63],[431,6,640,4,"config"],[431,12,640,10],[431,14,640,12,"gesture"],[431,21,640,19],[432,6,641,4,"animatedEventHandler"],[432,26,641,24],[432,28,641,26],[432,32,641,30],[433,6,642,4,"animatedHandlers"],[433,22,642,20],[433,24,642,22],[433,28,642,26],[434,6,643,4,"firstExecution"],[434,20,643,18],[434,22,643,20],[434,26,643,24],[435,6,644,4,"useReanimatedHook"],[435,23,644,21],[435,25,644,23,"useReanimatedHook"],[436,4,645,2],[436,5,645,3],[436,6,645,4],[436,7,645,5,"current"],[436,14,645,12],[437,4,647,2],[437,8,647,6,"useReanimatedHook"],[437,25,647,23],[437,30,647,28,"preparedGesture"],[437,45,647,43],[437,46,647,44,"useReanimatedHook"],[437,63,647,61],[437,65,647,63],[438,6,648,4],[438,12,648,10],[438,16,648,14,"Error"],[438,21,648,19],[438,22,649,6],[438,26,649,6,"tagMessage"],[438,83,649,16],[438,85,650,8],[438,165,650,88],[438,166,651,7],[438,167,652,5],[439,4,653,2],[440,4,655,2],[440,13,655,11,"onHandlersUpdate"],[440,29,655,27],[440,30,655,28,"skipConfigUpdate"],[440,46,655,54],[440,48,655,56],[441,6,657,4],[441,10,657,10,"viewTag"],[441,17,657,17],[441,20,657,20],[441,24,657,20,"findNodeHandle"],[441,97,657,34],[441,99,657,35,"state"],[441,104,657,40],[441,105,657,41,"viewRef"],[441,112,657,48],[441,113,657,59],[442,6,658,4],[442,10,658,10,"forceReattach"],[442,23,658,23],[442,26,658,26,"viewTag"],[442,33,658,33],[442,38,658,38,"state"],[442,43,658,43],[442,44,658,44,"previousViewTag"],[442,59,658,59],[443,6,660,4],[443,10,660,8,"forceReattach"],[443,23,660,21],[443,27,660,25,"needsToReattach"],[443,42,660,40],[443,43,660,41,"preparedGesture"],[443,58,660,56],[443,60,660,58,"gesture"],[443,67,660,65],[443,68,660,66],[443,70,660,68],[444,8,661,6,"validateDetectorChildren"],[444,32,661,30],[444,33,661,31,"state"],[444,38,661,36],[444,39,661,37,"viewRef"],[444,46,661,44],[444,47,661,45],[445,8,662,6,"dropHandlers"],[445,20,662,18],[445,21,662,19,"preparedGesture"],[445,36,662,34],[445,37,662,35],[446,8,663,6,"attachHandlers"],[446,22,663,20],[446,23,663,21],[447,10,664,8,"preparedGesture"],[447,25,664,23],[447,27,664,8,"preparedGesture"],[447,42,664,23],[448,10,665,8,"gestureConfig"],[448,23,665,21],[448,25,665,8,"gestureConfig"],[448,38,665,21],[449,10,666,8,"gesture"],[449,17,666,15],[449,19,666,8,"gesture"],[449,26,666,15],[450,10,667,8,"webEventHandlersRef"],[450,29,667,27],[450,31,667,8,"webEventHandlersRef"],[450,50,667,27],[451,10,668,8,"viewTag"],[451,17,668,15],[451,19,668,8,"viewTag"],[451,26,668,15],[452,10,669,8,"mountedRef"],[452,20,669,18],[452,22,669,8,"mountedRef"],[453,8,670,6],[453,9,670,7],[453,10,670,8],[454,8,672,6,"state"],[454,13,672,11],[454,14,672,12,"previousViewTag"],[454,29,672,27],[454,32,672,30,"viewTag"],[454,39,672,37],[455,8,673,6,"state"],[455,13,673,11],[455,14,673,12,"forceReattach"],[455,27,673,25],[455,30,673,28,"forceReattach"],[455,43,673,41],[456,8,674,6],[456,12,674,10,"forceReattach"],[456,25,674,23],[456,27,674,25],[457,10,675,8,"forceRender"],[457,21,675,19],[457,23,675,21],[458,8,676,6],[459,6,677,4],[459,7,677,5],[459,13,677,11],[459,17,677,15],[459,18,677,16,"skipConfigUpdate"],[459,34,677,32],[459,36,677,34],[460,8,678,6,"updateHandlers"],[460,22,678,20],[460,23,678,21,"preparedGesture"],[460,38,678,36],[460,40,678,38,"gestureConfig"],[460,53,678,51],[460,55,678,53,"gesture"],[460,62,678,60],[460,64,678,62,"mountedRef"],[460,74,678,72],[460,75,678,73],[461,6,679,4],[462,4,680,2],[463,4,684,2],[463,8,684,8,"needsToRebuildReanimatedEvent"],[463,37,684,37],[463,40,685,4,"preparedGesture"],[463,55,685,19],[463,56,685,20,"firstExecution"],[463,70,685,34],[463,74,686,4,"needsToReattach"],[463,89,686,19],[463,90,686,20,"preparedGesture"],[463,105,686,35],[463,107,686,37,"gesture"],[463,114,686,44],[463,115,686,45],[463,119,687,4,"state"],[463,124,687,9],[463,125,687,10,"forceReattach"],[463,138,687,23],[464,4,689,2,"state"],[464,9,689,7],[464,10,689,8,"forceReattach"],[464,23,689,21],[464,26,689,24],[464,31,689,29],[465,4,691,2],[465,8,691,6,"preparedGesture"],[465,23,691,21],[465,24,691,22,"firstExecution"],[465,38,691,36],[465,40,691,38],[466,6,692,4,"gestureConfig"],[466,19,692,17],[466,20,692,18,"initialize"],[466,30,692,28],[466,32,692,30],[467,4,693,2],[468,4,695,2],[468,8,695,6,"useReanimatedHook"],[468,25,695,23],[468,27,695,25],[469,6,698,4,"useAnimatedGesture"],[469,24,698,22],[469,25,698,23,"preparedGesture"],[469,40,698,38],[469,42,698,40,"needsToRebuildReanimatedEvent"],[469,71,698,69],[469,72,698,70],[470,4,699,2],[471,4,701,2],[471,8,701,2,"useEffect"],[471,24,701,11],[471,26,701,12],[471,38,701,18],[472,6,702,4],[472,10,702,10,"viewTag"],[472,17,702,17],[472,20,702,20],[472,24,702,20,"findNodeHandle"],[472,97,702,34],[472,99,702,35,"state"],[472,104,702,40],[472,105,702,41,"viewRef"],[472,112,702,48],[472,113,702,59],[473,6,703,4,"state"],[473,11,703,9],[473,12,703,10,"firstRender"],[473,23,703,21],[473,26,703,24],[473,30,703,28],[474,6,704,4,"mountedRef"],[474,16,704,14],[474,17,704,15,"current"],[474,24,704,22],[474,27,704,25],[474,31,704,29],[475,6,706,4,"validateDetectorChildren"],[475,30,706,28],[475,31,706,29,"state"],[475,36,706,34],[475,37,706,35,"viewRef"],[475,44,706,42],[475,45,706,43],[476,6,708,4,"attachHandlers"],[476,20,708,18],[476,21,708,19],[477,8,709,6,"preparedGesture"],[477,23,709,21],[477,25,709,6,"preparedGesture"],[477,40,709,21],[478,8,710,6,"gestureConfig"],[478,21,710,19],[478,23,710,6,"gestureConfig"],[478,36,710,19],[479,8,711,6,"gesture"],[479,15,711,13],[479,17,711,6,"gesture"],[479,24,711,13],[480,8,712,6,"webEventHandlersRef"],[480,27,712,25],[480,29,712,6,"webEventHandlersRef"],[480,48,712,25],[481,8,713,6,"viewTag"],[481,15,713,13],[481,17,713,6,"viewTag"],[481,24,713,13],[482,8,714,6,"mountedRef"],[482,18,714,16],[482,20,714,6,"mountedRef"],[483,6,715,4],[483,7,715,5],[483,8,715,6],[484,6,717,4],[484,13,717,11],[484,25,717,17],[485,8,718,6,"mountedRef"],[485,18,718,16],[485,19,718,17,"current"],[485,26,718,24],[485,29,718,27],[485,34,718,32],[486,8,719,6,"dropHandlers"],[486,20,719,18],[486,21,719,19,"preparedGesture"],[486,36,719,34],[486,37,719,35],[487,6,720,4],[487,7,720,5],[488,4,721,2],[488,5,721,3],[488,7,721,5],[488,9,721,7],[488,10,721,8],[489,4,723,2],[489,8,723,2,"useEffect"],[489,24,723,11],[489,26,723,12],[489,38,723,18],[490,6,724,4],[490,10,724,8],[490,11,724,9,"state"],[490,16,724,14],[490,17,724,15,"firstRender"],[490,28,724,26],[490,30,724,28],[491,8,725,6,"onHandlersUpdate"],[491,24,725,22],[491,26,725,24],[492,6,726,4],[492,7,726,5],[492,13,726,11],[493,8,727,6,"state"],[493,13,727,11],[493,14,727,12,"firstRender"],[493,25,727,23],[493,28,727,26],[493,33,727,31],[494,6,728,4],[495,4,729,2],[495,5,729,3],[495,7,729,5],[495,8,729,6,"props"],[495,13,729,11],[495,14,729,12],[495,15,729,13],[496,4,731,2],[496,8,731,8,"refFunction"],[496,19,731,19],[496,22,731,22],[496,31,731,8,"refFunction"],[496,42,731,19],[496,43,731,23,"ref"],[496,46,731,35],[496,48,731,40],[497,6,732,4],[497,10,732,8,"ref"],[497,13,732,11],[497,18,732,16],[497,22,732,20],[497,24,732,22],[498,8,734,6,"state"],[498,13,734,11],[498,14,734,12,"viewRef"],[498,21,734,19],[498,24,734,22,"ref"],[498,27,734,25],[499,8,737,6],[499,12,737,10,"state"],[499,17,737,15],[499,18,737,16,"previousViewTag"],[499,33,737,31],[499,38,737,36],[499,39,737,37],[499,40,737,38],[499,42,737,40],[500,10,738,8,"state"],[500,15,738,13],[500,16,738,14,"previousViewTag"],[500,31,738,29],[500,34,738,32],[500,38,738,32,"findNodeHandle"],[500,111,738,46],[500,113,738,47,"state"],[500,118,738,52],[500,119,738,53,"viewRef"],[500,126,738,60],[500,127,738,71],[501,8,739,6],[502,8,743,6,"onHandlersUpdate"],[502,24,743,22],[502,25,743,23],[502,29,743,27],[502,30,743,28],[503,8,745,6],[503,12,745,10],[503,16,745,10,"isFabric"],[503,71,745,18],[503,74,745,20],[503,76,745,22],[504,10,746,8],[504,14,746,14,"node"],[504,19,746,18],[504,22,746,21],[504,26,746,21,"getShadowNodeFromRef"],[504,108,746,41],[504,110,746,42,"ref"],[504,113,746,45],[504,114,746,46],[505,10,747,8],[505,14,747,12,"global"],[505,20,747,18],[505,21,747,19,"isFormsStackingContext"],[505,43,747,41],[505,44,747,42,"node"],[505,49,747,46],[505,50,747,47],[505,55,747,52],[505,60,747,57],[505,62,747,59],[506,12,748,10,"console"],[506,19,748,17],[506,20,748,18,"error"],[506,25,748,23],[506,26,749,12],[506,30,749,12,"tagMessage"],[506,87,749,22],[506,89,750,14],[506,157,750,82],[506,160,751,16],[506,258,751,114],[506,259,752,13],[506,260,753,11],[507,10,754,8],[508,8,755,6],[509,6,756,4],[510,4,757,2],[510,5,757,3],[511,4,759,2],[511,8,759,6,"useReanimatedHook"],[511,25,759,23],[511,27,759,25],[512,6,760,4],[512,13,761,6],[512,75,761,7],[512,87,761,19],[513,8,762,8],[513,11,762,11],[513,13,762,13,"refFunction"],[513,24,762,25],[514,8,763,8],[514,29,763,29],[514,31,763,31,"preparedGesture"],[514,46,763,46],[514,47,763,47,"animatedEventHandler"],[514,67,763,68],[515,8,763,68],[515,18,764,9,"props"],[515,23,764,14],[515,24,764,15,"children"],[516,6,764,23],[516,8,765,21],[517,4,767,2],[517,5,767,3],[517,11,767,9],[518,6,768,4],[518,13,768,11],[518,75,768,12],[518,79,768,16],[519,8,768,17],[519,11,768,20],[519,13,768,22,"refFunction"],[519,24,768,34],[520,8,768,34],[520,18,768,36,"props"],[520,23,768,41],[520,24,768,42,"children"],[521,6,768,50],[521,8,768,58],[522,4,769,2],[523,2,770,0],[523,3,770,1],[524,2,770,2],[525,2,770,2],[525,6,772,6,"Wrap"],[525,10,772,10],[526,4,772,10],[527,4,772,10],[528,4,772,10],[529,6,772,10],[530,6,772,10],[531,4,772,10],[532,4,772,10],[533,6,772,10],[534,6,772,10],[534,13,777,2],[534,31,777,11],[535,8,778,4],[535,12,778,8],[536,10,784,6],[536,14,784,12,"child"],[536,19,784,22],[536,22,784,25,"React"],[536,36,784,30],[536,37,784,31,"Children"],[536,45,784,39],[536,46,784,40,"only"],[536,50,784,44],[536,51,784,45],[536,55,784,49],[536,56,784,50,"props"],[536,61,784,55],[536,62,784,56,"children"],[536,70,784,64],[536,71,784,65],[537,10,785,6],[537,17,785,13,"React"],[537,31,785,18],[537,32,785,19,"cloneElement"],[537,44,785,31],[537,45,786,8,"child"],[537,50,786,13],[537,52,787,8],[538,12,787,10,"collapsable"],[538,23,787,21],[538,25,787,23],[539,10,787,29],[539,11,787,30],[539,13,789,8,"child"],[539,18,789,13],[539,19,789,14,"props"],[539,24,789,19],[539,25,789,20,"children"],[539,33,789,28],[539,34,790,7],[540,8,791,4],[540,9,791,5],[540,10,791,6],[540,17,791,13,"e"],[540,18,791,14],[540,20,791,16],[541,10,792,6],[541,16,792,12],[541,20,792,16,"Error"],[541,25,792,21],[541,26,793,8],[541,30,793,8,"tagMessage"],[541,87,793,18],[541,89,794,11],[541,260,794,181],[541,261,795,9],[541,262,796,7],[542,8,797,4],[543,6,798,2],[544,4,798,3],[545,4,798,3],[546,2,798,3],[546,4,772,19,"React"],[546,18,772,24],[546,19,772,25,"Component"],[546,28,772,34],[547,2,801,0],[547,6,801,6,"AnimatedWrap"],[547,18,801,18],[547,46,801,21,"Reanimated"],[547,111,801,31],[547,154,801,21,"Reanimated"],[547,219,801,31],[547,220,801,33,"default"],[547,227,801,40],[547,248,801,21],[547,268,801,42,"createAnimatedComponent"],[547,291,801,65],[547,292,801,66,"Wrap"],[547,296,801,70],[547,297,801,71],[547,333,801,75,"Wrap"],[547,337,801,79],[548,0,801,80]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","dropHandlers","checkGestureCallbacksForWorklets","attachHandlers","setImmediate$argument_0","isAnimatedGesture","gesture.filter.map$argument_0","updateHandlers","preparedGesture.config.filter$argument_0","preparedGesture.config.filter.map$argument_0","needsToReattach","isStateChangeEvent","isTouchEvent","getHandler","touchEventTypeToCallbackType","runWorklet","useAnimatedGesture","callback","validateDetectorChildren","applyUserSelectProp","GestureDetector","gesture.some$argument_0","useRef$argument_0.onGestureHandlerEvent","<anonymous>","forceRender","onHandlersUpdate","useEffect$argument_0","refFunction","Wrap","Wrap#render"],"mappings":"AAA;ACsE;CDU;AEE;uDCE,gBD;CFE;AIE;CJQ;AKE;CLmB;AMkB;eCgB;GDK;eCe;GD2B;8BE4B,yCF;WGI,iBH;CNI;AUE;eHuB;gBIiC,4BJ;aKC,iBL;GG2B;CVC;AaE;CbkB;AcE;CdM;AeE;CfK;AgBE;ChB2B;AiBE;CjBe;AkBE;ClBe;AmBE;mBCuB;GD2E;CnBW;AqBG;CrBiD;4BsBE;CtBO;+BuBa;yCCQ,4BD;2BEW;KFE;QGE;SHE;EIK;GJE;EKkB;GLyB;YMqB;WHgB;KGG;GNC;YME;GNM;sBOE;GP0B;CvBa;A+BE;ECK;GDqB;C/BC"}},"type":"js/module"}]}