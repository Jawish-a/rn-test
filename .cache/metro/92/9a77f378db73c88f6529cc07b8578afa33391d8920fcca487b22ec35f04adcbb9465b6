{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":350},"end":{"line":14,"column":57,"index":407}},{"start":{"line":15,"column":0,"index":408},"end":{"line":15,"column":48,"index":456}},{"start":{"line":16,"column":0,"index":457},"end":{"line":16,"column":32,"index":489}},{"start":{"line":18,"column":0,"index":544},"end":{"line":18,"column":34,"index":578}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../../StyleSheet/processColor","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":350},"end":{"line":14,"column":57,"index":407}}],"key":"B+D7rlFdJQKTemh/Dn5BCc6CiY4="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":408},"end":{"line":15,"column":48,"index":456}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../View/View","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":457},"end":{"line":16,"column":32,"index":489}}],"key":"5RouqHua0dKv+sW+w8ijnac3atc="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":544},"end":{"line":18,"column":34,"index":578}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":579},"end":{"line":19,"column":31,"index":610}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../View/ViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":80,"column":12,"index":2394},"end":{"line":80,"column":20,"index":2402},"identifierName":"Commands"},{"start":{"line":85,"column":12,"index":2561},"end":{"line":85,"column":20,"index":2569},"identifierName":"Commands"},{"start":{"line":91,"column":12,"index":2746},"end":{"line":91,"column":20,"index":2754},"identifierName":"Commands"},{"start":{"line":101,"column":12,"index":3052},"end":{"line":101,"column":20,"index":3060},"identifierName":"Commands"}],"key":"HaN1n2kLlm0eqmCnXh81Q8YvWVE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useAndroidRippleForView;\n  var _processColor = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../../StyleSheet/processColor\"));\n  var _Platform = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"../../Utilities/Platform\"));\n  var _View = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"../View/View\"));\n  var _invariant = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"invariant\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function useAndroidRippleForView(rippleConfig, viewRef) {\n    var _ref = rippleConfig != null ? rippleConfig : {},\n      color = _ref.color,\n      borderless = _ref.borderless,\n      radius = _ref.radius,\n      foreground = _ref.foreground;\n    return (0, React.useMemo)(function () {\n      if (_Platform.default.OS === 'android' && _Platform.default.Version >= 21 && (color != null || borderless != null || radius != null)) {\n        var processedColor = (0, _processColor.default)(color);\n        (0, _invariant.default)(processedColor == null || typeof processedColor === 'number', 'Unexpected color given for Ripple color');\n        var nativeRippleValue = {\n          type: 'RippleAndroid',\n          color: processedColor,\n          borderless: borderless === true,\n          rippleRadius: radius\n        };\n        return {\n          viewProps: foreground === true ? {\n            nativeForegroundAndroid: nativeRippleValue\n          } : {\n            nativeBackgroundAndroid: nativeRippleValue\n          },\n          onPressIn: function onPressIn(event) {\n            var view = viewRef.current;\n            if (view != null) {\n              var _event$nativeEvent$lo, _event$nativeEvent$lo2;\n              _$$_REQUIRE(_dependencyMap[6], \"../View/ViewNativeComponent\").Commands.hotspotUpdate(view, (_event$nativeEvent$lo = event.nativeEvent.locationX) != null ? _event$nativeEvent$lo : 0, (_event$nativeEvent$lo2 = event.nativeEvent.locationY) != null ? _event$nativeEvent$lo2 : 0);\n              _$$_REQUIRE(_dependencyMap[6], \"../View/ViewNativeComponent\").Commands.setPressed(view, true);\n            }\n          },\n          onPressMove: function onPressMove(event) {\n            var view = viewRef.current;\n            if (view != null) {\n              var _event$nativeEvent$lo3, _event$nativeEvent$lo4;\n              _$$_REQUIRE(_dependencyMap[6], \"../View/ViewNativeComponent\").Commands.hotspotUpdate(view, (_event$nativeEvent$lo3 = event.nativeEvent.locationX) != null ? _event$nativeEvent$lo3 : 0, (_event$nativeEvent$lo4 = event.nativeEvent.locationY) != null ? _event$nativeEvent$lo4 : 0);\n            }\n          },\n          onPressOut: function onPressOut(event) {\n            var view = viewRef.current;\n            if (view != null) {\n              _$$_REQUIRE(_dependencyMap[6], \"../View/ViewNativeComponent\").Commands.setPressed(view, false);\n            }\n          }\n        };\n      }\n      return null;\n    }, [borderless, color, foreground, radius, viewRef]);\n  }\n});","lineCount":61,"map":[[6,2,14,0],[7,2,15,0],[8,2,16,0],[9,2,18,0],[10,2,19,0],[11,2,19,31],[12,2,19,31],[13,2,40,15],[13,11,40,24,"useAndroidRippleForView"],[13,34,40,47],[13,35,41,2,"rippleConfig"],[13,47,41,29],[13,49,42,2,"viewRef"],[13,56,42,60],[13,58,50,4],[14,4,51,2],[14,15,51,50,"rippleConfig"],[14,27,51,62],[14,38,51,50,"rippleConfig"],[14,50,51,62],[14,53,51,66],[14,54,51,67],[14,55,51,68],[15,6,51,9,"color"],[15,11,51,14],[15,19,51,9,"color"],[15,24,51,14],[16,6,51,16,"borderless"],[16,16,51,26],[16,24,51,16,"borderless"],[16,34,51,26],[17,6,51,28,"radius"],[17,12,51,34],[17,20,51,28,"radius"],[17,26,51,34],[18,6,51,36,"foreground"],[18,16,51,46],[18,24,51,36,"foreground"],[18,34,51,46],[19,4,53,2],[19,11,53,9],[19,15,53,9,"useMemo"],[19,28,53,16],[19,30,53,17],[19,42,53,23],[20,6,54,4],[20,10,55,6,"Platform"],[20,27,55,14],[20,28,55,15,"OS"],[20,30,55,17],[20,35,55,22],[20,44,55,31],[20,48,56,6,"Platform"],[20,65,56,14],[20,66,56,15,"Version"],[20,73,56,22],[20,77,56,26],[20,79,56,28],[20,84,57,7,"color"],[20,89,57,12],[20,93,57,16],[20,97,57,20],[20,101,57,24,"borderless"],[20,111,57,34],[20,115,57,38],[20,119,57,42],[20,123,57,46,"radius"],[20,129,57,52],[20,133,57,56],[20,137,57,60],[20,138,57,61],[20,140,58,6],[21,8,59,6],[21,12,59,12,"processedColor"],[21,26,59,26],[21,29,59,29],[21,33,59,29,"processColor"],[21,54,59,41],[21,56,59,42,"color"],[21,61,59,47],[21,62,59,48],[22,8,60,6],[22,12,60,6,"invariant"],[22,30,60,15],[22,32,61,8,"processedColor"],[22,46,61,22],[22,50,61,26],[22,54,61,30],[22,58,61,34],[22,65,61,41,"processedColor"],[22,79,61,55],[22,84,61,60],[22,92,61,68],[22,94,62,8],[22,135,62,49],[22,136,63,7],[23,8,65,6],[23,12,65,12,"nativeRippleValue"],[23,29,65,29],[23,32,65,32],[24,10,66,8,"type"],[24,14,66,12],[24,16,66,14],[24,31,66,29],[25,10,67,8,"color"],[25,15,67,13],[25,17,67,15,"processedColor"],[25,31,67,29],[26,10,68,8,"borderless"],[26,20,68,18],[26,22,68,20,"borderless"],[26,32,68,30],[26,37,68,35],[26,41,68,39],[27,10,69,8,"rippleRadius"],[27,22,69,20],[27,24,69,22,"radius"],[28,8,70,6],[28,9,70,7],[29,8,72,6],[29,15,72,13],[30,10,73,8,"viewProps"],[30,19,73,17],[30,21,74,10,"foreground"],[30,31,74,20],[30,36,74,25],[30,40,74,29],[30,43,75,14],[31,12,75,15,"nativeForegroundAndroid"],[31,35,75,38],[31,37,75,40,"nativeRippleValue"],[32,10,75,57],[32,11,75,58],[32,14,76,14],[33,12,76,15,"nativeBackgroundAndroid"],[33,35,76,38],[33,37,76,40,"nativeRippleValue"],[34,10,76,57],[34,11,76,58],[35,10,77,8,"onPressIn"],[35,19,77,17],[35,40,77,18,"event"],[35,45,77,35],[35,47,77,43],[36,12,78,10],[36,16,78,16,"view"],[36,20,78,20],[36,23,78,23,"viewRef"],[36,30,78,30],[36,31,78,31,"current"],[36,38,78,38],[37,12,79,10],[37,16,79,14,"view"],[37,20,79,18],[37,24,79,22],[37,28,79,26],[37,30,79,28],[38,14,79,28],[39,14,80,12,"Commands"],[39,84,80,20],[39,85,80,21,"hotspotUpdate"],[39,98,80,34],[39,99,81,14,"view"],[39,103,81,18],[39,130,82,14,"event"],[39,135,82,19],[39,136,82,20,"nativeEvent"],[39,147,82,31],[39,148,82,32,"locationX"],[39,157,82,41],[39,193,82,45],[39,194,82,46],[39,222,83,14,"event"],[39,227,83,19],[39,228,83,20,"nativeEvent"],[39,239,83,31],[39,240,83,32,"locationY"],[39,249,83,41],[39,286,83,45],[39,287,83,46],[39,288,84,13],[40,14,85,12,"Commands"],[40,84,85,20],[40,85,85,21,"setPressed"],[40,95,85,31],[40,96,85,32,"view"],[40,100,85,36],[40,102,85,38],[40,106,85,42],[40,107,85,43],[41,12,86,10],[42,10,87,8],[42,11,87,9],[43,10,88,8,"onPressMove"],[43,21,88,19],[43,44,88,20,"event"],[43,49,88,37],[43,51,88,45],[44,12,89,10],[44,16,89,16,"view"],[44,20,89,20],[44,23,89,23,"viewRef"],[44,30,89,30],[44,31,89,31,"current"],[44,38,89,38],[45,12,90,10],[45,16,90,14,"view"],[45,20,90,18],[45,24,90,22],[45,28,90,26],[45,30,90,28],[46,14,90,28],[47,14,91,12,"Commands"],[47,84,91,20],[47,85,91,21,"hotspotUpdate"],[47,98,91,34],[47,99,92,14,"view"],[47,103,92,18],[47,131,93,14,"event"],[47,136,93,19],[47,137,93,20,"nativeEvent"],[47,148,93,31],[47,149,93,32,"locationX"],[47,158,93,41],[47,195,93,45],[47,196,93,46],[47,224,94,14,"event"],[47,229,94,19],[47,230,94,20,"nativeEvent"],[47,241,94,31],[47,242,94,32,"locationY"],[47,251,94,41],[47,288,94,45],[47,289,94,46],[47,290,95,13],[48,12,96,10],[49,10,97,8],[49,11,97,9],[50,10,98,8,"onPressOut"],[50,20,98,18],[50,42,98,19,"event"],[50,47,98,36],[50,49,98,44],[51,12,99,10],[51,16,99,16,"view"],[51,20,99,20],[51,23,99,23,"viewRef"],[51,30,99,30],[51,31,99,31,"current"],[51,38,99,38],[52,12,100,10],[52,16,100,14,"view"],[52,20,100,18],[52,24,100,22],[52,28,100,26],[52,30,100,28],[53,14,101,12,"Commands"],[53,84,101,20],[53,85,101,21,"setPressed"],[53,95,101,31],[53,96,101,32,"view"],[53,100,101,36],[53,102,101,38],[53,107,101,43],[53,108,101,44],[54,12,102,10],[55,10,103,8],[56,8,104,6],[56,9,104,7],[57,6,105,4],[58,6,106,4],[58,13,106,11],[58,17,106,15],[59,4,107,2],[59,5,107,3],[59,7,107,5],[59,8,107,6,"borderless"],[59,18,107,16],[59,20,107,18,"color"],[59,25,107,23],[59,27,107,25,"foreground"],[59,37,107,35],[59,39,107,37,"radius"],[59,45,107,43],[59,47,107,45,"viewRef"],[59,54,107,52],[59,55,107,53],[59,56,107,54],[60,2,108,0],[61,0,108,1]],"functionMap":{"names":["<global>","useAndroidRippleForView","useMemo$argument_0","onPressIn","onPressMove","onPressOut"],"mappings":"AAA;eCuC;iBCa;QCwB;SDU;QEC;SFS;QGC;SHK;GDI;CDC"}},"type":"js/module"}]}