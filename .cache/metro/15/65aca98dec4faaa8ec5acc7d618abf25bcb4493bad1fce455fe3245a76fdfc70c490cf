{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":378},"end":{"line":14,"column":78,"index":456}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../../Core/Devtools/symbolicateStackTrace","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":378},"end":{"line":14,"column":78,"index":456}}],"key":"n60ah/lwtLYB4UoetA/F80ADxcA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deleteStack = deleteStack;\n  exports.symbolicate = symbolicate;\n  var _symbolicateStackTrace = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../../Core/Devtools/symbolicateStackTrace\"));\n  var cache = new Map();\n  var sanitize = function sanitize(_ref) {\n    var maybeStack = _ref.stack,\n      codeFrame = _ref.codeFrame;\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n    var stack = [];\n    for (var maybeFrame of maybeStack) {\n      var collapse = false;\n      if ('collapse' in maybeFrame) {\n        if (typeof maybeFrame.collapse !== 'boolean') {\n          throw new Error('Expected stack frame `collapse` to be a boolean.');\n        }\n        collapse = maybeFrame.collapse;\n      }\n      stack.push({\n        column: maybeFrame.column,\n        file: maybeFrame.file,\n        lineNumber: maybeFrame.lineNumber,\n        methodName: maybeFrame.methodName,\n        collapse: collapse\n      });\n    }\n    return {\n      stack: stack,\n      codeFrame: codeFrame\n    };\n  };\n  function deleteStack(stack) {\n    cache.delete(stack);\n  }\n  function symbolicate(stack) {\n    var promise = cache.get(stack);\n    if (promise == null) {\n      promise = (0, _symbolicateStackTrace.default)(stack).then(sanitize);\n      cache.set(stack, promise);\n    }\n    return promise;\n  }\n});","lineCount":48,"map":[[7,2,14,0],[8,2,18,0],[8,6,18,6,"cache"],[8,11,18,56],[8,14,18,59],[8,18,18,63,"Map"],[8,21,18,66],[8,23,18,68],[9,2,23,0],[9,6,23,6,"sanitize"],[9,14,23,14],[9,17,23,17],[9,26,23,6,"sanitize"],[9,34,23,14],[9,41,26,54],[10,4,26,54],[10,8,24,9,"maybeStack"],[10,18,24,19],[10,26,24,2,"stack"],[10,31,24,7],[11,6,25,2,"codeFrame"],[11,15,25,11],[11,23,25,2,"codeFrame"],[11,32,25,11],[12,4,27,2],[12,8,27,6],[12,9,27,7,"Array"],[12,14,27,12],[12,15,27,13,"isArray"],[12,22,27,20],[12,23,27,21,"maybeStack"],[12,33,27,31],[12,34,27,32],[12,36,27,34],[13,6,28,4],[13,12,28,10],[13,16,28,14,"Error"],[13,21,28,19],[13,22,28,20],[13,54,28,52],[13,55,28,53],[14,4,29,2],[15,4,30,2],[15,8,30,8,"stack"],[15,13,30,32],[15,16,30,35],[15,18,30,37],[16,4,31,2],[16,9,31,7],[16,13,31,13,"maybeFrame"],[16,23,31,23],[16,27,31,27,"maybeStack"],[16,37,31,37],[16,39,31,39],[17,6,32,4],[17,10,32,8,"collapse"],[17,18,32,16],[17,21,32,19],[17,26,32,24],[18,6,33,4],[18,10,33,8],[18,20,33,18],[18,24,33,22,"maybeFrame"],[18,34,33,32],[18,36,33,34],[19,8,34,6],[19,12,34,10],[19,19,34,17,"maybeFrame"],[19,29,34,27],[19,30,34,28,"collapse"],[19,38,34,36],[19,43,34,41],[19,52,34,50],[19,54,34,52],[20,10,35,8],[20,16,35,14],[20,20,35,18,"Error"],[20,25,35,23],[20,26,35,24],[20,76,35,74],[20,77,35,75],[21,8,36,6],[22,8,37,6,"collapse"],[22,16,37,14],[22,19,37,17,"maybeFrame"],[22,29,37,27],[22,30,37,28,"collapse"],[22,38,37,36],[23,6,38,4],[24,6,39,4,"stack"],[24,11,39,9],[24,12,39,10,"push"],[24,16,39,14],[24,17,39,15],[25,8,40,6,"column"],[25,14,40,12],[25,16,40,14,"maybeFrame"],[25,26,40,24],[25,27,40,25,"column"],[25,33,40,31],[26,8,41,6,"file"],[26,12,41,10],[26,14,41,12,"maybeFrame"],[26,24,41,22],[26,25,41,23,"file"],[26,29,41,27],[27,8,42,6,"lineNumber"],[27,18,42,16],[27,20,42,18,"maybeFrame"],[27,30,42,28],[27,31,42,29,"lineNumber"],[27,41,42,39],[28,8,43,6,"methodName"],[28,18,43,16],[28,20,43,18,"maybeFrame"],[28,30,43,28],[28,31,43,29,"methodName"],[28,41,43,39],[29,8,44,6,"collapse"],[29,16,44,14],[29,18,44,6,"collapse"],[30,6,45,4],[30,7,45,5],[30,8,45,6],[31,4,46,2],[32,4,47,2],[32,11,47,9],[33,6,47,10,"stack"],[33,11,47,15],[33,13,47,10,"stack"],[33,18,47,15],[34,6,47,17,"codeFrame"],[34,15,47,26],[34,17,47,17,"codeFrame"],[35,4,47,26],[35,5,47,27],[36,2,48,0],[36,3,48,1],[37,2,50,7],[37,11,50,16,"deleteStack"],[37,22,50,27],[37,23,50,28,"stack"],[37,28,50,40],[37,30,50,48],[38,4,51,2,"cache"],[38,9,51,7],[38,10,51,8,"delete"],[38,16,51,14],[38,17,51,15,"stack"],[38,22,51,20],[38,23,51,21],[39,2,52,0],[40,2,54,7],[40,11,54,16,"symbolicate"],[40,22,54,27],[40,23,54,28,"stack"],[40,28,54,40],[40,30,54,75],[41,4,55,2],[41,8,55,6,"promise"],[41,15,55,13],[41,18,55,16,"cache"],[41,23,55,21],[41,24,55,22,"get"],[41,27,55,25],[41,28,55,26,"stack"],[41,33,55,31],[41,34,55,32],[42,4,56,2],[42,8,56,6,"promise"],[42,15,56,13],[42,19,56,17],[42,23,56,21],[42,25,56,23],[43,6,57,4,"promise"],[43,13,57,11],[43,16,57,14],[43,20,57,14,"symbolicateStackTrace"],[43,50,57,35],[43,52,57,36,"stack"],[43,57,57,41],[43,58,57,42],[43,59,57,43,"then"],[43,63,57,47],[43,64,57,48,"sanitize"],[43,72,57,56],[43,73,57,57],[44,6,58,4,"cache"],[44,11,58,9],[44,12,58,10,"set"],[44,15,58,13],[44,16,58,14,"stack"],[44,21,58,19],[44,23,58,21,"promise"],[44,30,58,28],[44,31,58,29],[45,4,59,2],[46,4,61,2],[46,11,61,9,"promise"],[46,18,61,16],[47,2,62,0],[48,0,62,1]],"functionMap":{"names":["<global>","sanitize","deleteStack","symbolicate"],"mappings":"AAA;iBCsB;CDyB;OEE;CFE;OGE;CHQ"}},"type":"js/module"}]}