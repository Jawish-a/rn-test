{"dependencies":[{"name":"stacktrace-parser","data":{"asyncType":null,"locs":[{"start":{"line":46,"column":27,"index":1152},"end":{"line":46,"column":55,"index":1180}}],"key":"/USIDQIXWvbDieir50qMEeMzgbw="}},{"name":"./parseHermesStack","data":{"asyncType":null,"locs":[{"start":{"line":50,"column":25,"index":1300},"end":{"line":50,"column":53,"index":1328}}],"key":"+0TK05UiAfoSFoPMCSY1aPHKwYE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function convertHermesStack(stack) {\n    var frames = [];\n    for (var entry of stack.entries) {\n      if (entry.type !== 'FRAME') {\n        continue;\n      }\n      var location = entry.location,\n        functionName = entry.functionName;\n      if (location.type === 'NATIVE') {\n        continue;\n      }\n      frames.push({\n        methodName: functionName,\n        file: location.sourceUrl,\n        lineNumber: location.line1Based,\n        column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n      });\n    }\n    return frames;\n  }\n  function parseErrorStack(errorStack) {\n    if (errorStack == null) {\n      return [];\n    }\n    var stacktraceParser = _$$_REQUIRE(_dependencyMap[0], \"stacktrace-parser\");\n    var parsedStack = Array.isArray(errorStack) ? errorStack : global.HermesInternal ? convertHermesStack(_$$_REQUIRE(_dependencyMap[1], \"./parseHermesStack\")(errorStack)) : stacktraceParser.parse(errorStack).map(function (frame) {\n      return Object.assign({}, frame, {\n        column: frame.column != null ? frame.column - 1 : null\n      });\n    });\n    return parsedStack;\n  }\n  module.exports = parseErrorStack;\n});","lineCount":37,"map":[[2,2,11,0],[2,14,11,12],[4,2,18,0],[4,11,18,9,"convertHermesStack"],[4,29,18,27],[4,30,18,28,"stack"],[4,35,18,52],[4,37,18,73],[5,4,19,2],[5,8,19,8,"frames"],[5,14,19,33],[5,17,19,36],[5,19,19,38],[6,4,20,2],[6,9,20,7],[6,13,20,13,"entry"],[6,18,20,18],[6,22,20,22,"stack"],[6,27,20,27],[6,28,20,28,"entries"],[6,35,20,35],[6,37,20,37],[7,6,21,4],[7,10,21,8,"entry"],[7,15,21,13],[7,16,21,14,"type"],[7,20,21,18],[7,25,21,23],[7,32,21,30],[7,34,21,32],[8,8,22,6],[9,6,23,4],[10,6,24,4],[10,10,24,11,"location"],[10,18,24,19],[10,21,24,37,"entry"],[10,26,24,42],[10,27,24,11,"location"],[10,35,24,19],[11,8,24,21,"functionName"],[11,20,24,33],[11,23,24,37,"entry"],[11,28,24,42],[11,29,24,21,"functionName"],[11,41,24,33],[12,6,25,4],[12,10,25,8,"location"],[12,18,25,16],[12,19,25,17,"type"],[12,23,25,21],[12,28,25,26],[12,36,25,34],[12,38,25,36],[13,8,26,6],[14,6,27,4],[15,6,28,4,"frames"],[15,12,28,10],[15,13,28,11,"push"],[15,17,28,15],[15,18,28,16],[16,8,29,6,"methodName"],[16,18,29,16],[16,20,29,18,"functionName"],[16,32,29,30],[17,8,30,6,"file"],[17,12,30,10],[17,14,30,12,"location"],[17,22,30,20],[17,23,30,21,"sourceUrl"],[17,32,30,30],[18,8,31,6,"lineNumber"],[18,18,31,16],[18,20,31,18,"location"],[18,28,31,26],[18,29,31,27,"line1Based"],[18,39,31,37],[19,8,32,6,"column"],[19,14,32,12],[19,16,33,8,"location"],[19,24,33,16],[19,25,33,17,"type"],[19,29,33,21],[19,34,33,26],[19,42,33,34],[19,45,34,12,"location"],[19,53,34,20],[19,54,34,21,"column1Based"],[19,66,34,33],[19,69,34,36],[19,70,34,37],[19,73,35,12,"location"],[19,81,35,20],[19,82,35,21,"virtualOffset0Based"],[20,6,36,4],[20,7,36,5],[20,8,36,6],[21,4,37,2],[22,4,38,2],[22,11,38,9,"frames"],[22,17,38,15],[23,2,39,0],[24,2,41,0],[24,11,41,9,"parseErrorStack"],[24,26,41,24],[24,27,41,25,"errorStack"],[24,37,41,44],[24,39,41,65],[25,4,42,2],[25,8,42,6,"errorStack"],[25,18,42,16],[25,22,42,20],[25,26,42,24],[25,28,42,26],[26,6,43,4],[26,13,43,11],[26,15,43,13],[27,4,44,2],[28,4,46,2],[28,8,46,8,"stacktraceParser"],[28,24,46,24],[28,27,46,27,"require"],[28,38,46,34],[28,78,46,55],[29,4,47,2],[29,8,47,8,"parsedStack"],[29,19,47,19],[29,22,47,22,"Array"],[29,27,47,27],[29,28,47,28,"isArray"],[29,35,47,35],[29,36,47,36,"errorStack"],[29,46,47,46],[29,47,47,47],[29,50,48,6,"errorStack"],[29,60,48,16],[29,63,49,6,"global"],[29,69,49,12],[29,70,49,13,"HermesInternal"],[29,84,49,27],[29,87,50,6,"convertHermesStack"],[29,105,50,24],[29,106,50,25],[29,159,50,42,"errorStack"],[29,169,50,52],[29,170,50,53],[29,171,50,54],[29,174,51,6,"stacktraceParser"],[29,190,51,22],[29,191,51,23,"parse"],[29,196,51,28],[29,197,51,29,"errorStack"],[29,207,51,39],[29,208,51,40],[29,209,51,41,"map"],[29,212,51,44],[29,213,51,45],[29,223,51,45,"frame"],[29,228,51,50],[30,6,51,50],[30,31,52,11,"frame"],[30,36,52,16],[31,8,53,8,"column"],[31,14,53,14],[31,16,53,16,"frame"],[31,21,53,21],[31,22,53,22,"column"],[31,28,53,28],[31,32,53,32],[31,36,53,36],[31,39,53,39,"frame"],[31,44,53,44],[31,45,53,45,"column"],[31,51,53,51],[31,54,53,54],[31,55,53,55],[31,58,53,58],[32,6,53,62],[33,4,53,62],[33,5,54,8],[33,6,54,9],[34,4,56,2],[34,11,56,9,"parsedStack"],[34,22,56,20],[35,2,57,0],[36,2,59,0,"module"],[36,8,59,6],[36,9,59,7,"exports"],[36,16,59,14],[36,19,59,17,"parseErrorStack"],[36,34,59,32],[37,0,59,33]],"functionMap":{"names":["<global>","convertHermesStack","parseErrorStack","stacktraceParser.parse.map$argument_0"],"mappings":"AAA;ACiB;CDqB;AEE;6CCU;QDG;CFG"}},"type":"js/module"}]}