{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./BaseRouter","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"1AJ7xeIZIqyL6CYOeCndb3n2akI="}},{"name":"nanoid/non-secure","data":{"asyncType":null,"locs":[{"start":{"line":162,"column":24,"index":3780},"end":{"line":162,"column":30,"index":3786},"identifierName":"nanoid"},{"start":{"line":176,"column":20,"index":4047},"end":{"line":176,"column":26,"index":4053},"identifierName":"nanoid"},{"start":{"line":202,"column":27,"index":4676},"end":{"line":202,"column":33,"index":4682},"identifierName":"nanoid"},{"start":{"line":228,"column":22,"index":5371},"end":{"line":228,"column":28,"index":5377},"identifierName":"nanoid"},{"start":{"line":250,"column":28,"index":5876},"end":{"line":250,"column":34,"index":5882},"identifierName":"nanoid"}],"key":"aLLVXWB8QP15fri3afEUab9H+Os="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TabActions = void 0;\n  exports.default = TabRouter;\n  var _BaseRouter = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"./BaseRouter\"));\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  exports.TabActions = TabActions;\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(function (route) {\n          return route.name === initialRouteName;\n        });\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n        break;\n    }\n    return history;\n  };\n  var changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n    var history;\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return Object.assign({}, state, {\n      index: index,\n      history: history\n    });\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n    var router = Object.assign({}, _BaseRouter.default, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: `${name}-${(0, _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\").nanoid)()}`,\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\").nanoid)()}`,\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$routes, _state$index, _state$history$filter, _state$history;\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return Object.assign({}, route, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\").nanoid)()}`,\n            params: routeParamList[name] !== undefined ? Object.assign({}, routeParamList[name], route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state == null ? void 0 : state.index) != null ? _state$index : 0]) == null ? void 0 : _state$routes.name), 0), routes.length - 1);\n        var history = (_state$history$filter = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        })) != null ? _state$history$filter : [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\").nanoid)()}`,\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name && !routeKeyChanges.includes(r.name);\n          }) || {\n            name: name,\n            key: `${name}-${(0, _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\").nanoid)()}`,\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(function (it) {\n          return it.type !== 'route' || routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return Object.assign({}, state, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction: function getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n              if (index === -1) {\n                return null;\n              }\n              return changeIndex(Object.assign({}, state, {\n                routes: state.routes.map(function (route, i) {\n                  if (i !== index) {\n                    return route;\n                  }\n                  var params;\n                  if (action.type === 'NAVIGATE' && action.payload.merge) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], route.params, action.payload.params) : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], action.payload.params) : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? Object.assign({}, route, {\n                    path: path,\n                    params: params\n                  }) : route;\n                })\n              }), index, backBehavior, initialRouteName);\n            }\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousKey = state.history[state.history.length - 2].key;\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n              if (_index === -1) {\n                return null;\n              }\n              return Object.assign({}, state, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n    return router;\n  }\n});","lineCount":245,"map":[[7,2,3,0],[8,2,60,0],[8,6,60,6,"TYPE_ROUTE"],[8,16,60,16],[8,19,60,19],[8,26,60,35],[9,2,62,7],[9,6,62,13,"TabActions"],[9,16,62,23],[9,19,62,26],[10,4,63,2,"jumpTo"],[10,10,63,8],[10,28,63,9,"name"],[10,32,63,21],[10,34,63,23,"params"],[10,40,63,38],[10,42,63,55],[11,6,64,4],[11,13,64,11],[12,8,64,13,"type"],[12,12,64,17],[12,14,64,19],[12,23,64,28],[13,8,64,30,"payload"],[13,15,64,37],[13,17,64,39],[14,10,64,41,"name"],[14,14,64,45],[14,16,64,41,"name"],[14,20,64,45],[15,10,64,47,"params"],[15,16,64,53],[15,18,64,47,"params"],[16,8,64,54],[17,6,64,56],[17,7,64,57],[18,4,65,2],[19,2,66,0],[19,3,66,1],[20,2,66,2],[21,2,68,0],[21,6,68,6,"getRouteHistory"],[21,21,68,21],[21,24,68,24],[21,33,68,6,"getRouteHistory"],[21,48,68,21],[21,49,69,2,"routes"],[21,55,69,25],[21,57,70,2,"index"],[21,62,70,15],[21,64,71,2,"backBehavior"],[21,76,71,28],[21,78,72,2,"initialRouteName"],[21,94,72,38],[21,96,73,5],[22,4,74,2],[22,8,74,8,"history"],[22,15,74,15],[22,18,74,18],[22,19,74,19],[23,6,74,21,"type"],[23,10,74,25],[23,12,74,27,"TYPE_ROUTE"],[23,22,74,37],[24,6,74,39,"key"],[24,9,74,42],[24,11,74,44,"routes"],[24,17,74,50],[24,18,74,51,"index"],[24,23,74,56],[24,24,74,57],[24,25,74,58,"key"],[25,4,74,62],[25,5,74,63],[25,6,74,64],[26,4,75,2],[26,8,75,6,"initialRouteIndex"],[26,25,75,23],[27,4,77,2],[27,12,77,10,"backBehavior"],[27,24,77,22],[28,6,78,4],[28,11,78,9],[28,18,78,16],[29,8,79,6],[29,13,79,11],[29,17,79,15,"i"],[29,18,79,16],[29,21,79,19,"index"],[29,26,79,24],[29,28,79,26,"i"],[29,29,79,27],[29,32,79,30],[29,33,79,31],[29,35,79,33,"i"],[29,36,79,34],[29,38,79,36],[29,40,79,38],[30,10,80,8,"history"],[30,17,80,15],[30,18,80,16,"unshift"],[30,25,80,23],[30,26,80,24],[31,12,80,26,"type"],[31,16,80,30],[31,18,80,32,"TYPE_ROUTE"],[31,28,80,42],[32,12,80,44,"key"],[32,15,80,47],[32,17,80,49,"routes"],[32,23,80,55],[32,24,80,56,"i"],[32,25,80,57],[32,28,80,60],[32,29,80,61],[32,30,80,62],[32,31,80,63,"key"],[33,10,80,67],[33,11,80,68],[33,12,80,69],[34,8,81,6],[35,8,82,6],[36,6,83,4],[36,11,83,9],[36,23,83,21],[37,8,84,6],[37,12,84,10,"index"],[37,17,84,15],[37,22,84,20],[37,23,84,21],[37,25,84,23],[38,10,85,8,"history"],[38,17,85,15],[38,18,85,16,"unshift"],[38,25,85,23],[38,26,85,24],[39,12,86,10,"type"],[39,16,86,14],[39,18,86,16,"TYPE_ROUTE"],[39,28,86,26],[40,12,87,10,"key"],[40,15,87,13],[40,17,87,15,"routes"],[40,23,87,21],[40,24,87,22],[40,25,87,23],[40,26,87,24],[40,27,87,25,"key"],[41,10,88,8],[41,11,88,9],[41,12,88,10],[42,8,89,6],[43,8,90,6],[44,6,91,4],[44,11,91,9],[44,25,91,23],[45,8,92,6,"initialRouteIndex"],[45,25,92,23],[45,28,92,26,"routes"],[45,34,92,32],[45,35,92,33,"findIndex"],[45,44,92,42],[45,45,93,8],[45,55,93,9,"route"],[45,60,93,14],[46,10,93,14],[46,17,93,19,"route"],[46,22,93,24],[46,23,93,25,"name"],[46,27,93,29],[46,32,93,34,"initialRouteName"],[46,48,93,50],[47,8,93,50],[47,10,94,7],[48,8,95,6,"initialRouteIndex"],[48,25,95,23],[48,28,95,26,"initialRouteIndex"],[48,45,95,43],[48,50,95,48],[48,51,95,49],[48,52,95,50],[48,55,95,53],[48,56,95,54],[48,59,95,57,"initialRouteIndex"],[48,76,95,74],[49,8,97,6],[49,12,97,10,"index"],[49,17,97,15],[49,22,97,20,"initialRouteIndex"],[49,39,97,37],[49,41,97,39],[50,10,98,8,"history"],[50,17,98,15],[50,18,98,16,"unshift"],[50,25,98,23],[50,26,98,24],[51,12,99,10,"type"],[51,16,99,14],[51,18,99,16,"TYPE_ROUTE"],[51,28,99,26],[52,12,100,10,"key"],[52,15,100,13],[52,17,100,15,"routes"],[52,23,100,21],[52,24,100,22,"initialRouteIndex"],[52,41,100,39],[52,42,100,40],[52,43,100,41,"key"],[53,10,101,8],[53,11,101,9],[53,12,101,10],[54,8,102,6],[55,8,103,6],[56,6,104,4],[56,11,104,9],[56,20,104,18],[57,8,106,6],[58,4,106,12],[59,4,109,2],[59,11,109,9,"history"],[59,18,109,16],[60,2,110,0],[60,3,110,1],[61,2,112,0],[61,6,112,6,"changeIndex"],[61,17,112,17],[61,20,112,20],[61,29,112,6,"changeIndex"],[61,40,112,17],[61,41,113,2,"state"],[61,46,113,42],[61,48,114,2,"index"],[61,53,114,15],[61,55,115,2,"backBehavior"],[61,67,115,28],[61,69,116,2,"initialRouteName"],[61,85,116,38],[61,87,117,5],[62,4,118,2],[62,8,118,6,"history"],[62,15,118,13],[63,4,120,2],[63,8,120,6,"backBehavior"],[63,20,120,18],[63,25,120,23],[63,34,120,32],[63,36,120,34],[64,6,121,4],[64,10,121,10,"currentKey"],[64,20,121,20],[64,23,121,23,"state"],[64,28,121,28],[64,29,121,29,"routes"],[64,35,121,35],[64,36,121,36,"index"],[64,41,121,41],[64,42,121,42],[64,43,121,43,"key"],[64,46,121,46],[65,6,123,4,"history"],[65,13,123,11],[65,16,123,14,"state"],[65,21,123,19],[65,22,123,20,"history"],[65,29,123,27],[65,30,124,7,"filter"],[65,36,124,13],[65,37,124,14],[65,47,124,15,"it"],[65,49,124,17],[66,8,124,17],[66,15,124,23,"it"],[66,17,124,25],[66,18,124,26,"type"],[66,22,124,30],[66,27,124,35],[66,34,124,42],[66,37,124,45,"it"],[66,39,124,47],[66,40,124,48,"key"],[66,43,124,51],[66,48,124,56,"currentKey"],[66,58,124,66],[66,61,124,69],[66,66,124,74],[67,6,124,74],[67,7,124,75],[67,8,124,76],[67,9,125,7,"concat"],[67,15,125,13],[67,16,125,14],[68,8,125,16,"type"],[68,12,125,20],[68,14,125,22,"TYPE_ROUTE"],[68,24,125,32],[69,8,125,34,"key"],[69,11,125,37],[69,13,125,39,"currentKey"],[70,6,125,50],[70,7,125,51],[70,8,125,52],[71,4,126,2],[71,5,126,3],[71,11,126,9],[72,6,127,4,"history"],[72,13,127,11],[72,16,127,14,"getRouteHistory"],[72,31,127,29],[72,32,128,6,"state"],[72,37,128,11],[72,38,128,12,"routes"],[72,44,128,18],[72,46,129,6,"index"],[72,51,129,11],[72,53,130,6,"backBehavior"],[72,65,130,18],[72,67,131,6,"initialRouteName"],[72,83,131,22],[72,84,132,5],[73,4,133,2],[74,4,135,2],[74,29,136,7,"state"],[74,34,136,12],[75,6,137,4,"index"],[75,11,137,9],[75,13,137,4,"index"],[75,18,137,9],[76,6,138,4,"history"],[76,13,138,11],[76,15,138,4,"history"],[77,4,138,11],[78,2,140,0],[78,3,140,1],[79,2,142,15],[79,11,142,24,"TabRouter"],[79,20,142,33],[79,27,145,21],[80,4,145,21],[80,8,143,2,"initialRouteName"],[80,24,143,18],[80,32,143,2,"initialRouteName"],[80,48,143,18],[81,6,143,18],[81,31,144,2,"backBehavior"],[81,43,144,14],[82,6,144,2,"backBehavior"],[82,18,144,14],[82,52,144,17],[82,64,144,29],[83,4,146,2],[83,8,146,8,"router"],[83,14,149,3],[83,35,150,7,"BaseRouter"],[83,54,150,17],[84,6,152,4,"type"],[84,10,152,8],[84,12,152,10],[84,17,152,15],[85,6,154,4,"getInitialState"],[85,21,154,19],[85,55,154,52],[86,8,154,52],[86,12,154,22,"routeNames"],[86,22,154,32],[86,31,154,22,"routeNames"],[86,41,154,32],[87,10,154,34,"routeParamList"],[87,24,154,48],[87,33,154,34,"routeParamList"],[87,47,154,48],[88,8,155,6],[88,12,155,12,"index"],[88,17,155,17],[88,20,156,8,"initialRouteName"],[88,36,156,24],[88,41,156,29,"undefined"],[88,50,156,38],[88,54,156,42,"routeNames"],[88,64,156,52],[88,65,156,53,"includes"],[88,73,156,61],[88,74,156,62,"initialRouteName"],[88,90,156,78],[88,91,156,79],[88,94,157,12,"routeNames"],[88,104,157,22],[88,105,157,23,"indexOf"],[88,112,157,30],[88,113,157,31,"initialRouteName"],[88,129,157,47],[88,130,157,48],[88,133,158,12],[88,134,158,13],[89,8,160,6],[89,12,160,12,"routes"],[89,18,160,18],[89,21,160,21,"routeNames"],[89,31,160,31],[89,32,160,32,"map"],[89,35,160,35],[89,36,160,36],[89,46,160,37,"name"],[89,50,160,41],[90,10,160,41],[90,17,160,47],[91,12,161,8,"name"],[91,16,161,12],[91,18,161,8,"name"],[91,22,161,12],[92,12,162,8,"key"],[92,15,162,11],[92,17,162,14],[92,20,162,16,"name"],[92,24,162,21],[92,28,162,24],[92,32,162,24,"nanoid"],[92,90,162,30],[92,93,162,33],[92,95,162,34],[93,12,163,8,"params"],[93,18,163,14],[93,20,163,16,"routeParamList"],[93,34,163,30],[93,35,163,31,"name"],[93,39,163,35],[94,10,164,6],[94,11,164,7],[95,8,164,7],[95,9,164,8],[95,10,164,9],[96,8,166,6],[96,12,166,12,"history"],[96,19,166,19],[96,22,166,22,"getRouteHistory"],[96,37,166,37],[96,38,167,8,"routes"],[96,44,167,14],[96,46,168,8,"index"],[96,51,168,13],[96,53,169,8,"backBehavior"],[96,65,169,20],[96,67,170,8,"initialRouteName"],[96,83,170,24],[96,84,171,7],[97,8,173,6],[97,15,173,13],[98,10,174,8,"stale"],[98,15,174,13],[98,17,174,15],[98,22,174,20],[99,10,175,8,"type"],[99,14,175,12],[99,16,175,14],[99,21,175,19],[100,10,176,8,"key"],[100,13,176,11],[100,15,176,14],[100,22,176,20],[100,26,176,20,"nanoid"],[100,84,176,26],[100,87,176,29],[100,89,176,30],[101,10,177,8,"index"],[101,15,177,13],[101,17,177,8,"index"],[101,22,177,13],[102,10,178,8,"routeNames"],[102,20,178,18],[102,22,178,8,"routeNames"],[102,32,178,18],[103,10,179,8,"history"],[103,17,179,15],[103,19,179,8,"history"],[103,26,179,15],[104,10,180,8,"routes"],[104,16,180,14],[104,18,180,8,"routes"],[105,8,181,6],[105,9,181,7],[106,6,182,4],[106,7,182,5],[107,6,184,4,"getRehydratedState"],[107,24,184,22],[107,54,184,23,"partialState"],[107,66,184,35],[107,75,184,69],[108,8,184,69],[109,8,184,69],[109,12,184,39,"routeNames"],[109,22,184,49],[109,31,184,39,"routeNames"],[109,41,184,49],[110,10,184,51,"routeParamList"],[110,24,184,65],[110,33,184,51,"routeParamList"],[110,47,184,65],[111,8,185,6],[111,12,185,10,"state"],[111,17,185,15],[111,20,185,18,"partialState"],[111,32,185,30],[112,8,187,6],[112,12,187,10,"state"],[112,17,187,15],[112,18,187,16,"stale"],[112,23,187,21],[112,28,187,26],[112,33,187,31],[112,35,187,33],[113,10,188,8],[113,17,188,15,"state"],[113,22,188,20],[114,8,189,6],[115,8,191,6],[115,12,191,12,"routes"],[115,18,191,18],[115,21,191,21,"routeNames"],[115,31,191,31],[115,32,191,32,"map"],[115,35,191,35],[115,36,191,36],[115,46,191,37,"name"],[115,50,191,41],[115,52,191,46],[116,10,192,8],[116,14,192,14,"route"],[116,19,192,19],[116,22,193,10,"state"],[116,27,193,15],[116,28,194,10,"routes"],[116,34,194,16],[116,35,194,17,"find"],[116,39,194,21],[116,40,194,22],[116,50,194,23,"r"],[116,51,194,24],[117,12,194,24],[117,19,194,29,"r"],[117,20,194,30],[117,21,194,31,"name"],[117,25,194,35],[117,30,194,40,"name"],[117,34,194,44],[118,10,194,44],[118,12,194,45],[119,10,196,8],[119,35,197,13,"route"],[119,40,197,18],[120,12,198,10,"name"],[120,16,198,14],[120,18,198,10,"name"],[120,22,198,14],[121,12,199,10,"key"],[121,15,199,13],[121,17,200,12,"route"],[121,22,200,17],[121,26,200,21,"route"],[121,31,200,26],[121,32,200,27,"name"],[121,36,200,31],[121,41,200,36,"name"],[121,45,200,40],[121,49,200,44,"route"],[121,54,200,49],[121,55,200,50,"key"],[121,58,200,53],[121,61,201,16,"route"],[121,66,201,21],[121,67,201,22,"key"],[121,70,201,25],[121,73,202,17],[121,76,202,19,"name"],[121,80,202,24],[121,84,202,27],[121,88,202,27,"nanoid"],[121,146,202,33],[121,149,202,36],[121,151,202,37],[122,12,203,10,"params"],[122,18,203,16],[122,20,204,12,"routeParamList"],[122,34,204,26],[122,35,204,27,"name"],[122,39,204,31],[122,40,204,32],[122,45,204,37,"undefined"],[122,54,204,46],[122,75,206,21,"routeParamList"],[122,89,206,35],[122,90,206,36,"name"],[122,94,206,40],[122,95,206,41],[122,97,207,22,"route"],[122,102,207,27],[122,105,207,30,"route"],[122,110,207,35],[122,111,207,36,"params"],[122,117,207,42],[122,120,207,45,"undefined"],[122,129,207,54],[122,133,209,16,"route"],[122,138,209,21],[122,141,210,16,"route"],[122,146,210,21],[122,147,210,22,"params"],[122,153,210,28],[122,156,211,16,"undefined"],[123,10,211,25],[124,8,213,6],[124,9,213,7],[124,10,213,8],[125,8,215,6],[125,12,215,12,"index"],[125,17,215,17],[125,20,215,20,"Math"],[125,24,215,24],[125,25,215,25,"min"],[125,28,215,28],[125,29,216,8,"Math"],[125,33,216,12],[125,34,216,13,"max"],[125,37,216,16],[125,38,216,17,"routeNames"],[125,48,216,27],[125,49,216,28,"indexOf"],[125,56,216,35],[125,74,216,36,"state"],[125,79,216,41],[125,80,216,42,"routes"],[125,86,216,48],[125,103,216,49,"state"],[125,108,216,54],[125,128,216,49,"state"],[125,133,216,54],[125,134,216,56,"index"],[125,139,216,61],[125,166,216,65],[125,167,216,66],[125,168,216,67],[125,189,216,36],[125,203,216,69,"name"],[125,207,216,73],[125,208,216,74],[125,210,216,76],[125,211,216,77],[125,212,216,78],[125,214,217,8,"routes"],[125,220,217,14],[125,221,217,15,"length"],[125,227,217,21],[125,230,217,24],[125,231,217,25],[125,232,218,7],[126,8,220,6],[126,12,220,12,"history"],[126,19,220,19],[126,65,221,8,"state"],[126,70,221,13],[126,71,221,14,"history"],[126,78,221,21],[126,99,221,8],[126,114,221,23,"filter"],[126,120,221,29],[126,121,221,30],[126,131,221,31,"it"],[126,133,221,33],[127,10,221,33],[127,17,221,38,"routes"],[127,23,221,44],[127,24,221,45,"find"],[127,28,221,49],[127,29,221,50],[127,39,221,51,"r"],[127,40,221,52],[128,12,221,52],[128,19,221,57,"r"],[128,20,221,58],[128,21,221,59,"key"],[128,24,221,62],[128,29,221,67,"it"],[128,31,221,69],[128,32,221,70,"key"],[128,35,221,73],[129,10,221,73],[129,12,221,74],[130,8,221,74],[130,10,221,75],[130,46,222,8],[130,48,222,10],[131,8,224,6],[131,15,224,13,"changeIndex"],[131,26,224,24],[131,27,225,8],[132,10,226,10,"stale"],[132,15,226,15],[132,17,226,17],[132,22,226,22],[133,10,227,10,"type"],[133,14,227,14],[133,16,227,16],[133,21,227,21],[134,10,228,10,"key"],[134,13,228,13],[134,15,228,16],[134,22,228,22],[134,26,228,22,"nanoid"],[134,84,228,28],[134,87,228,31],[134,89,228,32],[135,10,229,10,"index"],[135,15,229,15],[135,17,229,10,"index"],[135,22,229,15],[136,10,230,10,"routeNames"],[136,20,230,20],[136,22,230,10,"routeNames"],[136,32,230,20],[137,10,231,10,"history"],[137,17,231,17],[137,19,231,10,"history"],[137,26,231,17],[138,10,232,10,"routes"],[138,16,232,16],[138,18,232,10,"routes"],[139,8,233,8],[139,9,233,9],[139,11,234,8,"index"],[139,16,234,13],[139,18,235,8,"backBehavior"],[139,30,235,20],[139,32,236,8,"initialRouteName"],[139,48,236,24],[139,49,237,7],[140,6,238,4],[140,7,238,5],[141,6,240,4,"getStateForRouteNamesChange"],[141,33,240,31],[141,72,241,6,"state"],[141,77,241,11],[141,86,243,6],[142,8,243,6],[142,12,242,8,"routeNames"],[142,22,242,18],[142,31,242,8,"routeNames"],[142,41,242,18],[143,10,242,20,"routeParamList"],[143,24,242,34],[143,33,242,20,"routeParamList"],[143,47,242,34],[144,10,242,36,"routeKeyChanges"],[144,25,242,51],[144,34,242,36,"routeKeyChanges"],[144,49,242,51],[145,8,244,6],[145,12,244,12,"routes"],[145,18,244,18],[145,21,244,21,"routeNames"],[145,31,244,31],[145,32,244,32,"map"],[145,35,244,35],[145,36,245,8],[145,46,245,9,"name"],[145,50,245,13],[146,10,245,13],[146,17,246,10,"state"],[146,22,246,15],[146,23,246,16,"routes"],[146,29,246,22],[146,30,246,23,"find"],[146,34,246,27],[146,35,247,12],[146,45,247,13,"r"],[146,46,247,14],[147,12,247,14],[147,19,247,19,"r"],[147,20,247,20],[147,21,247,21,"name"],[147,25,247,25],[147,30,247,30,"name"],[147,34,247,34],[147,38,247,38],[147,39,247,39,"routeKeyChanges"],[147,54,247,54],[147,55,247,55,"includes"],[147,63,247,63],[147,64,247,64,"r"],[147,65,247,65],[147,66,247,66,"name"],[147,70,247,70],[147,71,247,71],[148,10,247,71],[148,12,248,11],[148,16,248,15],[149,12,249,12,"name"],[149,16,249,16],[149,18,249,12,"name"],[149,22,249,16],[150,12,250,12,"key"],[150,15,250,15],[150,17,250,18],[150,20,250,20,"name"],[150,24,250,25],[150,28,250,28],[150,32,250,28,"nanoid"],[150,90,250,34],[150,93,250,37],[150,95,250,38],[151,12,251,12,"params"],[151,18,251,18],[151,20,251,20,"routeParamList"],[151,34,251,34],[151,35,251,35,"name"],[151,39,251,39],[152,10,252,10],[152,11,252,11],[153,8,252,11],[153,10,253,7],[154,8,255,6],[154,12,255,12,"index"],[154,17,255,17],[154,20,255,20,"Math"],[154,24,255,24],[154,25,255,25,"max"],[154,28,255,28],[154,29,256,8],[154,30,256,9],[154,32,257,8,"routeNames"],[154,42,257,18],[154,43,257,19,"indexOf"],[154,50,257,26],[154,51,257,27,"state"],[154,56,257,32],[154,57,257,33,"routes"],[154,63,257,39],[154,64,257,40,"state"],[154,69,257,45],[154,70,257,46,"index"],[154,75,257,51],[154,76,257,52],[154,77,257,53,"name"],[154,81,257,57],[154,82,257,58],[154,83,258,7],[155,8,260,6],[155,12,260,10,"history"],[155,19,260,17],[155,22,260,20,"state"],[155,27,260,25],[155,28,260,26,"history"],[155,35,260,33],[155,36,260,34,"filter"],[155,42,260,40],[155,43,262,8],[155,53,262,9,"it"],[155,55,262,11],[156,10,262,11],[156,17,262,16,"it"],[156,19,262,18],[156,20,262,19,"type"],[156,24,262,23],[156,29,262,28],[156,36,262,35],[156,40,262,39,"routes"],[156,46,262,45],[156,47,262,46,"find"],[156,51,262,50],[156,52,262,51],[156,62,262,52,"r"],[156,63,262,53],[157,12,262,53],[157,19,262,58,"r"],[157,20,262,59],[157,21,262,60,"key"],[157,24,262,63],[157,29,262,68,"it"],[157,31,262,70],[157,32,262,71,"key"],[157,35,262,74],[158,10,262,74],[158,12,262,75],[159,8,262,75],[159,10,263,7],[160,8,265,6],[160,12,265,10],[160,13,265,11,"history"],[160,20,265,18],[160,21,265,19,"length"],[160,27,265,25],[160,29,265,27],[161,10,266,8,"history"],[161,17,266,15],[161,20,266,18,"getRouteHistory"],[161,35,266,33],[161,36,267,10,"routes"],[161,42,267,16],[161,44,268,10,"index"],[161,49,268,15],[161,51,269,10,"backBehavior"],[161,63,269,22],[161,65,270,10,"initialRouteName"],[161,81,270,26],[161,82,271,9],[162,8,272,6],[163,8,274,6],[163,33,275,11,"state"],[163,38,275,16],[164,10,276,8,"history"],[164,17,276,15],[164,19,276,8,"history"],[164,26,276,15],[165,10,277,8,"routeNames"],[165,20,277,18],[165,22,277,8,"routeNames"],[165,32,277,18],[166,10,278,8,"routes"],[166,16,278,14],[166,18,278,8,"routes"],[166,24,278,14],[167,10,279,8,"index"],[167,15,279,13],[167,17,279,8,"index"],[168,8,279,13],[169,6,281,4],[169,7,281,5],[170,6,283,4,"getStateForRouteFocus"],[170,27,283,25],[170,60,283,26,"state"],[170,65,283,31],[170,67,283,33,"key"],[170,70,283,36],[170,72,283,38],[171,8,284,6],[171,12,284,12,"index"],[171,17,284,17],[171,20,284,20,"state"],[171,25,284,25],[171,26,284,26,"routes"],[171,32,284,32],[171,33,284,33,"findIndex"],[171,42,284,42],[171,43,284,43],[171,53,284,44,"r"],[171,54,284,45],[172,10,284,45],[172,17,284,50,"r"],[172,18,284,51],[172,19,284,52,"key"],[172,22,284,55],[172,27,284,60,"key"],[172,30,284,63],[173,8,284,63],[173,10,284,64],[174,8,286,6],[174,12,286,10,"index"],[174,17,286,15],[174,22,286,20],[174,23,286,21],[174,24,286,22],[174,28,286,26,"index"],[174,33,286,31],[174,38,286,36,"state"],[174,43,286,41],[174,44,286,42,"index"],[174,49,286,47],[174,51,286,49],[175,10,287,8],[175,17,287,15,"state"],[175,22,287,20],[176,8,288,6],[177,8,290,6],[177,15,290,13,"changeIndex"],[177,26,290,24],[177,27,290,25,"state"],[177,32,290,30],[177,34,290,32,"index"],[177,39,290,37],[177,41,290,39,"backBehavior"],[177,53,290,51],[177,55,290,53,"initialRouteName"],[177,71,290,69],[177,72,290,70],[178,6,291,4],[178,7,291,5],[179,6,293,4,"getStateForAction"],[179,23,293,21],[179,52,293,22,"state"],[179,57,293,27],[179,59,293,29,"action"],[179,65,293,35],[179,74,293,57],[180,8,293,57],[180,12,293,39,"routeParamList"],[180,26,293,53],[180,35,293,39,"routeParamList"],[180,49,293,53],[181,8,294,6],[181,16,294,14,"action"],[181,22,294,20],[181,23,294,21,"type"],[181,27,294,25],[182,10,295,8],[182,15,295,13],[182,24,295,22],[183,10,296,8],[183,15,296,13],[183,25,296,23],[184,12,296,25],[185,14,297,10],[185,18,297,14,"index"],[185,23,297,19],[185,26,297,22],[185,27,297,23],[185,28,297,24],[186,14,299,10],[186,18,299,14,"action"],[186,24,299,20],[186,25,299,21,"type"],[186,29,299,25],[186,34,299,30],[186,44,299,40],[186,48,299,44,"action"],[186,54,299,50],[186,55,299,51,"payload"],[186,62,299,58],[186,63,299,59,"key"],[186,66,299,62],[186,68,299,64],[187,16,300,12,"index"],[187,21,300,17],[187,24,300,20,"state"],[187,29,300,25],[187,30,300,26,"routes"],[187,36,300,32],[187,37,300,33,"findIndex"],[187,46,300,42],[187,47,301,14],[187,57,301,15,"route"],[187,62,301,20],[188,18,301,20],[188,25,301,25,"route"],[188,30,301,30],[188,31,301,31,"key"],[188,34,301,34],[188,39,301,39,"action"],[188,45,301,45],[188,46,301,46,"payload"],[188,53,301,53],[188,54,301,54,"key"],[188,57,301,57],[189,16,301,57],[189,18,302,13],[190,14,303,10],[190,15,303,11],[190,21,303,17],[191,16,304,12,"index"],[191,21,304,17],[191,24,304,20,"state"],[191,29,304,25],[191,30,304,26,"routes"],[191,36,304,32],[191,37,304,33,"findIndex"],[191,46,304,42],[191,47,305,14],[191,57,305,15,"route"],[191,62,305,20],[192,18,305,20],[192,25,305,25,"route"],[192,30,305,30],[192,31,305,31,"name"],[192,35,305,35],[192,40,305,40,"action"],[192,46,305,46],[192,47,305,47,"payload"],[192,54,305,54],[192,55,305,55,"name"],[192,59,305,59],[193,16,305,59],[193,18,306,13],[194,14,307,10],[195,14,309,10],[195,18,309,14,"index"],[195,23,309,19],[195,28,309,24],[195,29,309,25],[195,30,309,26],[195,32,309,28],[196,16,310,12],[196,23,310,19],[196,27,310,23],[197,14,311,10],[198,14,313,10],[198,21,313,17,"changeIndex"],[198,32,313,28],[198,51,315,17,"state"],[198,56,315,22],[199,16,316,14,"routes"],[199,22,316,20],[199,24,316,22,"state"],[199,29,316,27],[199,30,316,28,"routes"],[199,36,316,34],[199,37,316,35,"map"],[199,40,316,38],[199,41,316,39],[199,51,316,40,"route"],[199,56,316,45],[199,58,316,47,"i"],[199,59,316,48],[199,61,316,53],[200,18,317,16],[200,22,317,20,"i"],[200,23,317,21],[200,28,317,26,"index"],[200,33,317,31],[200,35,317,33],[201,20,318,18],[201,27,318,25,"route"],[201,32,318,30],[202,18,319,16],[203,18,321,16],[203,22,321,20,"params"],[203,28,321,26],[204,18,323,16],[204,22,323,20,"action"],[204,28,323,26],[204,29,323,27,"type"],[204,33,323,31],[204,38,323,36],[204,48,323,46],[204,52,323,50,"action"],[204,58,323,56],[204,59,323,57,"payload"],[204,66,323,64],[204,67,323,65,"merge"],[204,72,323,70],[204,74,323,72],[205,20,324,18,"params"],[205,26,324,24],[205,29,325,20,"action"],[205,35,325,26],[205,36,325,27,"payload"],[205,43,325,34],[205,44,325,35,"params"],[205,50,325,41],[205,55,325,46,"undefined"],[205,64,325,55],[205,68,326,20,"routeParamList"],[205,82,326,34],[205,83,326,35,"route"],[205,88,326,40],[205,89,326,41,"name"],[205,93,326,45],[205,94,326,46],[205,99,326,51,"undefined"],[205,108,326,60],[205,129,328,29,"routeParamList"],[205,143,328,43],[205,144,328,44,"route"],[205,149,328,49],[205,150,328,50,"name"],[205,154,328,54],[205,155,328,55],[205,157,329,29,"route"],[205,162,329,34],[205,163,329,35,"params"],[205,169,329,41],[205,171,330,29,"action"],[205,177,330,35],[205,178,330,36,"payload"],[205,185,330,43],[205,186,330,44,"params"],[205,192,330,50],[205,196,332,24,"route"],[205,201,332,29],[205,202,332,30,"params"],[205,208,332,36],[206,18,333,16],[206,19,333,17],[206,25,333,23],[207,20,334,18,"params"],[207,26,334,24],[207,29,335,20,"routeParamList"],[207,43,335,34],[207,44,335,35,"route"],[207,49,335,40],[207,50,335,41,"name"],[207,54,335,45],[207,55,335,46],[207,60,335,51,"undefined"],[207,69,335,60],[207,90,337,29,"routeParamList"],[207,104,337,43],[207,105,337,44,"route"],[207,110,337,49],[207,111,337,50,"name"],[207,115,337,54],[207,116,337,55],[207,118,338,29,"action"],[207,124,338,35],[207,125,338,36,"payload"],[207,132,338,43],[207,133,338,44,"params"],[207,139,338,50],[207,143,340,24,"action"],[207,149,340,30],[207,150,340,31,"payload"],[207,157,340,38],[207,158,340,39,"params"],[207,164,340,45],[208,18,341,16],[209,18,343,16],[209,22,343,22,"path"],[209,26,343,26],[209,29,344,18,"action"],[209,35,344,24],[209,36,344,25,"type"],[209,40,344,29],[209,45,344,34],[209,55,344,44],[209,59,344,48,"action"],[209,65,344,54],[209,66,344,55,"payload"],[209,73,344,62],[209,74,344,63,"path"],[209,78,344,67],[209,82,344,71],[209,86,344,75],[209,89,345,22,"action"],[209,95,345,28],[209,96,345,29,"payload"],[209,103,345,36],[209,104,345,37,"path"],[209,108,345,41],[209,111,346,22,"route"],[209,116,346,27],[209,117,346,28,"path"],[209,121,346,32],[210,18,348,16],[210,25,348,23,"params"],[210,31,348,29],[210,36,348,34,"route"],[210,41,348,39],[210,42,348,40,"params"],[210,48,348,46],[210,52,348,50,"path"],[210,56,348,54],[210,61,348,59,"route"],[210,66,348,64],[210,67,348,65,"path"],[210,71,348,69],[210,92,349,25,"route"],[210,97,349,30],[211,20,349,32,"path"],[211,24,349,36],[211,26,349,32,"path"],[211,30,349,36],[212,20,349,38,"params"],[212,26,349,44],[212,28,349,38,"params"],[213,18,349,44],[213,23,350,20,"route"],[213,28,350,25],[214,16,351,14],[214,17,351,15],[215,14,351,16],[215,18,353,12,"index"],[215,23,353,17],[215,25,354,12,"backBehavior"],[215,37,354,24],[215,39,355,12,"initialRouteName"],[215,55,355,28],[215,56,356,11],[216,12,357,8],[217,10,359,8],[217,15,359,13],[217,24,359,22],[218,12,359,24],[219,14,360,10],[219,18,360,14,"state"],[219,23,360,19],[219,24,360,20,"history"],[219,31,360,27],[219,32,360,28,"length"],[219,38,360,34],[219,43,360,39],[219,44,360,40],[219,46,360,42],[220,16,361,12],[220,23,361,19],[220,27,361,23],[221,14,362,10],[222,14,364,10],[222,18,364,16,"previousKey"],[222,29,364,27],[222,32,364,30,"state"],[222,37,364,35],[222,38,364,36,"history"],[222,45,364,43],[222,46,364,44,"state"],[222,51,364,49],[222,52,364,50,"history"],[222,59,364,57],[222,60,364,58,"length"],[222,66,364,64],[222,69,364,67],[222,70,364,68],[222,71,364,69],[222,72,364,70,"key"],[222,75,364,73],[223,14,365,10],[223,18,365,16,"index"],[223,24,365,21],[223,27,365,24,"state"],[223,32,365,29],[223,33,365,30,"routes"],[223,39,365,36],[223,40,365,37,"findIndex"],[223,49,365,46],[223,50,366,12],[223,60,366,13,"route"],[223,65,366,18],[224,16,366,18],[224,23,366,23,"route"],[224,28,366,28],[224,29,366,29,"key"],[224,32,366,32],[224,37,366,37,"previousKey"],[224,48,366,48],[225,14,366,48],[225,16,367,11],[226,14,369,10],[226,18,369,14,"index"],[226,24,369,19],[226,29,369,24],[226,30,369,25],[226,31,369,26],[226,33,369,28],[227,16,370,12],[227,23,370,19],[227,27,370,23],[228,14,371,10],[229,14,373,10],[229,39,374,15,"state"],[229,44,374,20],[230,16,375,12,"history"],[230,23,375,19],[230,25,375,21,"state"],[230,30,375,26],[230,31,375,27,"history"],[230,38,375,34],[230,39,375,35,"slice"],[230,44,375,40],[230,45,375,41],[230,46,375,42],[230,48,375,44],[230,49,375,45],[230,50,375,46],[230,51,375,47],[231,16,376,12,"index"],[231,21,376,17],[231,23,376,12,"index"],[232,14,376,17],[233,12,378,8],[234,10,380,8],[235,12,381,10],[235,19,381,17,"BaseRouter"],[235,38,381,27],[235,39,381,28,"getStateForAction"],[235,56,381,45],[235,57,381,46,"state"],[235,62,381,51],[235,64,381,53,"action"],[235,70,381,59],[235,71,381,60],[236,8,381,61],[237,6,383,4],[237,7,383,5],[238,6,385,4,"shouldActionChangeFocus"],[238,29,385,27],[238,64,385,28,"action"],[238,70,385,34],[238,72,385,36],[239,8,386,6],[239,15,386,13,"action"],[239,21,386,19],[239,22,386,20,"type"],[239,26,386,24],[239,31,386,29],[239,41,386,39],[240,6,387,4],[240,7,387,5],[241,6,389,4,"actionCreators"],[241,20,389,18],[241,22,389,20,"TabActions"],[242,4,389,30],[242,6,390,3],[243,4,392,2],[243,11,392,9,"router"],[243,17,392,15],[244,2,393,0],[245,0,393,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;EC8D;GDE;wBEG;QCyB,0CD;CFiB;oBIE;cCY,6DD;CJgB;eME;ICY;oCCM;QDI;KDkB;IGE;oCDO;sBEG,sBF;OCmB;8BJQ,oBK,uBL,CI;KHiB;IKE;QHK;YIE,2DJ;WGK;QNU,2CK,uBL,CM;KLmB;IOE;2CCC,oBD;KPO;ISE;cDQ,2CC;cDI,6CC;uCCW;eDmC;YDe,oCC;KTiB;IWE;KXE;CNM"}},"type":"js/module"}]}