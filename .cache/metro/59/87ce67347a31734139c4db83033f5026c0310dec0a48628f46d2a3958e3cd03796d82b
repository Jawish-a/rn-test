{"dependencies":[{"name":"./util","data":{"asyncType":null,"locs":[{"start":{"line":39,"column":9,"index":835},"end":{"line":39,"column":24,"index":850},"identifierName":"defineAnimation"},{"start":{"line":2,"column":9,"index":143},"end":{"line":2,"column":24,"index":158},"identifierName":"defineAnimation"}],"key":"DQ+NnsvRW532iS20nr5BN5Yr8jw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withSpring = void 0;\n  var _worklet_6340405736484_init_data = {\n    code: \"function withSpring(toValue, userConfig, callback) {\\n  const {\\n    defineAnimation\\n  } = this._closure;\\n  return defineAnimation(toValue, function () {\\n    'worklet';\\n    const config = {\\n      damping: 10,\\n      mass: 1,\\n      stiffness: 100,\\n      overshootClamping: false,\\n      restDisplacementThreshold: 0.01,\\n      restSpeedThreshold: 2,\\n      velocity: 0\\n    };\\n    if (userConfig) {\\n      Object.keys(userConfig).forEach(function (key) {\\n        return config[key] = userConfig[key];\\n      });\\n    }\\n    function spring(animation, now) {\\n      const {\\n        toValue: toValue,\\n        lastTimestamp: lastTimestamp,\\n        current: current,\\n        velocity: velocity\\n      } = animation;\\n      const deltaTime = Math.min(now - lastTimestamp, 64);\\n      animation.lastTimestamp = now;\\n      const c = config.damping;\\n      const m = config.mass;\\n      const k = config.stiffness;\\n      const v0 = -velocity;\\n      const x0 = toValue - current;\\n      const zeta = c / (2 * Math.sqrt(k * m));\\n      const omega0 = Math.sqrt(k / m);\\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\\n      const t = deltaTime / 1000;\\n      const sin1 = Math.sin(omega1 * t);\\n      const cos1 = Math.cos(omega1 * t);\\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\\n      const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\\n      const underDampedPosition = toValue - underDampedFrag1;\\n      const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\\n      const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\\n      const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\\n      const isOvershooting = function () {\\n        if (config.overshootClamping && config.stiffness !== 0) {\\n          return current < toValue ? animation.current > toValue : animation.current < toValue;\\n        } else {\\n          return false;\\n        }\\n      };\\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\\n      const isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\\n      if (zeta < 1) {\\n        animation.current = underDampedPosition;\\n        animation.velocity = underDampedVelocity;\\n      } else {\\n        animation.current = criticallyDampedPosition;\\n        animation.velocity = criticallyDampedVelocity;\\n      }\\n      if (isOvershooting() || isVelocity && isDisplacement) {\\n        if (config.stiffness !== 0) {\\n          animation.velocity = 0;\\n          animation.current = toValue;\\n        }\\n        animation.lastTimestamp = 0;\\n        return true;\\n      }\\n      return false;\\n    }\\n    function onStart(animation, value, now, previousAnimation) {\\n      animation.current = value;\\n      if (previousAnimation) {\\n        animation.velocity = previousAnimation.velocity || animation.velocity || 0;\\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\\n      } else {\\n        animation.lastTimestamp = now;\\n      }\\n    }\\n    return {\\n      onFrame: spring,\\n      onStart: onStart,\\n      toValue: toValue,\\n      velocity: config.velocity || 0,\\n      current: toValue,\\n      callback: callback,\\n      lastTimestamp: 0\\n    };\\n  });\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"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\\\",\\\"names\\\":[\\\"withSpring\\\",\\\"toValue\\\",\\\"userConfig\\\",\\\"callback\\\",\\\"defineAnimation\\\",\\\"config\\\",\\\"damping\\\",\\\"mass\\\",\\\"stiffness\\\",\\\"overshootClamping\\\",\\\"restDisplacementThreshold\\\",\\\"restSpeedThreshold\\\",\\\"velocity\\\",\\\"Object\\\",\\\"keys\\\",\\\"forEach\\\",\\\"key\\\",\\\"spring\\\",\\\"animation\\\",\\\"now\\\",\\\"lastTimestamp\\\",\\\"current\\\",\\\"deltaTime\\\",\\\"Math\\\",\\\"min\\\",\\\"c\\\",\\\"m\\\",\\\"k\\\",\\\"v0\\\",\\\"x0\\\",\\\"zeta\\\",\\\"sqrt\\\",\\\"omega0\\\",\\\"omega1\\\",\\\"t\\\",\\\"sin1\\\",\\\"sin\\\",\\\"cos1\\\",\\\"cos\\\",\\\"underDampedEnvelope\\\",\\\"exp\\\",\\\"underDampedFrag1\\\",\\\"underDampedPosition\\\",\\\"underDampedVelocity\\\",\\\"criticallyDampedEnvelope\\\",\\\"criticallyDampedPosition\\\",\\\"criticallyDampedVelocity\\\",\\\"isOvershooting\\\",\\\"isVelocity\\\",\\\"abs\\\",\\\"isDisplacement\\\",\\\"onStart\\\",\\\"value\\\",\\\"previousAnimation\\\",\\\"onFrame\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\\\"]}\"\n  };\n  var _worklet_720321806976_init_data = {\n    code: \"function anonymous() {\\n  const {\\n    userConfig,\\n    toValue,\\n    callback\\n  } = this._closure;\\n  const config = {\\n    damping: 10,\\n    mass: 1,\\n    stiffness: 100,\\n    overshootClamping: false,\\n    restDisplacementThreshold: 0.01,\\n    restSpeedThreshold: 2,\\n    velocity: 0\\n  };\\n  if (userConfig) {\\n    Object.keys(userConfig).forEach(function (key) {\\n      return config[key] = userConfig[key];\\n    });\\n  }\\n  function spring(animation, now) {\\n    const {\\n      toValue: toValue,\\n      lastTimestamp: lastTimestamp,\\n      current: current,\\n      velocity: velocity\\n    } = animation;\\n    const deltaTime = Math.min(now - lastTimestamp, 64);\\n    animation.lastTimestamp = now;\\n    const c = config.damping;\\n    const m = config.mass;\\n    const k = config.stiffness;\\n    const v0 = -velocity;\\n    const x0 = toValue - current;\\n    const zeta = c / (2 * Math.sqrt(k * m));\\n    const omega0 = Math.sqrt(k / m);\\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\\n    const t = deltaTime / 1000;\\n    const sin1 = Math.sin(omega1 * t);\\n    const cos1 = Math.cos(omega1 * t);\\n    const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\\n    const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\\n    const underDampedPosition = toValue - underDampedFrag1;\\n    const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\\n    const criticallyDampedEnvelope = Math.exp(-omega0 * t);\\n    const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\\n    const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\\n    const isOvershooting = function () {\\n      if (config.overshootClamping && config.stiffness !== 0) {\\n        return current < toValue ? animation.current > toValue : animation.current < toValue;\\n      } else {\\n        return false;\\n      }\\n    };\\n    const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\\n    const isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\\n    if (zeta < 1) {\\n      animation.current = underDampedPosition;\\n      animation.velocity = underDampedVelocity;\\n    } else {\\n      animation.current = criticallyDampedPosition;\\n      animation.velocity = criticallyDampedVelocity;\\n    }\\n    if (isOvershooting() || isVelocity && isDisplacement) {\\n      if (config.stiffness !== 0) {\\n        animation.velocity = 0;\\n        animation.current = toValue;\\n      }\\n      animation.lastTimestamp = 0;\\n      return true;\\n    }\\n    return false;\\n  }\\n  function onStart(animation, value, now, previousAnimation) {\\n    animation.current = value;\\n    if (previousAnimation) {\\n      animation.velocity = previousAnimation.velocity || animation.velocity || 0;\\n      animation.lastTimestamp = previousAnimation.lastTimestamp || now;\\n    } else {\\n      animation.lastTimestamp = now;\\n    }\\n  }\\n  return {\\n    onFrame: spring,\\n    onStart: onStart,\\n    toValue: toValue,\\n    velocity: config.velocity || 0,\\n    current: toValue,\\n    callback: callback,\\n    lastTimestamp: 0\\n  };\\n}\",\n    location: \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"mappings\\\":\\\"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\\\",\\\"names\\\":[\\\"config\\\",\\\"damping\\\",\\\"mass\\\",\\\"stiffness\\\",\\\"overshootClamping\\\",\\\"restDisplacementThreshold\\\",\\\"restSpeedThreshold\\\",\\\"velocity\\\",\\\"userConfig\\\",\\\"Object\\\",\\\"keys\\\",\\\"forEach\\\",\\\"key\\\",\\\"spring\\\",\\\"animation\\\",\\\"now\\\",\\\"toValue\\\",\\\"lastTimestamp\\\",\\\"current\\\",\\\"deltaTime\\\",\\\"Math\\\",\\\"min\\\",\\\"c\\\",\\\"m\\\",\\\"k\\\",\\\"v0\\\",\\\"x0\\\",\\\"zeta\\\",\\\"sqrt\\\",\\\"omega0\\\",\\\"omega1\\\",\\\"t\\\",\\\"sin1\\\",\\\"sin\\\",\\\"cos1\\\",\\\"cos\\\",\\\"underDampedEnvelope\\\",\\\"exp\\\",\\\"underDampedFrag1\\\",\\\"underDampedPosition\\\",\\\"underDampedVelocity\\\",\\\"criticallyDampedEnvelope\\\",\\\"criticallyDampedPosition\\\",\\\"criticallyDampedVelocity\\\",\\\"isOvershooting\\\",\\\"isVelocity\\\",\\\"abs\\\",\\\"isDisplacement\\\",\\\"onStart\\\",\\\"value\\\",\\\"previousAnimation\\\",\\\"onFrame\\\",\\\"callback\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\\\"]}\"\n  };\n  var withSpring = function () {\n    var _e = [new Error(), -2, -20];\n    var _f = function _f(toValue, userConfig, callback) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./util\").defineAnimation)(toValue, function () {\n        var _e = [new Error(), -4, -20];\n        var _f = function _f() {\n          var config = {\n            damping: 10,\n            mass: 1,\n            stiffness: 100,\n            overshootClamping: false,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 2,\n            velocity: 0\n          };\n          if (userConfig) {\n            Object.keys(userConfig).forEach(function (key) {\n              return config[key] = userConfig[key];\n            });\n          }\n          function spring(animation, now) {\n            var toValue = animation.toValue,\n              lastTimestamp = animation.lastTimestamp,\n              current = animation.current,\n              velocity = animation.velocity;\n            var deltaTime = Math.min(now - lastTimestamp, 64);\n            animation.lastTimestamp = now;\n            var c = config.damping;\n            var m = config.mass;\n            var k = config.stiffness;\n            var v0 = -velocity;\n            var x0 = toValue - current;\n            var zeta = c / (2 * Math.sqrt(k * m));\n            var omega0 = Math.sqrt(k / m);\n            var omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n            var t = deltaTime / 1000;\n            var sin1 = Math.sin(omega1 * t);\n            var cos1 = Math.cos(omega1 * t);\n            var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n            var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n            var underDampedPosition = toValue - underDampedFrag1;\n            var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n            var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n            var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n            var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n            var isOvershooting = function isOvershooting() {\n              if (config.overshootClamping && config.stiffness !== 0) {\n                return current < toValue ? animation.current > toValue : animation.current < toValue;\n              } else {\n                return false;\n              }\n            };\n            var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n            var isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n            if (zeta < 1) {\n              animation.current = underDampedPosition;\n              animation.velocity = underDampedVelocity;\n            } else {\n              animation.current = criticallyDampedPosition;\n              animation.velocity = criticallyDampedVelocity;\n            }\n            if (isOvershooting() || isVelocity && isDisplacement) {\n              if (config.stiffness !== 0) {\n                animation.velocity = 0;\n                animation.current = toValue;\n              }\n              animation.lastTimestamp = 0;\n              return true;\n            }\n            return false;\n          }\n          function onStart(animation, value, now, previousAnimation) {\n            animation.current = value;\n            if (previousAnimation) {\n              animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n              animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n            } else {\n              animation.lastTimestamp = now;\n            }\n          }\n          return {\n            onFrame: spring,\n            onStart: onStart,\n            toValue: toValue,\n            velocity: config.velocity || 0,\n            current: toValue,\n            callback: callback,\n            lastTimestamp: 0\n          };\n        };\n        _f._closure = {\n          userConfig: userConfig,\n          toValue: toValue,\n          callback: callback\n        };\n        _f.__initData = _worklet_720321806976_init_data;\n        _f.__workletHash = 720321806976;\n        _f.__stackDetails = _e;\n        return _f;\n      }());\n    };\n    _f._closure = {\n      defineAnimation: _$$_REQUIRE(_dependencyMap[0], \"./util\").defineAnimation\n    };\n    _f.__initData = _worklet_6340405736484_init_data;\n    _f.__workletHash = 6340405736484;\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  exports.withSpring = withSpring;\n});","lineCount":126,"map":[[16,6,32,16,"withSpring"],[16,16,32,26],[17,4,32,26],[18,4,32,26],[18,25,33,2,"toValue"],[18,32,33,26],[18,34,34,2,"userConfig"],[18,44,34,27],[18,46,35,2,"callback"],[18,54,35,30],[18,56,36,30],[19,6,39,2],[19,13,39,9],[19,17,39,9,"defineAnimation"],[19,73,39,24],[19,75,39,42,"toValue"],[19,82,39,49],[20,8,39,49],[21,8,39,49],[21,31,39,57],[22,10,45,4],[22,14,45,10,"config"],[22,20,45,40],[22,23,45,43],[23,12,46,6,"damping"],[23,19,46,13],[23,21,46,15],[23,23,46,17],[24,12,47,6,"mass"],[24,16,47,10],[24,18,47,12],[24,19,47,13],[25,12,48,6,"stiffness"],[25,21,48,15],[25,23,48,17],[25,26,48,20],[26,12,49,6,"overshootClamping"],[26,29,49,23],[26,31,49,25],[26,36,49,30],[27,12,50,6,"restDisplacementThreshold"],[27,37,50,31],[27,39,50,33],[27,43,50,37],[28,12,51,6,"restSpeedThreshold"],[28,30,51,24],[28,32,51,26],[28,33,51,27],[29,12,52,6,"velocity"],[29,20,52,14],[29,22,52,16],[30,10,53,4],[30,11,53,5],[31,10,54,4],[31,14,54,8,"userConfig"],[31,24,54,18],[31,26,54,20],[32,12,55,6,"Object"],[32,18,55,12],[32,19,55,13,"keys"],[32,23,55,17],[32,24,55,18,"userConfig"],[32,34,55,28],[32,35,55,29],[32,36,55,30,"forEach"],[32,43,55,37],[32,44,56,8],[32,54,56,9,"key"],[32,57,56,12],[33,14,56,12],[33,21,57,12,"config"],[33,27,57,18],[33,28,57,27,"key"],[33,31,57,30],[33,32,57,31],[33,35,57,34,"userConfig"],[33,45,57,44],[33,46,57,45,"key"],[33,49,57,48],[33,50,57,76],[34,12,57,76],[34,13,57,77],[34,14,58,7],[35,10,59,4],[36,10,61,4],[36,19,61,13,"spring"],[36,25,61,19],[36,26,61,20,"animation"],[36,35,61,51],[36,37,61,53,"now"],[36,40,61,67],[36,42,61,78],[37,12,62,6],[37,16,62,14,"toValue"],[37,23,62,21],[37,26,62,60,"animation"],[37,35,62,69],[37,36,62,14,"toValue"],[37,43,62,21],[38,14,62,23,"lastTimestamp"],[38,27,62,36],[38,30,62,60,"animation"],[38,39,62,69],[38,40,62,23,"lastTimestamp"],[38,53,62,36],[39,14,62,38,"current"],[39,21,62,45],[39,24,62,60,"animation"],[39,33,62,69],[39,34,62,38,"current"],[39,41,62,45],[40,14,62,47,"velocity"],[40,22,62,55],[40,25,62,60,"animation"],[40,34,62,69],[40,35,62,47,"velocity"],[40,43,62,55],[41,12,64,6],[41,16,64,12,"deltaTime"],[41,25,64,21],[41,28,64,24,"Math"],[41,32,64,28],[41,33,64,29,"min"],[41,36,64,32],[41,37,64,33,"now"],[41,40,64,36],[41,43,64,39,"lastTimestamp"],[41,56,64,52],[41,58,64,54],[41,60,64,56],[41,61,64,57],[42,12,65,6,"animation"],[42,21,65,15],[42,22,65,16,"lastTimestamp"],[42,35,65,29],[42,38,65,32,"now"],[42,41,65,35],[43,12,67,6],[43,16,67,12,"c"],[43,17,67,13],[43,20,67,16,"config"],[43,26,67,22],[43,27,67,23,"damping"],[43,34,67,30],[44,12,68,6],[44,16,68,12,"m"],[44,17,68,13],[44,20,68,16,"config"],[44,26,68,22],[44,27,68,23,"mass"],[44,31,68,27],[45,12,69,6],[45,16,69,12,"k"],[45,17,69,13],[45,20,69,16,"config"],[45,26,69,22],[45,27,69,23,"stiffness"],[45,36,69,32],[46,12,71,6],[46,16,71,12,"v0"],[46,18,71,14],[46,21,71,17],[46,22,71,18,"velocity"],[46,30,71,26],[47,12,72,6],[47,16,72,12,"x0"],[47,18,72,14],[47,21,72,17,"toValue"],[47,28,72,24],[47,31,72,27,"current"],[47,38,72,34],[48,12,74,6],[48,16,74,12,"zeta"],[48,20,74,16],[48,23,74,19,"c"],[48,24,74,20],[48,28,74,24],[48,29,74,25],[48,32,74,28,"Math"],[48,36,74,32],[48,37,74,33,"sqrt"],[48,41,74,37],[48,42,74,38,"k"],[48,43,74,39],[48,46,74,42,"m"],[48,47,74,43],[48,48,74,44],[48,49,74,45],[49,12,75,6],[49,16,75,12,"omega0"],[49,22,75,18],[49,25,75,21,"Math"],[49,29,75,25],[49,30,75,26,"sqrt"],[49,34,75,30],[49,35,75,31,"k"],[49,36,75,32],[49,39,75,35,"m"],[49,40,75,36],[49,41,75,37],[50,12,76,6],[50,16,76,12,"omega1"],[50,22,76,18],[50,25,76,21,"omega0"],[50,31,76,27],[50,34,76,30,"Math"],[50,38,76,34],[50,39,76,35,"sqrt"],[50,43,76,39],[50,44,76,40],[50,45,76,41],[50,48,76,44,"zeta"],[50,52,76,48],[50,56,76,52],[50,57,76,53],[50,58,76,54],[51,12,78,6],[51,16,78,12,"t"],[51,17,78,13],[51,20,78,16,"deltaTime"],[51,29,78,25],[51,32,78,28],[51,36,78,32],[52,12,80,6],[52,16,80,12,"sin1"],[52,20,80,16],[52,23,80,19,"Math"],[52,27,80,23],[52,28,80,24,"sin"],[52,31,80,27],[52,32,80,28,"omega1"],[52,38,80,34],[52,41,80,37,"t"],[52,42,80,38],[52,43,80,39],[53,12,81,6],[53,16,81,12,"cos1"],[53,20,81,16],[53,23,81,19,"Math"],[53,27,81,23],[53,28,81,24,"cos"],[53,31,81,27],[53,32,81,28,"omega1"],[53,38,81,34],[53,41,81,37,"t"],[53,42,81,38],[53,43,81,39],[54,12,84,6],[54,16,84,12,"underDampedEnvelope"],[54,35,84,31],[54,38,84,34,"Math"],[54,42,84,38],[54,43,84,39,"exp"],[54,46,84,42],[54,47,84,43],[54,48,84,44,"zeta"],[54,52,84,48],[54,55,84,51,"omega0"],[54,61,84,57],[54,64,84,60,"t"],[54,65,84,61],[54,66,84,62],[55,12,85,6],[55,16,85,12,"underDampedFrag1"],[55,32,85,28],[55,35,86,8,"underDampedEnvelope"],[55,54,86,27],[55,58,87,9,"sin1"],[55,62,87,13],[55,66,87,17],[55,67,87,18,"v0"],[55,69,87,20],[55,72,87,23,"zeta"],[55,76,87,27],[55,79,87,30,"omega0"],[55,85,87,36],[55,88,87,39,"x0"],[55,90,87,41],[55,94,87,45,"omega1"],[55,100,87,51],[55,101,87,52],[55,104,87,55,"x0"],[55,106,87,57],[55,109,87,60,"cos1"],[55,113,87,64],[55,114,87,65],[56,12,89,6],[56,16,89,12,"underDampedPosition"],[56,35,89,31],[56,38,89,34,"toValue"],[56,45,89,41],[56,48,89,44,"underDampedFrag1"],[56,64,89,60],[57,12,91,6],[57,16,91,12,"underDampedVelocity"],[57,35,91,31],[57,38,92,8,"zeta"],[57,42,92,12],[57,45,92,15,"omega0"],[57,51,92,21],[57,54,92,24,"underDampedFrag1"],[57,70,92,40],[57,73,93,8,"underDampedEnvelope"],[57,92,93,27],[57,96,94,11,"cos1"],[57,100,94,15],[57,104,94,19,"v0"],[57,106,94,21],[57,109,94,24,"zeta"],[57,113,94,28],[57,116,94,31,"omega0"],[57,122,94,37],[57,125,94,40,"x0"],[57,127,94,42],[57,128,94,43],[57,131,94,46,"omega1"],[57,137,94,52],[57,140,94,55,"x0"],[57,142,94,57],[57,145,94,60,"sin1"],[57,149,94,64],[57,150,94,65],[58,12,97,6],[58,16,97,12,"criticallyDampedEnvelope"],[58,40,97,36],[58,43,97,39,"Math"],[58,47,97,43],[58,48,97,44,"exp"],[58,51,97,47],[58,52,97,48],[58,53,97,49,"omega0"],[58,59,97,55],[58,62,97,58,"t"],[58,63,97,59],[58,64,97,60],[59,12,98,6],[59,16,98,12,"criticallyDampedPosition"],[59,40,98,36],[59,43,99,8,"toValue"],[59,50,99,15],[59,53,99,18,"criticallyDampedEnvelope"],[59,77,99,42],[59,81,99,46,"x0"],[59,83,99,48],[59,86,99,51],[59,87,99,52,"v0"],[59,89,99,54],[59,92,99,57,"omega0"],[59,98,99,63],[59,101,99,66,"x0"],[59,103,99,68],[59,107,99,72,"t"],[59,108,99,73],[59,109,99,74],[60,12,101,6],[60,16,101,12,"criticallyDampedVelocity"],[60,40,101,36],[60,43,102,8,"criticallyDampedEnvelope"],[60,67,102,32],[60,71,103,9,"v0"],[60,73,103,11],[60,77,103,15,"t"],[60,78,103,16],[60,81,103,19,"omega0"],[60,87,103,25],[60,90,103,28],[60,91,103,29],[60,92,103,30],[60,95,103,33,"t"],[60,96,103,34],[60,99,103,37,"x0"],[60,101,103,39],[60,104,103,42,"omega0"],[60,110,103,48],[60,113,103,51,"omega0"],[60,119,103,57],[60,120,103,58],[61,12,105,6],[61,16,105,12,"isOvershooting"],[61,30,105,26],[61,33,105,29],[61,42,105,12,"isOvershooting"],[61,56,105,26],[61,59,105,35],[62,14,106,8],[62,18,106,12,"config"],[62,24,106,18],[62,25,106,19,"overshootClamping"],[62,42,106,36],[62,46,106,40,"config"],[62,52,106,46],[62,53,106,47,"stiffness"],[62,62,106,56],[62,67,106,61],[62,68,106,62],[62,70,106,64],[63,16,107,10],[63,23,107,17,"current"],[63,30,107,24],[63,33,107,27,"toValue"],[63,40,107,34],[63,43,108,14,"animation"],[63,52,108,23],[63,53,108,24,"current"],[63,60,108,31],[63,63,108,34,"toValue"],[63,70,108,41],[63,73,109,14,"animation"],[63,82,109,23],[63,83,109,24,"current"],[63,90,109,31],[63,93,109,34,"toValue"],[63,100,109,41],[64,14,110,8],[64,15,110,9],[64,21,110,15],[65,16,111,10],[65,23,111,17],[65,28,111,22],[66,14,112,8],[67,12,113,6],[67,13,113,7],[68,12,115,6],[68,16,115,12,"isVelocity"],[68,26,115,22],[68,29,115,25,"Math"],[68,33,115,29],[68,34,115,30,"abs"],[68,37,115,33],[68,38,115,34,"velocity"],[68,46,115,42],[68,47,115,43],[68,50,115,46,"config"],[68,56,115,52],[68,57,115,53,"restSpeedThreshold"],[68,75,115,71],[69,12,116,6],[69,16,116,12,"isDisplacement"],[69,30,116,26],[69,33,117,8,"config"],[69,39,117,14],[69,40,117,15,"stiffness"],[69,49,117,24],[69,54,117,29],[69,55,117,30],[69,59,118,8,"Math"],[69,63,118,12],[69,64,118,13,"abs"],[69,67,118,16],[69,68,118,17,"toValue"],[69,75,118,24],[69,78,118,27,"current"],[69,85,118,34],[69,86,118,35],[69,89,118,38,"config"],[69,95,118,44],[69,96,118,45,"restDisplacementThreshold"],[69,121,118,70],[70,12,120,6],[70,16,120,10,"zeta"],[70,20,120,14],[70,23,120,17],[70,24,120,18],[70,26,120,20],[71,14,121,8,"animation"],[71,23,121,17],[71,24,121,18,"current"],[71,31,121,25],[71,34,121,28,"underDampedPosition"],[71,53,121,47],[72,14,122,8,"animation"],[72,23,122,17],[72,24,122,18,"velocity"],[72,32,122,26],[72,35,122,29,"underDampedVelocity"],[72,54,122,48],[73,12,123,6],[73,13,123,7],[73,19,123,13],[74,14,124,8,"animation"],[74,23,124,17],[74,24,124,18,"current"],[74,31,124,25],[74,34,124,28,"criticallyDampedPosition"],[74,58,124,52],[75,14,125,8,"animation"],[75,23,125,17],[75,24,125,18,"velocity"],[75,32,125,26],[75,35,125,29,"criticallyDampedVelocity"],[75,59,125,53],[76,12,126,6],[77,12,128,6],[77,16,128,10,"isOvershooting"],[77,30,128,24],[77,32,128,26],[77,36,128,31,"isVelocity"],[77,46,128,41],[77,50,128,45,"isDisplacement"],[77,64,128,60],[77,66,128,62],[78,14,129,8],[78,18,129,12,"config"],[78,24,129,18],[78,25,129,19,"stiffness"],[78,34,129,28],[78,39,129,33],[78,40,129,34],[78,42,129,36],[79,16,130,10,"animation"],[79,25,130,19],[79,26,130,20,"velocity"],[79,34,130,28],[79,37,130,31],[79,38,130,32],[80,16,131,10,"animation"],[80,25,131,19],[80,26,131,20,"current"],[80,33,131,27],[80,36,131,30,"toValue"],[80,43,131,37],[81,14,132,8],[82,14,134,8,"animation"],[82,23,134,17],[82,24,134,18,"lastTimestamp"],[82,37,134,31],[82,40,134,34],[82,41,134,35],[83,14,135,8],[83,21,135,15],[83,25,135,19],[84,12,136,6],[85,12,137,6],[85,19,137,13],[85,24,137,18],[86,10,138,4],[87,10,140,4],[87,19,140,13,"onStart"],[87,26,140,20],[87,27,141,6,"animation"],[87,36,141,32],[87,38,142,6,"value"],[87,43,142,19],[87,45,143,6,"now"],[87,48,143,20],[87,50,144,6,"previousAnimation"],[87,67,144,40],[87,69,145,12],[88,12,146,6,"animation"],[88,21,146,15],[88,22,146,16,"current"],[88,29,146,23],[88,32,146,26,"value"],[88,37,146,31],[89,12,147,6],[89,16,147,10,"previousAnimation"],[89,33,147,27],[89,35,147,29],[90,14,148,8,"animation"],[90,23,148,17],[90,24,148,18,"velocity"],[90,32,148,26],[90,35,149,10,"previousAnimation"],[90,52,149,27],[90,53,149,28,"velocity"],[90,61,149,36],[90,65,149,40,"animation"],[90,74,149,49],[90,75,149,50,"velocity"],[90,83,149,58],[90,87,149,62],[90,88,149,63],[91,14,150,8,"animation"],[91,23,150,17],[91,24,150,18,"lastTimestamp"],[91,37,150,31],[91,40,150,34,"previousAnimation"],[91,57,150,51],[91,58,150,52,"lastTimestamp"],[91,71,150,65],[91,75,150,69,"now"],[91,78,150,72],[92,12,151,6],[92,13,151,7],[92,19,151,13],[93,14,152,8,"animation"],[93,23,152,17],[93,24,152,18,"lastTimestamp"],[93,37,152,31],[93,40,152,34,"now"],[93,43,152,37],[94,12,153,6],[95,10,154,4],[96,10,156,4],[96,17,156,11],[97,12,157,6,"onFrame"],[97,19,157,13],[97,21,157,15,"spring"],[97,27,157,21],[98,12,158,6,"onStart"],[98,19,158,13],[98,21,158,6,"onStart"],[98,28,158,13],[99,12,159,6,"toValue"],[99,19,159,13],[99,21,159,6,"toValue"],[99,28,159,13],[100,12,160,6,"velocity"],[100,20,160,14],[100,22,160,16,"config"],[100,28,160,22],[100,29,160,23,"velocity"],[100,37,160,31],[100,41,160,35],[100,42,160,36],[101,12,161,6,"current"],[101,19,161,13],[101,21,161,15,"toValue"],[101,28,161,22],[102,12,162,6,"callback"],[102,20,162,14],[102,22,162,6,"callback"],[102,30,162,14],[103,12,163,6,"lastTimestamp"],[103,25,163,19],[103,27,163,21],[104,10,164,4],[104,11,164,5],[105,8,165,2],[105,9,165,3],[106,8,165,3],[107,10,165,3],[107,22,15,66,"userConfig"],[107,32,15,76],[108,10,15,76],[108,19,91,13,"toValue"],[108,26,91,20],[109,10,91,20],[109,20,92,4,"callback"],[110,8,92,12],[111,8,92,12],[112,8,92,12],[113,8,92,12],[114,8,92,12],[115,6,92,12],[115,10,165,4],[116,4,166,0],[116,5,166,1],[117,4,166,1],[118,6,166,1],[118,23,2,9,"defineAnimation"],[119,4,2,24],[120,4,2,24],[121,4,2,24],[122,4,2,24],[123,4,2,24],[124,2,2,24],[125,2,2,24],[126,0,2,24]],"functionMap":{"names":["<global>","withSpring","defineAnimation$argument_1","Object.keys.forEach$argument_0","spring","isOvershooting","onStart"],"mappings":"AAA;OC+B;mDCO;QCiB;6EDC;IEI;6BC4C;ODQ;KFyB;IIE;KJc;GDW;CDC"}},"type":"js/module"}]}