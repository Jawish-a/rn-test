{"dependencies":[{"name":"./util","data":{"asyncType":null,"locs":[{"start":{"line":39,"column":9,"index":835},"end":{"line":39,"column":24,"index":850},"identifierName":"defineAnimation"},{"start":{"line":2,"column":9,"index":143},"end":{"line":2,"column":24,"index":158},"identifierName":"defineAnimation"}],"key":"DQ+NnsvRW532iS20nr5BN5Yr8jw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withSpring = void 0;\n  var withSpring = function () {\n    var _e = [new Error(), -2, -20];\n    var _f = function _f(toValue, userConfig, callback) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./util\").defineAnimation)(toValue, function () {\n        var _e = [new Error(), -4, -20];\n        var _f = function _f() {\n          var config = {\n            damping: 10,\n            mass: 1,\n            stiffness: 100,\n            overshootClamping: false,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 2,\n            velocity: 0\n          };\n          if (userConfig) {\n            Object.keys(userConfig).forEach(function (key) {\n              return config[key] = userConfig[key];\n            });\n          }\n          function spring(animation, now) {\n            var toValue = animation.toValue,\n              lastTimestamp = animation.lastTimestamp,\n              current = animation.current,\n              velocity = animation.velocity;\n            var deltaTime = Math.min(now - lastTimestamp, 64);\n            animation.lastTimestamp = now;\n            var c = config.damping;\n            var m = config.mass;\n            var k = config.stiffness;\n            var v0 = -velocity;\n            var x0 = toValue - current;\n            var zeta = c / (2 * Math.sqrt(k * m));\n            var omega0 = Math.sqrt(k / m);\n            var omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n            var t = deltaTime / 1000;\n            var sin1 = Math.sin(omega1 * t);\n            var cos1 = Math.cos(omega1 * t);\n            var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n            var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n            var underDampedPosition = toValue - underDampedFrag1;\n            var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n            var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n            var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n            var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n            var isOvershooting = function isOvershooting() {\n              if (config.overshootClamping && config.stiffness !== 0) {\n                return current < toValue ? animation.current > toValue : animation.current < toValue;\n              } else {\n                return false;\n              }\n            };\n            var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n            var isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n            if (zeta < 1) {\n              animation.current = underDampedPosition;\n              animation.velocity = underDampedVelocity;\n            } else {\n              animation.current = criticallyDampedPosition;\n              animation.velocity = criticallyDampedVelocity;\n            }\n            if (isOvershooting() || isVelocity && isDisplacement) {\n              if (config.stiffness !== 0) {\n                animation.velocity = 0;\n                animation.current = toValue;\n              }\n              animation.lastTimestamp = 0;\n              return true;\n            }\n            return false;\n          }\n          function onStart(animation, value, now, previousAnimation) {\n            animation.current = value;\n            if (previousAnimation) {\n              animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n              animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n            } else {\n              animation.lastTimestamp = now;\n            }\n          }\n          return {\n            onFrame: spring,\n            onStart: onStart,\n            toValue: toValue,\n            velocity: config.velocity || 0,\n            current: toValue,\n            callback: callback,\n            lastTimestamp: 0\n          };\n        };\n        _f._closure = {\n          userConfig: userConfig,\n          toValue: toValue,\n          callback: callback\n        };\n        _f.asString = \"function anonymous() {\\n  const {\\n    userConfig,\\n    toValue,\\n    callback\\n  } = this._closure;\\n  const config = {\\n    damping: 10,\\n    mass: 1,\\n    stiffness: 100,\\n    overshootClamping: false,\\n    restDisplacementThreshold: 0.01,\\n    restSpeedThreshold: 2,\\n    velocity: 0\\n  };\\n  if (userConfig) {\\n    Object.keys(userConfig).forEach(function (key) {\\n      return config[key] = userConfig[key];\\n    });\\n  }\\n  function spring(animation, now) {\\n    const {\\n      toValue: toValue,\\n      lastTimestamp: lastTimestamp,\\n      current: current,\\n      velocity: velocity\\n    } = animation;\\n    const deltaTime = Math.min(now - lastTimestamp, 64);\\n    animation.lastTimestamp = now;\\n    const c = config.damping;\\n    const m = config.mass;\\n    const k = config.stiffness;\\n    const v0 = -velocity;\\n    const x0 = toValue - current;\\n    const zeta = c / (2 * Math.sqrt(k * m));\\n    const omega0 = Math.sqrt(k / m);\\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\\n    const t = deltaTime / 1000;\\n    const sin1 = Math.sin(omega1 * t);\\n    const cos1 = Math.cos(omega1 * t);\\n    const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\\n    const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\\n    const underDampedPosition = toValue - underDampedFrag1;\\n    const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\\n    const criticallyDampedEnvelope = Math.exp(-omega0 * t);\\n    const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\\n    const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\\n    const isOvershooting = function () {\\n      if (config.overshootClamping && config.stiffness !== 0) {\\n        return current < toValue ? animation.current > toValue : animation.current < toValue;\\n      } else {\\n        return false;\\n      }\\n    };\\n    const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\\n    const isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\\n    if (zeta < 1) {\\n      animation.current = underDampedPosition;\\n      animation.velocity = underDampedVelocity;\\n    } else {\\n      animation.current = criticallyDampedPosition;\\n      animation.velocity = criticallyDampedVelocity;\\n    }\\n    if (isOvershooting() || isVelocity && isDisplacement) {\\n      if (config.stiffness !== 0) {\\n        animation.velocity = 0;\\n        animation.current = toValue;\\n      }\\n      animation.lastTimestamp = 0;\\n      return true;\\n    }\\n    return false;\\n  }\\n  function onStart(animation, value, now, previousAnimation) {\\n    animation.current = value;\\n    if (previousAnimation) {\\n      animation.velocity = previousAnimation.velocity || animation.velocity || 0;\\n      animation.lastTimestamp = previousAnimation.lastTimestamp || now;\\n    } else {\\n      animation.lastTimestamp = now;\\n    }\\n  }\\n  return {\\n    onFrame: spring,\\n    onStart: onStart,\\n    toValue: toValue,\\n    velocity: config.velocity || 0,\\n    current: toValue,\\n    callback: callback,\\n    lastTimestamp: 0\\n  };\\n}\";\n        _f.__workletHash = 720321806976;\n        _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\";\n        _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"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\\\",\\\"names\\\":[\\\"config\\\",\\\"damping\\\",\\\"mass\\\",\\\"stiffness\\\",\\\"overshootClamping\\\",\\\"restDisplacementThreshold\\\",\\\"restSpeedThreshold\\\",\\\"velocity\\\",\\\"userConfig\\\",\\\"Object\\\",\\\"keys\\\",\\\"forEach\\\",\\\"key\\\",\\\"spring\\\",\\\"animation\\\",\\\"now\\\",\\\"toValue\\\",\\\"lastTimestamp\\\",\\\"current\\\",\\\"deltaTime\\\",\\\"Math\\\",\\\"min\\\",\\\"c\\\",\\\"m\\\",\\\"k\\\",\\\"v0\\\",\\\"x0\\\",\\\"zeta\\\",\\\"sqrt\\\",\\\"omega0\\\",\\\"omega1\\\",\\\"t\\\",\\\"sin1\\\",\\\"sin\\\",\\\"cos1\\\",\\\"cos\\\",\\\"underDampedEnvelope\\\",\\\"exp\\\",\\\"underDampedFrag1\\\",\\\"underDampedPosition\\\",\\\"underDampedVelocity\\\",\\\"criticallyDampedEnvelope\\\",\\\"criticallyDampedPosition\\\",\\\"criticallyDampedVelocity\\\",\\\"isOvershooting\\\",\\\"isVelocity\\\",\\\"abs\\\",\\\"isDisplacement\\\",\\\"onStart\\\",\\\"value\\\",\\\"previousAnimation\\\",\\\"onFrame\\\",\\\"callback\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\\\"]}\";\n        _f.__stackDetails = _e;\n        return _f;\n      }());\n    };\n    _f._closure = {\n      defineAnimation: _$$_REQUIRE(_dependencyMap[0], \"./util\").defineAnimation\n    };\n    _f.asString = \"function withSpring(toValue, userConfig, callback) {\\n  const {\\n    defineAnimation\\n  } = this._closure;\\n  return defineAnimation(toValue, function () {\\n    'worklet';\\n    const config = {\\n      damping: 10,\\n      mass: 1,\\n      stiffness: 100,\\n      overshootClamping: false,\\n      restDisplacementThreshold: 0.01,\\n      restSpeedThreshold: 2,\\n      velocity: 0\\n    };\\n    if (userConfig) {\\n      Object.keys(userConfig).forEach(function (key) {\\n        return config[key] = userConfig[key];\\n      });\\n    }\\n    function spring(animation, now) {\\n      const {\\n        toValue: toValue,\\n        lastTimestamp: lastTimestamp,\\n        current: current,\\n        velocity: velocity\\n      } = animation;\\n      const deltaTime = Math.min(now - lastTimestamp, 64);\\n      animation.lastTimestamp = now;\\n      const c = config.damping;\\n      const m = config.mass;\\n      const k = config.stiffness;\\n      const v0 = -velocity;\\n      const x0 = toValue - current;\\n      const zeta = c / (2 * Math.sqrt(k * m));\\n      const omega0 = Math.sqrt(k / m);\\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\\n      const t = deltaTime / 1000;\\n      const sin1 = Math.sin(omega1 * t);\\n      const cos1 = Math.cos(omega1 * t);\\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\\n      const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\\n      const underDampedPosition = toValue - underDampedFrag1;\\n      const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\\n      const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\\n      const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\\n      const isOvershooting = function () {\\n        if (config.overshootClamping && config.stiffness !== 0) {\\n          return current < toValue ? animation.current > toValue : animation.current < toValue;\\n        } else {\\n          return false;\\n        }\\n      };\\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\\n      const isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\\n      if (zeta < 1) {\\n        animation.current = underDampedPosition;\\n        animation.velocity = underDampedVelocity;\\n      } else {\\n        animation.current = criticallyDampedPosition;\\n        animation.velocity = criticallyDampedVelocity;\\n      }\\n      if (isOvershooting() || isVelocity && isDisplacement) {\\n        if (config.stiffness !== 0) {\\n          animation.velocity = 0;\\n          animation.current = toValue;\\n        }\\n        animation.lastTimestamp = 0;\\n        return true;\\n      }\\n      return false;\\n    }\\n    function onStart(animation, value, now, previousAnimation) {\\n      animation.current = value;\\n      if (previousAnimation) {\\n        animation.velocity = previousAnimation.velocity || animation.velocity || 0;\\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\\n      } else {\\n        animation.lastTimestamp = now;\\n      }\\n    }\\n    return {\\n      onFrame: spring,\\n      onStart: onStart,\\n      toValue: toValue,\\n      velocity: config.velocity || 0,\\n      current: toValue,\\n      callback: callback,\\n      lastTimestamp: 0\\n    };\\n  });\\n}\";\n    _f.__workletHash = 6340405736484;\n    _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\";\n    _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"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\\\",\\\"names\\\":[\\\"withSpring\\\",\\\"toValue\\\",\\\"userConfig\\\",\\\"callback\\\",\\\"defineAnimation\\\",\\\"config\\\",\\\"damping\\\",\\\"mass\\\",\\\"stiffness\\\",\\\"overshootClamping\\\",\\\"restDisplacementThreshold\\\",\\\"restSpeedThreshold\\\",\\\"velocity\\\",\\\"Object\\\",\\\"keys\\\",\\\"forEach\\\",\\\"key\\\",\\\"spring\\\",\\\"animation\\\",\\\"now\\\",\\\"lastTimestamp\\\",\\\"current\\\",\\\"deltaTime\\\",\\\"Math\\\",\\\"min\\\",\\\"c\\\",\\\"m\\\",\\\"k\\\",\\\"v0\\\",\\\"x0\\\",\\\"zeta\\\",\\\"sqrt\\\",\\\"omega0\\\",\\\"omega1\\\",\\\"t\\\",\\\"sin1\\\",\\\"sin\\\",\\\"cos1\\\",\\\"cos\\\",\\\"underDampedEnvelope\\\",\\\"exp\\\",\\\"underDampedFrag1\\\",\\\"underDampedPosition\\\",\\\"underDampedVelocity\\\",\\\"criticallyDampedEnvelope\\\",\\\"criticallyDampedPosition\\\",\\\"criticallyDampedVelocity\\\",\\\"isOvershooting\\\",\\\"isVelocity\\\",\\\"abs\\\",\\\"isDisplacement\\\",\\\"onStart\\\",\\\"value\\\",\\\"previousAnimation\\\",\\\"onFrame\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/animation/spring.ts\\\"]}\";\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  exports.withSpring = withSpring;\n});","lineCount":120,"map":[[6,6,32,16,"withSpring"],[6,16,32,26],[7,4,32,26],[8,4,32,26],[8,25,33,2,"toValue"],[8,32,33,26],[8,34,34,2,"userConfig"],[8,44,34,27],[8,46,35,2,"callback"],[8,54,35,30],[8,56,36,30],[9,6,39,2],[9,13,39,9],[9,17,39,9,"defineAnimation"],[9,73,39,24],[9,75,39,42,"toValue"],[9,82,39,49],[10,8,39,49],[11,8,39,49],[11,31,39,57],[12,10,45,4],[12,14,45,10,"config"],[12,20,45,40],[12,23,45,43],[13,12,46,6,"damping"],[13,19,46,13],[13,21,46,15],[13,23,46,17],[14,12,47,6,"mass"],[14,16,47,10],[14,18,47,12],[14,19,47,13],[15,12,48,6,"stiffness"],[15,21,48,15],[15,23,48,17],[15,26,48,20],[16,12,49,6,"overshootClamping"],[16,29,49,23],[16,31,49,25],[16,36,49,30],[17,12,50,6,"restDisplacementThreshold"],[17,37,50,31],[17,39,50,33],[17,43,50,37],[18,12,51,6,"restSpeedThreshold"],[18,30,51,24],[18,32,51,26],[18,33,51,27],[19,12,52,6,"velocity"],[19,20,52,14],[19,22,52,16],[20,10,53,4],[20,11,53,5],[21,10,54,4],[21,14,54,8,"userConfig"],[21,24,54,18],[21,26,54,20],[22,12,55,6,"Object"],[22,18,55,12],[22,19,55,13,"keys"],[22,23,55,17],[22,24,55,18,"userConfig"],[22,34,55,28],[22,35,55,29],[22,36,55,30,"forEach"],[22,43,55,37],[22,44,56,8],[22,54,56,9,"key"],[22,57,56,12],[23,14,56,12],[23,21,57,12,"config"],[23,27,57,18],[23,28,57,27,"key"],[23,31,57,30],[23,32,57,31],[23,35,57,34,"userConfig"],[23,45,57,44],[23,46,57,45,"key"],[23,49,57,48],[23,50,57,76],[24,12,57,76],[24,13,57,77],[24,14,58,7],[25,10,59,4],[26,10,61,4],[26,19,61,13,"spring"],[26,25,61,19],[26,26,61,20,"animation"],[26,35,61,51],[26,37,61,53,"now"],[26,40,61,67],[26,42,61,78],[27,12,62,6],[27,16,62,14,"toValue"],[27,23,62,21],[27,26,62,60,"animation"],[27,35,62,69],[27,36,62,14,"toValue"],[27,43,62,21],[28,14,62,23,"lastTimestamp"],[28,27,62,36],[28,30,62,60,"animation"],[28,39,62,69],[28,40,62,23,"lastTimestamp"],[28,53,62,36],[29,14,62,38,"current"],[29,21,62,45],[29,24,62,60,"animation"],[29,33,62,69],[29,34,62,38,"current"],[29,41,62,45],[30,14,62,47,"velocity"],[30,22,62,55],[30,25,62,60,"animation"],[30,34,62,69],[30,35,62,47,"velocity"],[30,43,62,55],[31,12,64,6],[31,16,64,12,"deltaTime"],[31,25,64,21],[31,28,64,24,"Math"],[31,32,64,28],[31,33,64,29,"min"],[31,36,64,32],[31,37,64,33,"now"],[31,40,64,36],[31,43,64,39,"lastTimestamp"],[31,56,64,52],[31,58,64,54],[31,60,64,56],[31,61,64,57],[32,12,65,6,"animation"],[32,21,65,15],[32,22,65,16,"lastTimestamp"],[32,35,65,29],[32,38,65,32,"now"],[32,41,65,35],[33,12,67,6],[33,16,67,12,"c"],[33,17,67,13],[33,20,67,16,"config"],[33,26,67,22],[33,27,67,23,"damping"],[33,34,67,30],[34,12,68,6],[34,16,68,12,"m"],[34,17,68,13],[34,20,68,16,"config"],[34,26,68,22],[34,27,68,23,"mass"],[34,31,68,27],[35,12,69,6],[35,16,69,12,"k"],[35,17,69,13],[35,20,69,16,"config"],[35,26,69,22],[35,27,69,23,"stiffness"],[35,36,69,32],[36,12,71,6],[36,16,71,12,"v0"],[36,18,71,14],[36,21,71,17],[36,22,71,18,"velocity"],[36,30,71,26],[37,12,72,6],[37,16,72,12,"x0"],[37,18,72,14],[37,21,72,17,"toValue"],[37,28,72,24],[37,31,72,27,"current"],[37,38,72,34],[38,12,74,6],[38,16,74,12,"zeta"],[38,20,74,16],[38,23,74,19,"c"],[38,24,74,20],[38,28,74,24],[38,29,74,25],[38,32,74,28,"Math"],[38,36,74,32],[38,37,74,33,"sqrt"],[38,41,74,37],[38,42,74,38,"k"],[38,43,74,39],[38,46,74,42,"m"],[38,47,74,43],[38,48,74,44],[38,49,74,45],[39,12,75,6],[39,16,75,12,"omega0"],[39,22,75,18],[39,25,75,21,"Math"],[39,29,75,25],[39,30,75,26,"sqrt"],[39,34,75,30],[39,35,75,31,"k"],[39,36,75,32],[39,39,75,35,"m"],[39,40,75,36],[39,41,75,37],[40,12,76,6],[40,16,76,12,"omega1"],[40,22,76,18],[40,25,76,21,"omega0"],[40,31,76,27],[40,34,76,30,"Math"],[40,38,76,34],[40,39,76,35,"sqrt"],[40,43,76,39],[40,44,76,40],[40,45,76,41],[40,48,76,44,"zeta"],[40,52,76,48],[40,56,76,52],[40,57,76,53],[40,58,76,54],[41,12,78,6],[41,16,78,12,"t"],[41,17,78,13],[41,20,78,16,"deltaTime"],[41,29,78,25],[41,32,78,28],[41,36,78,32],[42,12,80,6],[42,16,80,12,"sin1"],[42,20,80,16],[42,23,80,19,"Math"],[42,27,80,23],[42,28,80,24,"sin"],[42,31,80,27],[42,32,80,28,"omega1"],[42,38,80,34],[42,41,80,37,"t"],[42,42,80,38],[42,43,80,39],[43,12,81,6],[43,16,81,12,"cos1"],[43,20,81,16],[43,23,81,19,"Math"],[43,27,81,23],[43,28,81,24,"cos"],[43,31,81,27],[43,32,81,28,"omega1"],[43,38,81,34],[43,41,81,37,"t"],[43,42,81,38],[43,43,81,39],[44,12,84,6],[44,16,84,12,"underDampedEnvelope"],[44,35,84,31],[44,38,84,34,"Math"],[44,42,84,38],[44,43,84,39,"exp"],[44,46,84,42],[44,47,84,43],[44,48,84,44,"zeta"],[44,52,84,48],[44,55,84,51,"omega0"],[44,61,84,57],[44,64,84,60,"t"],[44,65,84,61],[44,66,84,62],[45,12,85,6],[45,16,85,12,"underDampedFrag1"],[45,32,85,28],[45,35,86,8,"underDampedEnvelope"],[45,54,86,27],[45,58,87,9,"sin1"],[45,62,87,13],[45,66,87,17],[45,67,87,18,"v0"],[45,69,87,20],[45,72,87,23,"zeta"],[45,76,87,27],[45,79,87,30,"omega0"],[45,85,87,36],[45,88,87,39,"x0"],[45,90,87,41],[45,94,87,45,"omega1"],[45,100,87,51],[45,101,87,52],[45,104,87,55,"x0"],[45,106,87,57],[45,109,87,60,"cos1"],[45,113,87,64],[45,114,87,65],[46,12,89,6],[46,16,89,12,"underDampedPosition"],[46,35,89,31],[46,38,89,34,"toValue"],[46,45,89,41],[46,48,89,44,"underDampedFrag1"],[46,64,89,60],[47,12,91,6],[47,16,91,12,"underDampedVelocity"],[47,35,91,31],[47,38,92,8,"zeta"],[47,42,92,12],[47,45,92,15,"omega0"],[47,51,92,21],[47,54,92,24,"underDampedFrag1"],[47,70,92,40],[47,73,93,8,"underDampedEnvelope"],[47,92,93,27],[47,96,94,11,"cos1"],[47,100,94,15],[47,104,94,19,"v0"],[47,106,94,21],[47,109,94,24,"zeta"],[47,113,94,28],[47,116,94,31,"omega0"],[47,122,94,37],[47,125,94,40,"x0"],[47,127,94,42],[47,128,94,43],[47,131,94,46,"omega1"],[47,137,94,52],[47,140,94,55,"x0"],[47,142,94,57],[47,145,94,60,"sin1"],[47,149,94,64],[47,150,94,65],[48,12,97,6],[48,16,97,12,"criticallyDampedEnvelope"],[48,40,97,36],[48,43,97,39,"Math"],[48,47,97,43],[48,48,97,44,"exp"],[48,51,97,47],[48,52,97,48],[48,53,97,49,"omega0"],[48,59,97,55],[48,62,97,58,"t"],[48,63,97,59],[48,64,97,60],[49,12,98,6],[49,16,98,12,"criticallyDampedPosition"],[49,40,98,36],[49,43,99,8,"toValue"],[49,50,99,15],[49,53,99,18,"criticallyDampedEnvelope"],[49,77,99,42],[49,81,99,46,"x0"],[49,83,99,48],[49,86,99,51],[49,87,99,52,"v0"],[49,89,99,54],[49,92,99,57,"omega0"],[49,98,99,63],[49,101,99,66,"x0"],[49,103,99,68],[49,107,99,72,"t"],[49,108,99,73],[49,109,99,74],[50,12,101,6],[50,16,101,12,"criticallyDampedVelocity"],[50,40,101,36],[50,43,102,8,"criticallyDampedEnvelope"],[50,67,102,32],[50,71,103,9,"v0"],[50,73,103,11],[50,77,103,15,"t"],[50,78,103,16],[50,81,103,19,"omega0"],[50,87,103,25],[50,90,103,28],[50,91,103,29],[50,92,103,30],[50,95,103,33,"t"],[50,96,103,34],[50,99,103,37,"x0"],[50,101,103,39],[50,104,103,42,"omega0"],[50,110,103,48],[50,113,103,51,"omega0"],[50,119,103,57],[50,120,103,58],[51,12,105,6],[51,16,105,12,"isOvershooting"],[51,30,105,26],[51,33,105,29],[51,42,105,12,"isOvershooting"],[51,56,105,26],[51,59,105,35],[52,14,106,8],[52,18,106,12,"config"],[52,24,106,18],[52,25,106,19,"overshootClamping"],[52,42,106,36],[52,46,106,40,"config"],[52,52,106,46],[52,53,106,47,"stiffness"],[52,62,106,56],[52,67,106,61],[52,68,106,62],[52,70,106,64],[53,16,107,10],[53,23,107,17,"current"],[53,30,107,24],[53,33,107,27,"toValue"],[53,40,107,34],[53,43,108,14,"animation"],[53,52,108,23],[53,53,108,24,"current"],[53,60,108,31],[53,63,108,34,"toValue"],[53,70,108,41],[53,73,109,14,"animation"],[53,82,109,23],[53,83,109,24,"current"],[53,90,109,31],[53,93,109,34,"toValue"],[53,100,109,41],[54,14,110,8],[54,15,110,9],[54,21,110,15],[55,16,111,10],[55,23,111,17],[55,28,111,22],[56,14,112,8],[57,12,113,6],[57,13,113,7],[58,12,115,6],[58,16,115,12,"isVelocity"],[58,26,115,22],[58,29,115,25,"Math"],[58,33,115,29],[58,34,115,30,"abs"],[58,37,115,33],[58,38,115,34,"velocity"],[58,46,115,42],[58,47,115,43],[58,50,115,46,"config"],[58,56,115,52],[58,57,115,53,"restSpeedThreshold"],[58,75,115,71],[59,12,116,6],[59,16,116,12,"isDisplacement"],[59,30,116,26],[59,33,117,8,"config"],[59,39,117,14],[59,40,117,15,"stiffness"],[59,49,117,24],[59,54,117,29],[59,55,117,30],[59,59,118,8,"Math"],[59,63,118,12],[59,64,118,13,"abs"],[59,67,118,16],[59,68,118,17,"toValue"],[59,75,118,24],[59,78,118,27,"current"],[59,85,118,34],[59,86,118,35],[59,89,118,38,"config"],[59,95,118,44],[59,96,118,45,"restDisplacementThreshold"],[59,121,118,70],[60,12,120,6],[60,16,120,10,"zeta"],[60,20,120,14],[60,23,120,17],[60,24,120,18],[60,26,120,20],[61,14,121,8,"animation"],[61,23,121,17],[61,24,121,18,"current"],[61,31,121,25],[61,34,121,28,"underDampedPosition"],[61,53,121,47],[62,14,122,8,"animation"],[62,23,122,17],[62,24,122,18,"velocity"],[62,32,122,26],[62,35,122,29,"underDampedVelocity"],[62,54,122,48],[63,12,123,6],[63,13,123,7],[63,19,123,13],[64,14,124,8,"animation"],[64,23,124,17],[64,24,124,18,"current"],[64,31,124,25],[64,34,124,28,"criticallyDampedPosition"],[64,58,124,52],[65,14,125,8,"animation"],[65,23,125,17],[65,24,125,18,"velocity"],[65,32,125,26],[65,35,125,29,"criticallyDampedVelocity"],[65,59,125,53],[66,12,126,6],[67,12,128,6],[67,16,128,10,"isOvershooting"],[67,30,128,24],[67,32,128,26],[67,36,128,31,"isVelocity"],[67,46,128,41],[67,50,128,45,"isDisplacement"],[67,64,128,60],[67,66,128,62],[68,14,129,8],[68,18,129,12,"config"],[68,24,129,18],[68,25,129,19,"stiffness"],[68,34,129,28],[68,39,129,33],[68,40,129,34],[68,42,129,36],[69,16,130,10,"animation"],[69,25,130,19],[69,26,130,20,"velocity"],[69,34,130,28],[69,37,130,31],[69,38,130,32],[70,16,131,10,"animation"],[70,25,131,19],[70,26,131,20,"current"],[70,33,131,27],[70,36,131,30,"toValue"],[70,43,131,37],[71,14,132,8],[72,14,134,8,"animation"],[72,23,134,17],[72,24,134,18,"lastTimestamp"],[72,37,134,31],[72,40,134,34],[72,41,134,35],[73,14,135,8],[73,21,135,15],[73,25,135,19],[74,12,136,6],[75,12,137,6],[75,19,137,13],[75,24,137,18],[76,10,138,4],[77,10,140,4],[77,19,140,13,"onStart"],[77,26,140,20],[77,27,141,6,"animation"],[77,36,141,32],[77,38,142,6,"value"],[77,43,142,19],[77,45,143,6,"now"],[77,48,143,20],[77,50,144,6,"previousAnimation"],[77,67,144,40],[77,69,145,12],[78,12,146,6,"animation"],[78,21,146,15],[78,22,146,16,"current"],[78,29,146,23],[78,32,146,26,"value"],[78,37,146,31],[79,12,147,6],[79,16,147,10,"previousAnimation"],[79,33,147,27],[79,35,147,29],[80,14,148,8,"animation"],[80,23,148,17],[80,24,148,18,"velocity"],[80,32,148,26],[80,35,149,10,"previousAnimation"],[80,52,149,27],[80,53,149,28,"velocity"],[80,61,149,36],[80,65,149,40,"animation"],[80,74,149,49],[80,75,149,50,"velocity"],[80,83,149,58],[80,87,149,62],[80,88,149,63],[81,14,150,8,"animation"],[81,23,150,17],[81,24,150,18,"lastTimestamp"],[81,37,150,31],[81,40,150,34,"previousAnimation"],[81,57,150,51],[81,58,150,52,"lastTimestamp"],[81,71,150,65],[81,75,150,69,"now"],[81,78,150,72],[82,12,151,6],[82,13,151,7],[82,19,151,13],[83,14,152,8,"animation"],[83,23,152,17],[83,24,152,18,"lastTimestamp"],[83,37,152,31],[83,40,152,34,"now"],[83,43,152,37],[84,12,153,6],[85,10,154,4],[86,10,156,4],[86,17,156,11],[87,12,157,6,"onFrame"],[87,19,157,13],[87,21,157,15,"spring"],[87,27,157,21],[88,12,158,6,"onStart"],[88,19,158,13],[88,21,158,6,"onStart"],[88,28,158,13],[89,12,159,6,"toValue"],[89,19,159,13],[89,21,159,6,"toValue"],[89,28,159,13],[90,12,160,6,"velocity"],[90,20,160,14],[90,22,160,16,"config"],[90,28,160,22],[90,29,160,23,"velocity"],[90,37,160,31],[90,41,160,35],[90,42,160,36],[91,12,161,6,"current"],[91,19,161,13],[91,21,161,15,"toValue"],[91,28,161,22],[92,12,162,6,"callback"],[92,20,162,14],[92,22,162,6,"callback"],[92,30,162,14],[93,12,163,6,"lastTimestamp"],[93,25,163,19],[93,27,163,21],[94,10,164,4],[94,11,164,5],[95,8,165,2],[95,9,165,3],[96,8,165,3],[97,10,165,3],[97,22,15,66,"userConfig"],[97,32,15,76],[98,10,15,76],[98,19,91,13,"toValue"],[98,26,91,20],[99,10,91,20],[99,20,92,4,"callback"],[100,8,92,12],[101,8,92,12],[102,8,92,12],[103,8,92,12],[104,8,92,12],[105,8,92,12],[106,8,92,12],[107,6,92,12],[107,10,165,4],[108,4,166,0],[108,5,166,1],[109,4,166,1],[110,6,166,1],[110,23,2,9,"defineAnimation"],[111,4,2,24],[112,4,2,24],[113,4,2,24],[114,4,2,24],[115,4,2,24],[116,4,2,24],[117,4,2,24],[118,2,2,24],[119,2,2,24],[120,0,2,24]],"functionMap":{"names":["<global>","withSpring","defineAnimation$argument_1","Object.keys.forEach$argument_0","spring","isOvershooting","onStart"],"mappings":"AAA;OC+B;mDCO;QCiB;6EDC;IEI;6BC4C;ODQ;KFyB;IIE;KJc;GDW;CDC"}},"type":"js/module"}]}