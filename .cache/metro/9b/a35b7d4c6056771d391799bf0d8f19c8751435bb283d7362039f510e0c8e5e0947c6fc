{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}},{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}},{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}},{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}},{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}},{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":735,"column":0,"index":23986}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"../State","data":{"asyncType":null,"locs":[{"start":{"line":368,"column":33,"index":11739},"end":{"line":368,"column":38,"index":11744},"identifierName":"State"},{"start":{"line":370,"column":37,"index":11835},"end":{"line":370,"column":42,"index":11840},"identifierName":"State"},{"start":{"line":387,"column":31,"index":12362},"end":{"line":387,"column":36,"index":12367},"identifierName":"State"}],"key":"Q8nOM11Vuvfos2IZ/lO9FOcbk+g="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":561,"column":6,"index":18270},"end":{"line":567,"column":26,"index":18559}},{"start":{"line":562,"column":8,"index":18350},"end":{"line":566,"column":10,"index":18532}},{"start":{"line":632,"column":6,"index":20606},"end":{"line":658,"column":22,"index":21650}},{"start":{"line":633,"column":8,"index":20688},"end":{"line":648,"column":24,"index":21221}},{"start":{"line":649,"column":8,"index":21230},"end":{"line":657,"column":24,"index":21627}},{"start":{"line":654,"column":10,"index":21470},"end":{"line":656,"column":17,"index":21602}},{"start":{"line":691,"column":6,"index":22887},"end":{"line":707,"column":26,"index":23536}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":561,"column":7,"index":18271},"end":{"line":561,"column":24,"index":18288}}],"key":"udDdKFGO2nasp6gS3VqBD6s+kqU="}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"locs":[{"start":{"line":691,"column":7,"index":22888},"end":{"line":691,"column":24,"index":22905}}],"key":"bn+lbxpMbf3je7YiD+sp2eAm3NM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n  var _invariant = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"invariant\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n  var DrawerLayout = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n    var _super = _createSuper(DrawerLayout);\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _super.call(this, _props);\n      _this.accessibilityIsModalView = React.createRef();\n      _this.pointerEventsView = React.createRef();\n      _this.panGestureHandler = React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = function (ev) {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide == null ? void 0 : _this.props.onDrawerSlide(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged == null ? void 0 : _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _$$_REQUIRE(_dependencyMap[9], \"../State\").State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent: nativeEvent\n          });\n        } else if (nativeEvent.state === _$$_REQUIRE(_dependencyMap[9], \"../State\").State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _$$_REQUIRE(_dependencyMap[9], \"../State\").State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = function (showing) {\n        var _this$accessibilityIs, _this$pointerEventsVi, _this$panGestureHandl;\n        _this.drawerShown = showing;\n        (_this$accessibilityIs = _this.accessibilityIsModalView.current) == null ? void 0 : _this$accessibilityIs.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        (_this$pointerEventsVi = _this.pointerEventsView.current) == null ? void 0 : _this$pointerEventsVi.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        (_this$panGestureHandl = _this.panGestureHandler.current) == null ? void 0 : _this$panGestureHandl.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = function (fromValue, toValue, velocity, speed) {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed != null ? speed : undefined\n        }).start(function (_ref5) {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen == null ? void 0 : _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose == null ? void 0 : _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = function () {\n        (0, _invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return (0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[11], \"../handlers/TapGestureHandler\").TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: (0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsx)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          })\n        });\n      };\n      _this.renderDrawer = function () {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return (0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsxs)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [(0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsxs)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }), (0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsx)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: (0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsx)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            })\n          })]\n        });\n      };\n      _this.setPanGestureRef = function (ref) {\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef == null ? void 0 : _this.props.onGestureRef(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return (0, _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[12], \"../handlers/PanGestureHandler\").PanGestureHandler, {\n          userSelect: this.props.userSelect,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        });\n      }\n    }]);\n    return DrawerLayout;\n  }(React.Component);\n  exports.default = DrawerLayout;\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","lineCount":413,"map":[[11,2,9,0],[12,2,11,0],[13,2,12,0],[14,2,24,22],[15,2,24,22],[16,2,24,22],[17,2,24,22],[18,2,41,0],[18,6,41,6,"DRAG_TOSS"],[18,15,41,15],[18,18,41,18],[18,22,41,22],[19,2,43,0],[19,6,43,6,"IDLE"],[19,10,43,23],[19,13,43,26],[19,19,43,32],[20,2,44,0],[20,6,44,6,"DRAGGING"],[20,14,44,27],[20,17,44,30],[20,27,44,40],[21,2,45,0],[21,6,45,6,"SETTLING"],[21,14,45,27],[21,17,45,30],[21,27,45,40],[22,2,45,41],[22,6,183,21,"DrawerLayout"],[22,18,183,33],[23,4,183,33],[24,4,183,33],[25,4,199,2],[25,26,199,14,"props"],[25,32,199,38],[25,34,199,40],[26,6,199,40],[27,6,199,40],[28,6,200,4],[28,32,200,10,"props"],[28,38,200,15],[29,6,200,17],[29,12,235,10,"accessibilityIsModalView"],[29,36,235,34],[29,39,235,37,"React"],[29,44,235,42],[29,45,235,43,"createRef"],[29,54,235,52],[29,56,235,60],[30,6,235,60],[30,12,236,10,"pointerEventsView"],[30,29,236,27],[30,32,236,30,"React"],[30,37,236,35],[30,38,236,36,"createRef"],[30,47,236,45],[30,49,236,53],[31,6,236,53],[31,12,237,10,"panGestureHandler"],[31,29,237,27],[31,32,237,30,"React"],[31,37,237,35],[31,38,237,36,"createRef"],[31,47,237,45],[31,49,237,73],[32,6,237,73],[32,12,238,10,"drawerShown"],[32,23,238,21],[32,26,238,24],[32,31,238,29],[33,6,238,29],[33,12,245,10,"updateAnimatedEvent"],[33,31,245,29],[33,34,245,32],[33,44,246,4,"props"],[33,49,246,28],[33,51,247,4,"state"],[33,56,247,28],[33,58,248,7],[34,8,250,4],[34,12,250,12,"drawerPosition"],[34,26,250,26],[34,29,250,56,"props"],[34,34,250,61],[34,35,250,12,"drawerPosition"],[34,49,250,26],[35,10,250,28,"drawerWidth"],[35,21,250,39],[35,24,250,56,"props"],[35,29,250,61],[35,30,250,28,"drawerWidth"],[35,41,250,39],[36,10,250,41,"drawerType"],[36,20,250,51],[36,23,250,56,"props"],[36,28,250,61],[36,29,250,41,"drawerType"],[36,39,250,51],[37,8,251,4],[37,12,252,13,"dragXValue"],[37,22,252,23],[37,25,256,8,"state"],[37,30,256,13],[37,31,252,6,"dragX"],[37,36,252,11],[38,10,253,14,"touchXValue"],[38,21,253,25],[38,24,256,8,"state"],[38,29,256,13],[38,30,253,6,"touchX"],[38,36,253,12],[39,10,254,6,"drawerTranslation"],[39,27,254,23],[39,30,256,8,"state"],[39,35,256,13],[39,36,254,6,"drawerTranslation"],[39,53,254,23],[40,10,255,6,"containerWidth"],[40,24,255,20],[40,27,256,8,"state"],[40,32,256,13],[40,33,255,6,"containerWidth"],[40,47,255,20],[41,8,258,4],[41,12,258,8,"dragX"],[41,17,258,13],[41,20,258,16,"dragXValue"],[41,30,258,26],[42,8,259,4],[42,12,259,8,"touchX"],[42,18,259,14],[42,21,259,17,"touchXValue"],[42,32,259,28],[43,8,261,4],[43,12,261,8,"drawerPosition"],[43,26,261,22],[43,31,261,27],[43,37,261,33],[43,39,261,35],[44,10,268,6,"dragX"],[44,15,268,11],[44,18,268,14,"Animated"],[44,39,268,22],[44,40,268,23,"multiply"],[44,48,268,31],[44,49,269,8],[44,53,269,12,"Animated"],[44,74,269,20],[44,75,269,21,"Value"],[44,80,269,26],[44,81,269,27],[44,82,269,28],[44,83,269,29],[44,84,269,30],[44,86,270,8,"dragXValue"],[44,96,270,18],[44,97,271,25],[45,10,272,6,"touchX"],[45,16,272,12],[45,19,272,15,"Animated"],[45,40,272,23],[45,41,272,24,"add"],[45,44,272,27],[45,45,273,8],[45,49,273,12,"Animated"],[45,70,273,20],[45,71,273,21,"Value"],[45,76,273,26],[45,77,273,27,"containerWidth"],[45,91,273,41],[45,92,273,42],[45,94,274,8,"Animated"],[45,115,274,16],[45,116,274,17,"multiply"],[45,124,274,25],[45,125,274,26],[45,129,274,30,"Animated"],[45,150,274,38],[45,151,274,39,"Value"],[45,156,274,44],[45,157,274,45],[45,158,274,46],[45,159,274,47],[45,160,274,48],[45,162,274,50,"touchXValue"],[45,173,274,61],[45,174,274,62],[45,175,275,25],[46,10,276,6,"touchXValue"],[46,21,276,17],[46,22,276,18,"setValue"],[46,30,276,26],[46,31,276,27,"containerWidth"],[46,45,276,41],[46,46,276,42],[47,8,277,4],[47,9,277,5],[47,15,277,11],[48,10,278,6,"touchXValue"],[48,21,278,17],[48,22,278,18,"setValue"],[48,30,278,26],[48,31,278,27],[48,32,278,28],[48,33,278,29],[49,8,279,4],[50,8,306,4],[50,12,306,8,"translationX"],[50,24,306,20],[50,27,306,23,"dragX"],[50,32,306,28],[51,8,307,4],[51,12,307,8,"drawerType"],[51,22,307,18],[51,27,307,23],[51,34,307,30],[51,36,307,32],[52,10,308,6],[52,14,308,12,"startPositionX"],[52,28,308,26],[52,31,308,29,"Animated"],[52,52,308,37],[52,53,308,38,"add"],[52,56,308,41],[52,57,309,8,"touchX"],[52,63,309,14],[52,65,310,8,"Animated"],[52,86,310,16],[52,87,310,17,"multiply"],[52,95,310,25],[52,96,310,26],[52,100,310,30,"Animated"],[52,121,310,38],[52,122,310,39,"Value"],[52,127,310,44],[52,128,310,45],[52,129,310,46],[52,130,310,47],[52,131,310,48],[52,133,310,50,"dragX"],[52,138,310,55],[52,139,310,56],[52,140,311,7],[53,10,313,6],[53,14,313,12,"dragOffsetFromOnStartPosition"],[53,43,313,41],[53,46,313,44,"startPositionX"],[53,60,313,58],[53,61,313,59,"interpolate"],[53,72,313,70],[53,73,313,71],[54,12,314,8,"inputRange"],[54,22,314,18],[54,24,314,20],[54,25,314,21,"drawerWidth"],[54,36,314,32],[54,39,314,36],[54,40,314,37],[54,42,314,39,"drawerWidth"],[54,53,314,50],[54,55,314,53,"drawerWidth"],[54,66,314,64],[54,69,314,68],[54,70,314,69],[54,71,314,70],[55,12,315,8,"outputRange"],[55,23,315,19],[55,25,315,21],[55,26,315,22],[55,27,315,23],[55,29,315,25],[55,30,315,26],[55,32,315,28],[55,33,315,29],[56,10,316,6],[56,11,316,7],[56,12,316,8],[57,10,317,6,"translationX"],[57,22,317,18],[57,25,317,21,"Animated"],[57,46,317,29],[57,47,317,30,"add"],[57,50,317,33],[57,51,318,8,"dragX"],[57,56,318,13],[57,58,319,8,"dragOffsetFromOnStartPosition"],[57,87,319,37],[57,88,320,25],[58,8,321,4],[59,8,323,4],[59,14,323,9,"openValue"],[59,23,323,18],[59,26,323,21,"Animated"],[59,47,323,29],[59,48,323,30,"add"],[59,51,323,33],[59,52,323,34,"translationX"],[59,64,323,46],[59,66,323,48,"drawerTranslation"],[59,83,323,65],[59,84,323,66],[59,85,323,67,"interpolate"],[59,96,323,78],[59,97,323,79],[60,10,324,6,"inputRange"],[60,20,324,16],[60,22,324,18],[60,23,324,19],[60,24,324,20],[60,26,324,22,"drawerWidth"],[60,37,324,33],[60,38,324,35],[61,10,325,6,"outputRange"],[61,21,325,17],[61,23,325,19],[61,24,325,20],[61,25,325,21],[61,27,325,23],[61,28,325,24],[61,29,325,25],[62,10,326,6,"extrapolate"],[62,21,326,17],[62,23,326,19],[63,8,327,4],[63,9,327,5],[63,10,327,6],[64,8,329,4],[64,12,329,10,"gestureOptions"],[64,26,335,5],[64,29,335,8],[65,10,336,6,"useNativeDriver"],[65,25,336,21],[65,27,336,23,"props"],[65,32,336,28],[65,33,336,29,"useNativeAnimations"],[66,8,337,4],[66,9,337,5],[67,8,339,4],[67,12,339,8],[67,18,339,13,"props"],[67,23,339,18],[67,24,339,19,"onDrawerSlide"],[67,37,339,32],[67,39,339,34],[68,10,340,6,"gestureOptions"],[68,24,340,20],[68,25,340,21,"listener"],[68,33,340,29],[68,36,340,32],[68,46,340,33,"ev"],[68,48,340,35],[68,50,340,40],[69,12,341,8],[69,16,341,14,"translationX"],[69,28,341,26],[69,31,341,29,"Math"],[69,35,341,33],[69,36,341,34,"floor"],[69,41,341,39],[69,42,341,40,"Math"],[69,46,341,44],[69,47,341,45,"abs"],[69,50,341,48],[69,51,341,49,"ev"],[69,53,341,51],[69,54,341,52,"nativeEvent"],[69,65,341,63],[69,66,341,64,"translationX"],[69,78,341,76],[69,79,341,77],[69,80,341,78],[70,12,342,8],[70,16,342,14,"position"],[70,24,342,22],[70,27,342,25,"translationX"],[70,39,342,37],[70,42,342,40],[70,48,342,45,"state"],[70,53,342,50],[70,54,342,51,"containerWidth"],[70,68,342,65],[71,12,344,8],[71,18,344,13,"props"],[71,23,344,18],[71,24,344,19,"onDrawerSlide"],[71,37,344,32],[71,57,344,8],[71,63,344,13,"props"],[71,68,344,18],[71,69,344,19,"onDrawerSlide"],[71,82,344,32],[71,83,344,35,"position"],[71,91,344,43],[71,92,344,44],[72,10,345,6],[72,11,345,7],[73,8,346,4],[74,8,348,4],[74,14,348,9,"onGestureEvent"],[74,28,348,23],[74,31,348,26,"Animated"],[74,52,348,34],[74,53,348,35,"event"],[74,58,348,40],[74,59,349,6],[74,60,349,7],[75,10,349,9,"nativeEvent"],[75,21,349,20],[75,23,349,22],[76,12,349,24,"translationX"],[76,24,349,36],[76,26,349,38,"dragXValue"],[76,36,349,48],[77,12,349,50,"x"],[77,13,349,51],[77,15,349,53,"touchXValue"],[78,10,349,65],[79,8,349,67],[79,9,349,68],[79,10,349,69],[79,12,350,6,"gestureOptions"],[79,26,350,20],[79,27,351,5],[80,6,352,2],[80,7,352,3],[81,6,352,3],[81,12,354,10,"handleContainerLayout"],[81,33,354,31],[81,36,354,34],[81,52,354,74],[82,8,354,74],[82,12,354,37,"nativeEvent"],[82,23,354,48],[82,31,354,37,"nativeEvent"],[82,42,354,48],[83,8,355,4],[83,14,355,9,"setState"],[83,22,355,17],[83,23,355,18],[84,10,355,20,"containerWidth"],[84,24,355,34],[84,26,355,36,"nativeEvent"],[84,37,355,47],[84,38,355,48,"layout"],[84,44,355,54],[84,45,355,55,"width"],[85,8,355,61],[85,9,355,62],[85,10,355,63],[86,6,356,2],[86,7,356,3],[87,6,356,3],[87,12,358,10,"emitStateChanged"],[87,28,358,26],[87,31,358,29],[87,41,359,4,"newState"],[87,49,359,25],[87,51,360,4,"drawerWillShow"],[87,65,360,27],[87,67,361,7],[88,8,362,4],[88,14,362,9,"props"],[88,19,362,14],[88,20,362,15,"onDrawerStateChanged"],[88,40,362,35],[88,60,362,4],[88,66,362,9,"props"],[88,71,362,14],[88,72,362,15,"onDrawerStateChanged"],[88,92,362,35],[88,93,362,38,"newState"],[88,101,362,46],[88,103,362,48,"drawerWillShow"],[88,117,362,62],[88,118,362,63],[89,6,363,2],[89,7,363,3],[90,6,363,3],[90,12,365,10,"openingHandlerStateChange"],[90,37,365,35],[90,40,365,38],[90,57,367,64],[91,8,367,64],[91,12,366,4,"nativeEvent"],[91,23,366,15],[91,32,366,4,"nativeEvent"],[91,43,366,15],[92,8,368,4],[92,12,368,8,"nativeEvent"],[92,23,368,19],[92,24,368,20,"oldState"],[92,32,368,28],[92,37,368,33,"State"],[92,85,368,38],[92,86,368,39,"ACTIVE"],[92,92,368,45],[92,94,368,47],[93,10,369,6],[93,16,369,11,"handleRelease"],[93,29,369,24],[93,30,369,25],[94,12,369,27,"nativeEvent"],[94,23,369,38],[94,25,369,27,"nativeEvent"],[95,10,369,39],[95,11,369,40],[95,12,369,41],[96,8,370,4],[96,9,370,5],[96,15,370,11],[96,19,370,15,"nativeEvent"],[96,30,370,26],[96,31,370,27,"state"],[96,36,370,32],[96,41,370,37,"State"],[96,89,370,42],[96,90,370,43,"ACTIVE"],[96,96,370,49],[96,98,370,51],[97,10,371,6],[97,16,371,11,"emitStateChanged"],[97,32,371,27],[97,33,371,28,"DRAGGING"],[97,41,371,36],[97,43,371,38],[97,48,371,43],[97,49,371,44],[98,10,372,6],[98,16,372,11,"setState"],[98,24,372,19],[98,25,372,20],[99,12,372,22,"drawerState"],[99,23,372,33],[99,25,372,35,"DRAGGING"],[100,10,372,44],[100,11,372,45],[100,12,372,46],[101,10,373,6],[101,14,373,10],[101,20,373,15,"props"],[101,25,373,20],[101,26,373,21,"keyboardDismissMode"],[101,45,373,40],[101,50,373,45],[101,59,373,54],[101,61,373,56],[102,12,374,8,"Keyboard"],[102,33,374,16],[102,34,374,17,"dismiss"],[102,41,374,24],[102,43,374,26],[103,10,375,6],[104,10,376,6],[104,14,376,10],[104,20,376,15,"props"],[104,25,376,20],[104,26,376,21,"hideStatusBar"],[104,39,376,34],[104,41,376,36],[105,12,377,8,"StatusBar"],[105,34,377,17],[105,35,377,18,"setHidden"],[105,44,377,27],[105,45,377,28],[105,49,377,32],[105,51,377,34],[105,57,377,39,"props"],[105,62,377,44],[105,63,377,45,"statusBarAnimation"],[105,81,377,63],[105,85,377,67],[105,92,377,74],[105,93,377,75],[106,10,378,6],[107,8,379,4],[108,6,380,2],[108,7,380,3],[109,6,380,3],[109,12,382,10,"onTapHandlerStateChange"],[109,35,382,33],[109,38,382,36],[109,55,384,64],[110,8,384,64],[110,12,383,4,"nativeEvent"],[110,23,383,15],[110,32,383,4,"nativeEvent"],[110,43,383,15],[111,8,385,4],[111,12,386,6],[111,18,386,11,"drawerShown"],[111,29,386,22],[111,33,387,6,"nativeEvent"],[111,44,387,17],[111,45,387,18,"oldState"],[111,53,387,26],[111,58,387,31,"State"],[111,106,387,36],[111,107,387,37,"ACTIVE"],[111,113,387,43],[111,117,388,6],[111,123,388,11,"props"],[111,128,388,16],[111,129,388,17,"drawerLockMode"],[111,143,388,31],[111,148,388,36],[111,161,388,49],[111,163,389,6],[112,10,390,6],[112,16,390,11,"closeDrawer"],[112,27,390,22],[112,29,390,24],[113,8,391,4],[114,6,392,2],[114,7,392,3],[115,6,392,3],[115,12,394,10,"handleRelease"],[115,25,394,23],[115,28,394,26],[115,45,396,64],[116,8,396,64],[116,12,395,4,"nativeEvent"],[116,23,395,15],[116,32,395,4,"nativeEvent"],[116,43,395,15],[117,8,397,4],[117,26,397,56],[117,32,397,61,"props"],[117,37,397,66],[118,10,397,12,"drawerWidth"],[118,21,397,23],[118,36,397,12,"drawerWidth"],[118,47,397,23],[119,10,397,25,"drawerPosition"],[119,24,397,39],[119,39,397,25,"drawerPosition"],[119,53,397,39],[120,10,397,41,"drawerType"],[120,20,397,51],[120,35,397,41,"drawerType"],[120,45,397,51],[121,8,398,4],[121,12,398,12,"containerWidth"],[121,26,398,26],[121,29,398,31],[121,35,398,36,"state"],[121,40,398,41],[121,41,398,12,"containerWidth"],[121,55,398,26],[122,8,399,4],[122,12,399,24,"dragX"],[122,17,399,29],[122,20,399,56,"nativeEvent"],[122,31,399,67],[122,32,399,10,"translationX"],[122,44,399,22],[123,10,399,31,"velocityX"],[123,19,399,40],[123,22,399,56,"nativeEvent"],[123,33,399,67],[123,34,399,31,"velocityX"],[123,43,399,40],[124,10,399,45,"touchX"],[124,16,399,51],[124,19,399,56,"nativeEvent"],[124,30,399,67],[124,31,399,42,"x"],[124,32,399,43],[125,8,401,4],[125,12,401,8,"drawerPosition"],[125,26,401,22],[125,31,401,27],[125,37,401,33],[125,39,401,35],[126,10,404,6,"dragX"],[126,15,404,11],[126,18,404,14],[126,19,404,15,"dragX"],[126,24,404,20],[127,10,405,6,"touchX"],[127,16,405,12],[127,19,405,15,"containerWidth"],[127,33,405,29],[127,36,405,32,"touchX"],[127,42,405,38],[128,10,406,6,"velocityX"],[128,19,406,15],[128,22,406,18],[128,23,406,19,"velocityX"],[128,32,406,28],[129,8,407,4],[130,8,409,4],[130,12,409,10,"gestureStartX"],[130,25,409,23],[130,28,409,26,"touchX"],[130,34,409,32],[130,37,409,35,"dragX"],[130,42,409,40],[131,8,410,4],[131,12,410,8,"dragOffsetBasedOnStart"],[131,34,410,30],[131,37,410,33],[131,38,410,34],[132,8,412,4],[132,12,412,8,"drawerType"],[132,22,412,18],[132,27,412,23],[132,34,412,30],[132,36,412,32],[133,10,413,6,"dragOffsetBasedOnStart"],[133,32,413,28],[133,35,414,8,"gestureStartX"],[133,48,414,21],[133,51,414,24,"drawerWidth"],[133,62,414,36],[133,65,414,39,"gestureStartX"],[133,78,414,52],[133,81,414,55,"drawerWidth"],[133,92,414,67],[133,95,414,70],[133,96,414,71],[134,8,415,4],[135,8,417,4],[135,12,417,10,"startOffsetX"],[135,24,417,22],[135,27,418,6,"dragX"],[135,32,418,11],[135,35,418,14,"dragOffsetBasedOnStart"],[135,57,418,36],[135,61,418,40],[135,67,418,45,"drawerShown"],[135,78,418,56],[135,81,418,59,"drawerWidth"],[135,92,418,70],[135,95,418,74],[135,96,418,75],[135,97,418,76],[136,8,419,4],[136,12,419,10,"projOffsetX"],[136,23,419,21],[136,26,419,24,"startOffsetX"],[136,38,419,36],[136,41,419,39,"DRAG_TOSS"],[136,50,419,48],[136,53,419,51,"velocityX"],[136,62,419,60],[137,8,421,4],[137,12,421,10,"shouldOpen"],[137,22,421,20],[137,25,421,23,"projOffsetX"],[137,36,421,34],[137,39,421,37,"drawerWidth"],[137,50,421,48],[137,53,421,52],[137,54,421,53],[138,8,423,4],[138,12,423,8,"shouldOpen"],[138,22,423,18],[138,24,423,20],[139,10,424,6],[139,16,424,11,"animateDrawer"],[139,29,424,24],[139,30,424,25,"startOffsetX"],[139,42,424,37],[139,44,424,39,"drawerWidth"],[139,55,424,50],[139,57,424,53,"velocityX"],[139,66,424,62],[139,67,424,63],[140,8,425,4],[140,9,425,5],[140,15,425,11],[141,10,426,6],[141,16,426,11,"animateDrawer"],[141,29,426,24],[141,30,426,25,"startOffsetX"],[141,42,426,37],[141,44,426,39],[141,45,426,40],[141,47,426,42,"velocityX"],[141,56,426,51],[141,57,426,52],[142,8,427,4],[143,6,428,2],[143,7,428,3],[144,6,428,3],[144,12,430,10,"updateShowing"],[144,25,430,23],[144,28,430,26],[144,38,430,27,"showing"],[144,45,430,43],[144,47,430,48],[145,8,430,48],[146,8,431,4],[146,14,431,9,"drawerShown"],[146,25,431,20],[146,28,431,23,"showing"],[146,35,431,30],[147,8,432,4],[147,39,432,9,"accessibilityIsModalView"],[147,63,432,33],[147,64,432,34,"current"],[147,71,432,41],[147,92,432,4],[147,114,432,43,"setNativeProps"],[147,128,432,57],[147,129,432,58],[148,10,433,6,"accessibilityViewIsModal"],[148,34,433,30],[148,36,433,32,"showing"],[149,8,434,4],[149,9,434,5],[149,10,434,6],[150,8,435,4],[150,39,435,9,"pointerEventsView"],[150,56,435,26],[150,57,435,27,"current"],[150,64,435,34],[150,85,435,4],[150,107,435,36,"setNativeProps"],[150,121,435,50],[150,122,435,51],[151,10,436,6,"pointerEvents"],[151,23,436,19],[151,25,436,21,"showing"],[151,32,436,28],[151,35,436,31],[151,41,436,37],[151,44,436,40],[152,8,437,4],[152,9,437,5],[152,10,437,6],[153,8,438,4],[153,27,438,60],[153,33,438,65,"props"],[153,38,438,70],[154,10,438,12,"drawerPosition"],[154,24,438,26],[154,40,438,12,"drawerPosition"],[154,54,438,26],[155,10,438,28,"minSwipeDistance"],[155,26,438,44],[155,42,438,28,"minSwipeDistance"],[155,58,438,44],[156,10,438,46,"edgeWidth"],[156,19,438,55],[156,35,438,46,"edgeWidth"],[156,44,438,55],[157,8,439,4],[157,12,439,10,"fromLeft"],[157,20,439,18],[157,23,439,21,"drawerPosition"],[157,37,439,35],[157,42,439,40],[157,48,439,46],[158,8,443,4],[158,12,443,10,"gestureOrientation"],[158,30,443,28],[158,33,444,6],[158,34,444,7,"fromLeft"],[158,42,444,15],[158,45,444,18],[158,46,444,19],[158,49,444,22],[158,50,444,23],[158,51,444,24],[158,56,444,29],[158,62,444,34,"drawerShown"],[158,73,444,45],[158,76,444,48],[158,77,444,49],[158,78,444,50],[158,81,444,53],[158,82,444,54],[158,83,444,55],[159,8,448,4],[159,12,448,10,"hitSlop"],[159,19,448,17],[159,22,448,20,"fromLeft"],[159,30,448,28],[159,33,449,8],[160,10,449,10,"left"],[160,14,449,14],[160,16,449,16],[160,17,449,17],[161,10,449,19,"width"],[161,15,449,24],[161,17,449,26,"showing"],[161,24,449,33],[161,27,449,36,"undefined"],[161,36,449,45],[161,39,449,48,"edgeWidth"],[162,8,449,58],[162,9,449,59],[162,12,450,8],[163,10,450,10,"right"],[163,15,450,15],[163,17,450,17],[163,18,450,18],[164,10,450,20,"width"],[164,15,450,25],[164,17,450,27,"showing"],[164,24,450,34],[164,27,450,37,"undefined"],[164,36,450,46],[164,39,450,49,"edgeWidth"],[165,8,450,59],[165,9,450,60],[166,8,452,4],[166,39,452,9,"panGestureHandler"],[166,56,452,26],[166,57,452,27,"current"],[166,64,452,34],[166,85,452,4],[166,107,452,36,"setNativeProps"],[166,121,452,50],[166,122,452,51],[167,10,453,6,"hitSlop"],[167,17,453,13],[167,19,453,6,"hitSlop"],[167,26,453,13],[168,10,454,6,"activeOffsetX"],[168,23,454,19],[168,25,454,21,"gestureOrientation"],[168,43,454,39],[168,46,454,42,"minSwipeDistance"],[169,8,455,4],[169,9,455,5],[169,10,455,6],[170,6,456,2],[170,7,456,3],[171,6,456,3],[171,12,458,10,"animateDrawer"],[171,25,458,23],[171,28,458,26],[171,38,459,4,"fromValue"],[171,47,459,40],[171,49,460,4,"toValue"],[171,56,460,19],[171,58,461,4,"velocity"],[171,66,461,20],[171,68,462,4,"speed"],[171,73,462,18],[171,75,463,7],[172,8,464,4],[172,14,464,9,"state"],[172,19,464,14],[172,20,464,15,"dragX"],[172,25,464,20],[172,26,464,21,"setValue"],[172,34,464,29],[172,35,464,30],[172,36,464,31],[172,37,464,32],[173,8,465,4],[173,14,465,9,"state"],[173,19,465,14],[173,20,465,15,"touchX"],[173,26,465,21],[173,27,465,22,"setValue"],[173,35,465,30],[173,36,466,6],[173,42,466,11,"props"],[173,47,466,16],[173,48,466,17,"drawerPosition"],[173,62,466,31],[173,67,466,36],[173,73,466,42],[173,76,466,45],[173,77,466,46],[173,80,466,49],[173,86,466,54,"state"],[173,91,466,59],[173,92,466,60,"containerWidth"],[173,106,466,74],[173,107,467,5],[174,8,469,4],[174,12,469,8,"fromValue"],[174,21,469,17],[174,25,469,21],[174,29,469,25],[174,31,469,27],[175,10,470,6],[175,14,470,10,"nextFramePosition"],[175,31,470,27],[175,34,470,30,"fromValue"],[175,43,470,39],[176,10,471,6],[176,14,471,10],[176,20,471,15,"props"],[176,25,471,20],[176,26,471,21,"useNativeAnimations"],[176,45,471,40],[176,47,471,42],[177,12,476,8],[177,16,476,12,"fromValue"],[177,25,476,21],[177,28,476,24,"toValue"],[177,35,476,31],[177,39,476,35,"velocity"],[177,47,476,43],[177,50,476,46],[177,51,476,47],[177,53,476,49],[178,14,477,10,"nextFramePosition"],[178,31,477,27],[178,34,477,30,"Math"],[178,38,477,34],[178,39,477,35,"min"],[178,42,477,38],[178,43,477,39,"fromValue"],[178,52,477,48],[178,55,477,51,"velocity"],[178,63,477,59],[178,66,477,62],[178,70,477,66],[178,72,477,68,"toValue"],[178,79,477,75],[178,80,477,76],[179,12,478,8],[179,13,478,9],[179,19,478,15],[179,23,478,19,"fromValue"],[179,32,478,28],[179,35,478,31,"toValue"],[179,42,478,38],[179,46,478,42,"velocity"],[179,54,478,50],[179,57,478,53],[179,58,478,54],[179,60,478,56],[180,14,479,10,"nextFramePosition"],[180,31,479,27],[180,34,479,30,"Math"],[180,38,479,34],[180,39,479,35,"max"],[180,42,479,38],[180,43,479,39,"fromValue"],[180,52,479,48],[180,55,479,51,"velocity"],[180,63,479,59],[180,66,479,62],[180,70,479,66],[180,72,479,68,"toValue"],[180,79,479,75],[180,80,479,76],[181,12,480,8],[182,10,481,6],[183,10,482,6],[183,16,482,11,"state"],[183,21,482,16],[183,22,482,17,"drawerTranslation"],[183,39,482,34],[183,40,482,35,"setValue"],[183,48,482,43],[183,49,482,44,"nextFramePosition"],[183,66,482,61],[183,67,482,62],[184,8,483,4],[185,8,485,4],[185,12,485,10,"willShow"],[185,20,485,18],[185,23,485,21,"toValue"],[185,30,485,28],[185,35,485,33],[185,36,485,34],[186,8,486,4],[186,14,486,9,"updateShowing"],[186,27,486,22],[186,28,486,23,"willShow"],[186,36,486,31],[186,37,486,32],[187,8,487,4],[187,14,487,9,"emitStateChanged"],[187,30,487,25],[187,31,487,26,"SETTLING"],[187,39,487,34],[187,41,487,36,"willShow"],[187,49,487,44],[187,50,487,45],[188,8,488,4],[188,14,488,9,"setState"],[188,22,488,17],[188,23,488,18],[189,10,488,20,"drawerState"],[189,21,488,31],[189,23,488,33,"SETTLING"],[190,8,488,42],[190,9,488,43],[190,10,488,44],[191,8,489,4],[191,12,489,8],[191,18,489,13,"props"],[191,23,489,18],[191,24,489,19,"hideStatusBar"],[191,37,489,32],[191,39,489,34],[192,10,490,6,"StatusBar"],[192,32,490,15],[192,33,490,16,"setHidden"],[192,42,490,25],[192,43,490,26,"willShow"],[192,51,490,34],[192,53,490,36],[192,59,490,41,"props"],[192,64,490,46],[192,65,490,47,"statusBarAnimation"],[192,83,490,65],[192,87,490,69],[192,94,490,76],[192,95,490,77],[193,8,491,4],[194,8,492,4,"Animated"],[194,29,492,12],[194,30,492,13,"spring"],[194,36,492,19],[194,37,492,20],[194,43,492,25,"state"],[194,48,492,30],[194,49,492,31,"drawerTranslation"],[194,66,492,48],[194,68,492,50],[195,10,493,6,"velocity"],[195,18,493,14],[195,20,493,6,"velocity"],[195,28,493,14],[196,10,494,6,"bounciness"],[196,20,494,16],[196,22,494,18],[196,23,494,19],[197,10,495,6,"toValue"],[197,17,495,13],[197,19,495,6,"toValue"],[197,26,495,13],[198,10,496,6,"useNativeDriver"],[198,25,496,21],[198,27,496,23],[198,33,496,28,"props"],[198,38,496,33],[198,39,496,34,"useNativeAnimations"],[198,58,496,54],[199,10,497,6,"speed"],[199,15,497,11],[199,17,497,13,"speed"],[199,22,497,18],[199,33,497,13,"speed"],[199,38,497,18],[199,41,497,22,"undefined"],[200,8,498,4],[200,9,498,5],[200,10,498,6],[200,11,498,7,"start"],[200,16,498,12],[200,17,498,13],[200,34,498,31],[201,10,498,31],[201,14,498,16,"finished"],[201,22,498,24],[201,31,498,16,"finished"],[201,39,498,24],[202,10,499,6],[202,14,499,10,"finished"],[202,22,499,18],[202,24,499,20],[203,12,500,8],[203,18,500,13,"emitStateChanged"],[203,34,500,29],[203,35,500,30,"IDLE"],[203,39,500,34],[203,41,500,36,"willShow"],[203,49,500,44],[203,50,500,45],[204,12,501,8],[204,18,501,13,"setState"],[204,26,501,21],[204,27,501,22],[205,14,501,24,"drawerOpened"],[205,26,501,36],[205,28,501,38,"willShow"],[206,12,501,47],[206,13,501,48],[206,14,501,49],[207,12,502,8],[207,16,502,12],[207,22,502,17,"state"],[207,27,502,22],[207,28,502,23,"drawerState"],[207,39,502,34],[207,44,502,39,"DRAGGING"],[207,52,502,47],[207,54,502,49],[208,14,505,10],[208,20,505,15,"setState"],[208,28,505,23],[208,29,505,24],[209,16,505,26,"drawerState"],[209,27,505,37],[209,29,505,39,"IDLE"],[210,14,505,44],[210,15,505,45],[210,16,505,46],[211,12,506,8],[212,12,507,8],[212,16,507,12,"willShow"],[212,24,507,20],[212,26,507,22],[213,14,508,10],[213,20,508,15,"props"],[213,25,508,20],[213,26,508,21,"onDrawerOpen"],[213,38,508,33],[213,58,508,10],[213,64,508,15,"props"],[213,69,508,20],[213,70,508,21,"onDrawerOpen"],[213,82,508,33],[213,84,508,37],[214,12,509,8],[214,13,509,9],[214,19,509,15],[215,14,510,10],[215,20,510,15,"props"],[215,25,510,20],[215,26,510,21,"onDrawerClose"],[215,39,510,34],[215,59,510,10],[215,65,510,15,"props"],[215,70,510,20],[215,71,510,21,"onDrawerClose"],[215,84,510,34],[215,86,510,38],[216,12,511,8],[217,10,512,6],[218,8,513,4],[218,9,513,5],[218,10,513,6],[219,6,514,2],[219,7,514,3],[220,6,514,3],[220,12,516,2,"openDrawer"],[220,22,516,12],[220,25,516,15],[220,37,516,55],[221,8,516,55],[221,12,516,16,"options"],[221,19,516,45],[221,90,516,48],[221,91,516,49],[221,92,516,50],[222,8,517,4],[222,14,517,9,"animateDrawer"],[222,27,517,22],[222,28,519,6,"undefined"],[222,37,519,15],[222,39,520,6],[222,45,520,11,"props"],[222,50,520,16],[222,51,520,17,"drawerWidth"],[222,62,520,28],[222,64,521,6,"options"],[222,71,521,13],[222,72,521,14,"velocity"],[222,80,521,22],[222,83,521,25,"options"],[222,90,521,32],[222,91,521,33,"velocity"],[222,99,521,41],[222,102,521,44],[222,103,521,45],[222,105,522,6,"options"],[222,112,522,13],[222,113,522,14,"speed"],[222,118,522,19],[222,119,523,5],[223,8,527,4],[223,14,527,9,"forceUpdate"],[223,25,527,20],[223,27,527,22],[224,6,528,2],[224,7,528,3],[225,6,528,3],[225,12,530,2,"closeDrawer"],[225,23,530,13],[225,26,530,16],[225,38,530,56],[226,8,530,56],[226,12,530,17,"options"],[226,19,530,46],[226,90,530,49],[226,91,530,50],[226,92,530,51],[227,8,532,4],[227,14,532,9,"animateDrawer"],[227,27,532,22],[227,28,533,6,"undefined"],[227,37,533,15],[227,39,534,6],[227,40,534,7],[227,42,535,6,"options"],[227,49,535,13],[227,50,535,14,"velocity"],[227,58,535,22],[227,61,535,25,"options"],[227,68,535,32],[227,69,535,33,"velocity"],[227,77,535,41],[227,80,535,44],[227,81,535,45],[227,83,536,6,"options"],[227,90,536,13],[227,91,536,14,"speed"],[227,96,536,19],[227,97,537,5],[228,8,541,4],[228,14,541,9,"forceUpdate"],[228,25,541,20],[228,27,541,22],[229,6,542,2],[229,7,542,3],[230,6,542,3],[230,12,544,10,"renderOverlay"],[230,25,544,23],[230,28,544,26],[230,40,544,32],[231,8,546,4],[231,12,546,4,"invariant"],[231,30,546,13],[231,32,546,14],[231,38,546,19,"openValue"],[231,47,546,28],[231,49,546,30],[231,64,546,45],[231,65,546,46],[232,8,547,4],[232,12,547,8,"overlayOpacity"],[232,26,547,22],[233,8,549,4],[233,12,549,8],[233,18,549,13,"state"],[233,23,549,18],[233,24,549,19,"drawerState"],[233,35,549,30],[233,40,549,35,"IDLE"],[233,44,549,39],[233,46,549,41],[234,10,550,6,"overlayOpacity"],[234,24,550,20],[234,27,550,23],[234,33,550,28,"openValue"],[234,42,550,37],[235,8,551,4],[235,9,551,5],[235,15,551,11],[236,10,552,6,"overlayOpacity"],[236,24,552,20],[236,27,552,23],[236,33,552,28,"state"],[236,38,552,33],[236,39,552,34,"drawerOpened"],[236,51,552,46],[236,54,552,49],[236,55,552,50],[236,58,552,53],[236,59,552,54],[237,8,553,4],[238,8,555,4],[238,12,555,10,"dynamicOverlayStyles"],[238,32,555,30],[238,35,555,33],[239,10,556,6,"opacity"],[239,17,556,13],[239,19,556,15,"overlayOpacity"],[239,33,556,29],[240,10,557,6,"backgroundColor"],[240,25,557,21],[240,27,557,23],[240,33,557,28,"props"],[240,38,557,33],[240,39,557,34,"overlayColor"],[241,8,558,4],[241,9,558,5],[242,8,560,4],[242,15,561,6],[242,77,561,7],[242,159,561,24],[243,10,561,25],[243,30,561,45],[243,32,561,47],[243,38,561,52,"onTapHandlerStateChange"],[243,61,561,76],[244,10,561,76],[244,20,562,8],[244,82,562,9],[244,103,562,17],[244,104,562,18],[244,108,562,22],[245,12,563,10],[245,25,563,23],[245,27,563,25],[245,33,563,30,"drawerShown"],[245,44,563,41],[245,47,563,44],[245,53,563,50],[245,56,563,53],[245,62,563,60],[246,12,564,10],[246,15,564,13],[246,17,564,15],[246,23,564,20,"pointerEventsView"],[246,40,564,38],[247,12,565,10],[247,17,565,15],[247,19,565,17],[247,20,565,18,"styles"],[247,26,565,24],[247,27,565,25,"overlay"],[247,34,565,32],[247,36,565,34,"dynamicOverlayStyles"],[247,56,565,54],[248,10,565,56],[249,8,566,10],[249,10,567,26],[250,6,569,2],[250,7,569,3],[251,6,569,3],[251,12,571,10,"renderDrawer"],[251,24,571,22],[251,27,571,25],[251,39,571,31],[252,8,572,4],[252,27,579,8],[252,33,579,13,"props"],[252,38,579,18],[253,10,573,6,"drawerBackgroundColor"],[253,31,573,27],[253,47,573,6,"drawerBackgroundColor"],[253,68,573,27],[254,10,574,6,"drawerWidth"],[254,21,574,17],[254,37,574,6,"drawerWidth"],[254,48,574,17],[255,10,575,6,"drawerPosition"],[255,24,575,20],[255,40,575,6,"drawerPosition"],[255,54,575,20],[256,10,576,6,"drawerType"],[256,20,576,16],[256,36,576,6,"drawerType"],[256,46,576,16],[257,10,577,6,"drawerContainerStyle"],[257,30,577,26],[257,46,577,6,"drawerContainerStyle"],[257,66,577,26],[258,10,578,6,"contentContainerStyle"],[258,31,578,27],[258,47,578,6,"contentContainerStyle"],[258,68,578,27],[259,8,581,4],[259,12,581,10,"fromLeft"],[259,20,581,18],[259,23,581,21,"drawerPosition"],[259,37,581,35],[259,42,581,40],[259,48,581,46],[260,8,582,4],[260,12,582,10,"drawerSlide"],[260,23,582,21],[260,26,582,24,"drawerType"],[260,36,582,34],[260,41,582,39],[260,47,582,45],[261,8,583,4],[261,12,583,10,"containerSlide"],[261,26,583,24],[261,29,583,27,"drawerType"],[261,39,583,37],[261,44,583,42],[261,51,583,49],[262,8,589,4],[262,12,589,10,"reverseContentDirection"],[262,35,589,33],[262,38,589,36,"I18nManager"],[262,62,589,47],[262,63,589,48,"isRTL"],[262,68,589,53],[262,71,589,56,"fromLeft"],[262,79,589,64],[262,82,589,67],[262,83,589,68,"fromLeft"],[262,91,589,76],[263,8,591,4],[263,12,591,10,"dynamicDrawerStyles"],[263,31,591,29],[263,34,591,32],[264,10,592,6,"backgroundColor"],[264,25,592,21],[264,27,592,23,"drawerBackgroundColor"],[264,48,592,44],[265,10,593,6,"width"],[265,15,593,11],[265,17,593,13,"drawerWidth"],[266,8,594,4],[266,9,594,5],[267,8,595,4],[267,12,595,10,"openValue"],[267,21,595,19],[267,24,595,22],[267,30,595,27,"openValue"],[267,39,595,36],[268,8,596,4],[268,12,596,4,"invariant"],[268,30,596,13],[268,32,596,14,"openValue"],[268,41,596,23],[268,43,596,25],[268,58,596,40],[268,59,596,41],[269,8,598,4],[269,12,598,8,"containerStyles"],[269,27,598,23],[270,8,599,4],[270,12,599,8,"containerSlide"],[270,26,599,22],[270,28,599,24],[271,10,600,6],[271,14,600,12,"containerTranslateX"],[271,33,600,31],[271,36,600,34,"openValue"],[271,45,600,43],[271,46,600,44,"interpolate"],[271,57,600,55],[271,58,600,56],[272,12,601,8,"inputRange"],[272,22,601,18],[272,24,601,20],[272,25,601,21],[272,26,601,22],[272,28,601,24],[272,29,601,25],[272,30,601,26],[273,12,602,8,"outputRange"],[273,23,602,19],[273,25,602,21,"fromLeft"],[273,33,602,29],[273,36,602,32],[273,37,602,33],[273,38,602,34],[273,40,602,36,"drawerWidth"],[273,51,602,47],[273,52,602,49],[273,55,602,52],[273,56,602,53],[273,57,602,54],[273,59,602,56],[273,60,602,57,"drawerWidth"],[273,71,602,69],[273,72,602,70],[274,12,603,8,"extrapolate"],[274,23,603,19],[274,25,603,21],[275,10,604,6],[275,11,604,7],[275,12,604,8],[276,10,605,6,"containerStyles"],[276,25,605,21],[276,28,605,24],[277,12,606,8,"transform"],[277,21,606,17],[277,23,606,19],[277,24,606,20],[278,14,606,22,"translateX"],[278,24,606,32],[278,26,606,34,"containerTranslateX"],[279,12,606,54],[279,13,606,55],[280,10,607,6],[280,11,607,7],[281,8,608,4],[282,8,610,4],[282,12,610,8,"drawerTranslateX"],[282,28,610,56],[282,31,610,59],[282,32,610,60],[283,8,611,4],[283,12,611,8,"drawerSlide"],[283,23,611,19],[283,25,611,21],[284,10,612,6],[284,14,612,12,"closedDrawerOffset"],[284,32,612,30],[284,35,612,33,"fromLeft"],[284,43,612,41],[284,46,612,44],[284,47,612,45,"drawerWidth"],[284,58,612,57],[284,61,612,60,"drawerWidth"],[284,72,612,72],[285,10,613,6],[285,14,613,10],[285,20,613,15,"state"],[285,25,613,20],[285,26,613,21,"drawerState"],[285,37,613,32],[285,42,613,37,"IDLE"],[285,46,613,41],[285,48,613,43],[286,12,614,8,"drawerTranslateX"],[286,28,614,24],[286,31,614,27,"openValue"],[286,40,614,36],[286,41,614,37,"interpolate"],[286,52,614,48],[286,53,614,49],[287,14,615,10,"inputRange"],[287,24,615,20],[287,26,615,22],[287,27,615,23],[287,28,615,24],[287,30,615,26],[287,31,615,27],[287,32,615,28],[288,14,616,10,"outputRange"],[288,25,616,21],[288,27,616,23],[288,28,616,24,"closedDrawerOffset"],[288,46,616,42],[288,48,616,44],[288,49,616,45],[288,50,616,46],[289,14,617,10,"extrapolate"],[289,25,617,21],[289,27,617,23],[290,12,618,8],[290,13,618,9],[290,14,618,10],[291,10,619,6],[291,11,619,7],[291,17,619,13],[292,12,620,8,"drawerTranslateX"],[292,28,620,24],[292,31,620,27],[292,37,620,32,"state"],[292,42,620,37],[292,43,620,38,"drawerOpened"],[292,55,620,50],[292,58,620,53],[292,59,620,54],[292,62,620,57,"closedDrawerOffset"],[292,80,620,75],[293,10,621,6],[294,8,622,4],[295,8,623,4],[295,12,623,10,"drawerStyles"],[295,24,626,5],[295,27,626,8],[296,10,627,6,"transform"],[296,19,627,15],[296,21,627,17],[296,22,627,18],[297,12,627,20,"translateX"],[297,22,627,30],[297,24,627,32,"drawerTranslateX"],[298,10,627,49],[298,11,627,50],[298,12,627,51],[299,10,628,6,"flexDirection"],[299,23,628,19],[299,25,628,21,"reverseContentDirection"],[299,48,628,44],[299,51,628,47],[299,64,628,60],[299,67,628,63],[300,8,629,4],[300,9,629,5],[301,8,631,4],[301,15,632,6],[301,78,632,7],[301,99,632,15],[301,100,632,16],[301,104,632,20],[302,10,632,21],[302,15,632,26],[302,17,632,28,"styles"],[302,23,632,34],[302,24,632,35,"main"],[302,28,632,40],[303,10,632,41],[303,18,632,49],[303,20,632,51],[303,26,632,56,"handleContainerLayout"],[303,47,632,78],[304,10,632,78],[304,21,633,8],[304,84,633,9],[304,105,633,17],[304,106,633,18],[304,110,633,22],[305,12,634,10],[305,17,634,15],[305,19,634,17],[305,20,635,12,"drawerType"],[305,30,635,22],[305,35,635,27],[305,42,635,34],[305,45,636,16,"styles"],[305,51,636,22],[305,52,636,23,"containerOnBack"],[305,67,636,38],[305,70,637,16,"styles"],[305,76,637,22],[305,77,637,23,"containerInFront"],[305,93,637,39],[305,95,638,12,"containerStyles"],[305,110,638,27],[305,112,639,12,"contentContainerStyle"],[305,133,639,33],[305,134,640,12],[306,12,641,10],[306,37,641,35],[306,39,642,12],[306,45,642,17,"drawerShown"],[306,56,642,28],[306,59,642,31],[306,80,642,52],[306,83,642,55],[306,88,643,11],[307,12,643,11],[307,23,644,11],[307,30,644,18],[307,36,644,23,"props"],[307,41,644,28],[307,42,644,29,"children"],[307,50,644,37],[307,55,644,42],[307,65,644,52],[307,68,645,14],[307,74,645,19,"props"],[307,79,645,24],[307,80,645,25,"children"],[307,88,645,33],[307,89,645,34],[307,95,645,39,"openValue"],[307,104,645,48],[307,105,645,49],[307,108,646,14],[307,114,646,19,"props"],[307,119,646,24],[307,120,646,25,"children"],[307,128,646,33],[307,130,647,11],[307,136,647,16,"renderOverlay"],[307,149,647,29],[307,151,647,31],[308,10,647,31],[308,12,648,24],[308,14,649,8],[308,76,649,9],[308,97,649,17],[308,98,649,18],[308,102,649,22],[309,12,650,10],[309,25,650,23],[309,27,650,24],[309,37,650,34],[310,12,651,10],[310,15,651,13],[310,17,651,15],[310,23,651,20,"accessibilityIsModalView"],[310,47,651,45],[311,12,652,10],[311,36,652,34],[311,38,652,36],[311,44,652,41,"drawerShown"],[311,55,652,53],[312,12,653,10],[312,17,653,15],[312,19,653,17],[312,20,653,18,"styles"],[312,26,653,24],[312,27,653,25,"drawerContainer"],[312,42,653,40],[312,44,653,42,"drawerStyles"],[312,56,653,54],[312,58,653,56,"drawerContainerStyle"],[312,78,653,76],[312,79,653,78],[313,12,653,78],[313,22,654,10],[313,84,654,11],[313,101,654,15],[314,14,654,16],[314,19,654,21],[314,21,654,23,"dynamicDrawerStyles"],[314,40,654,43],[315,14,654,43],[315,24,655,13],[315,30,655,18,"props"],[315,35,655,23],[315,36,655,24,"renderNavigationView"],[315,56,655,44],[315,57,655,45],[315,63,655,50,"openValue"],[315,72,655,59],[316,12,655,78],[317,10,656,17],[317,12,657,24],[318,8,657,24],[318,10,658,22],[319,6,660,2],[319,7,660,3],[320,6,660,3],[320,12,662,10,"setPanGestureRef"],[320,28,662,26],[320,31,662,29],[320,41,662,30,"ref"],[320,44,662,52],[320,46,662,57],[321,8,666,6],[321,14,666,11,"panGestureHandler"],[321,31,666,28],[321,32,667,6,"current"],[321,39,667,13],[321,42,667,16,"ref"],[321,45,667,19],[322,8,668,4],[322,14,668,9,"props"],[322,19,668,14],[322,20,668,15,"onGestureRef"],[322,32,668,27],[322,52,668,4],[322,58,668,9,"props"],[322,63,668,14],[322,64,668,15,"onGestureRef"],[322,76,668,27],[322,77,668,30,"ref"],[322,80,668,33],[322,81,668,34],[323,6,669,2],[323,7,669,3],[324,6,202,4],[324,10,202,10,"dragX"],[324,16,202,15],[324,19,202,18],[324,23,202,22,"Animated"],[324,44,202,30],[324,45,202,31,"Value"],[324,50,202,36],[324,51,202,37],[324,52,202,38],[324,53,202,39],[325,6,203,4],[325,10,203,10,"touchX"],[325,17,203,16],[325,20,203,19],[325,24,203,23,"Animated"],[325,45,203,31],[325,46,203,32,"Value"],[325,51,203,37],[325,52,203,38],[325,53,203,39],[325,54,203,40],[326,6,204,4],[326,10,204,10,"drawerTranslation"],[326,28,204,27],[326,31,204,30],[326,35,204,34,"Animated"],[326,56,204,42],[326,57,204,43,"Value"],[326,62,204,48],[326,63,204,49],[326,64,204,50],[326,65,204,51],[327,6,206,4],[327,12,206,9,"state"],[327,17,206,14],[327,20,206,17],[328,8,207,6,"dragX"],[328,13,207,11],[328,15,207,6,"dragX"],[328,21,207,11],[329,8,208,6,"touchX"],[329,14,208,12],[329,16,208,6,"touchX"],[329,23,208,12],[330,8,209,6,"drawerTranslation"],[330,25,209,23],[330,27,209,6,"drawerTranslation"],[330,45,209,23],[331,8,210,6,"containerWidth"],[331,22,210,20],[331,24,210,22],[331,25,210,23],[332,8,211,6,"drawerState"],[332,19,211,17],[332,21,211,19,"IDLE"],[332,25,211,23],[333,8,212,6,"drawerOpened"],[333,20,212,18],[333,22,212,20],[334,6,213,4],[334,7,213,5],[335,6,215,4],[335,12,215,9,"updateAnimatedEvent"],[335,31,215,28],[335,32,215,29,"props"],[335,38,215,34],[335,40,215,36],[335,46,215,41,"state"],[335,51,215,46],[335,52,215,47],[336,6,215,48],[337,4,216,2],[338,4,216,3],[339,6,216,3],[340,6,216,3],[340,13,218,2],[340,44,218,24,"props"],[340,49,218,48],[340,51,218,50,"state"],[340,56,218,74],[340,58,218,76],[341,8,219,4],[341,12,220,6],[341,16,220,10],[341,17,220,11,"props"],[341,22,220,16],[341,23,220,17,"drawerPosition"],[341,37,220,31],[341,42,220,36,"props"],[341,47,220,41],[341,48,220,42,"drawerPosition"],[341,62,220,56],[341,66,221,6],[341,70,221,10],[341,71,221,11,"props"],[341,76,221,16],[341,77,221,17,"drawerWidth"],[341,88,221,28],[341,93,221,33,"props"],[341,98,221,38],[341,99,221,39,"drawerWidth"],[341,110,221,50],[341,114,222,6],[341,118,222,10],[341,119,222,11,"props"],[341,124,222,16],[341,125,222,17,"drawerType"],[341,135,222,27],[341,140,222,32,"props"],[341,145,222,37],[341,146,222,38,"drawerType"],[341,156,222,48],[341,160,223,6],[341,164,223,10],[341,165,223,11,"state"],[341,170,223,16],[341,171,223,17,"containerWidth"],[341,185,223,31],[341,190,223,36,"state"],[341,195,223,41],[341,196,223,42,"containerWidth"],[341,210,223,56],[341,212,224,6],[342,10,225,6],[342,14,225,10],[342,15,225,11,"updateAnimatedEvent"],[342,34,225,30],[342,35,225,31,"props"],[342,40,225,36],[342,42,225,38,"state"],[342,47,225,43],[342,48,225,44],[343,8,226,4],[344,8,228,4],[344,15,228,11],[344,19,228,15],[345,6,229,2],[346,4,229,3],[347,6,229,3],[348,6,229,3],[348,13,671,2],[348,31,671,11],[349,8,672,4],[349,27,673,6],[349,31,673,10],[349,32,673,11,"props"],[349,37,673,16],[350,10,672,12,"drawerPosition"],[350,24,672,26],[350,40,672,12,"drawerPosition"],[350,54,672,26],[351,10,672,28,"drawerLockMode"],[351,24,672,42],[351,40,672,28,"drawerLockMode"],[351,54,672,42],[352,10,672,44,"edgeWidth"],[352,19,672,53],[352,35,672,44,"edgeWidth"],[352,44,672,53],[353,10,672,55,"minSwipeDistance"],[353,26,672,71],[353,42,672,55,"minSwipeDistance"],[353,58,672,71],[354,8,675,4],[354,12,675,10,"fromLeft"],[354,20,675,18],[354,23,675,21,"drawerPosition"],[354,37,675,35],[354,42,675,40],[354,48,675,46],[355,8,680,4],[355,12,680,10,"gestureOrientation"],[355,30,680,28],[355,33,681,6],[355,34,681,7,"fromLeft"],[355,42,681,15],[355,45,681,18],[355,46,681,19],[355,49,681,22],[355,50,681,23],[355,51,681,24],[355,56,681,29],[355,60,681,33],[355,61,681,34,"drawerShown"],[355,72,681,45],[355,75,681,48],[355,76,681,49],[355,77,681,50],[355,80,681,53],[355,81,681,54],[355,82,681,55],[356,8,686,4],[356,12,686,10,"hitSlop"],[356,19,686,17],[356,22,686,20,"fromLeft"],[356,30,686,28],[356,33,687,8],[357,10,687,10,"left"],[357,14,687,14],[357,16,687,16],[357,17,687,17],[358,10,687,19,"width"],[358,15,687,24],[358,17,687,26],[358,21,687,30],[358,22,687,31,"drawerShown"],[358,33,687,42],[358,36,687,45,"undefined"],[358,45,687,54],[358,48,687,57,"edgeWidth"],[359,8,687,67],[359,9,687,68],[359,12,688,8],[360,10,688,10,"right"],[360,15,688,15],[360,17,688,17],[360,18,688,18],[361,10,688,20,"width"],[361,15,688,25],[361,17,688,27],[361,21,688,31],[361,22,688,32,"drawerShown"],[361,33,688,43],[361,36,688,46,"undefined"],[361,45,688,55],[361,48,688,58,"edgeWidth"],[362,8,688,68],[362,9,688,69],[363,8,690,4],[363,15,691,6],[363,77,691,7],[363,159,691,24],[364,10,693,8],[364,20,693,18],[364,22,693,20],[364,26,693,24],[364,27,693,25,"props"],[364,32,693,30],[364,33,693,31,"userSelect"],[364,43,693,42],[365,10,694,8],[365,13,694,11],[365,15,694,13],[365,19,694,17],[365,20,694,18,"setPanGestureRef"],[365,36,694,35],[366,10,695,8],[366,17,695,15],[366,19,695,17,"hitSlop"],[366,26,695,25],[367,10,696,8],[367,23,696,21],[367,25,696,23,"gestureOrientation"],[367,43,696,41],[367,46,696,44,"minSwipeDistance"],[367,62,696,62],[368,10,697,8],[368,21,697,19],[368,23,697,21],[368,24,697,22],[368,25,697,23],[368,27,697,25],[368,29,697,27],[368,31,697,29],[368,32,697,31],[369,10,698,8],[369,24,698,22],[369,26,698,24],[369,30,698,28],[369,31,698,29,"onGestureEvent"],[369,45,698,44],[370,10,699,8],[370,30,699,28],[370,32,699,30],[370,36,699,34],[370,37,699,35,"openingHandlerStateChange"],[370,62,699,61],[371,10,700,8],[371,40,700,38],[371,42,701,10],[371,46,701,14],[371,47,701,15,"props"],[371,52,701,20],[371,53,701,21,"enableTrackpadTwoFingerGesture"],[371,83,702,9],[372,10,703,8],[372,17,703,15],[372,19,704,10,"drawerLockMode"],[372,33,704,24],[372,38,704,29],[372,53,704,44],[372,57,704,48,"drawerLockMode"],[372,71,704,62],[372,76,704,67],[372,89,705,9],[373,10,705,9],[373,20,706,9],[373,24,706,13],[373,25,706,14,"renderDrawer"],[373,37,706,26],[374,8,706,28],[374,10,707,26],[375,6,709,2],[376,4,709,3],[377,4,709,3],[378,2,709,3],[378,4,183,42,"Component"],[378,19,183,51],[379,2,183,51],[380,2,183,21,"DrawerLayout"],[380,14,183,33],[380,15,187,9,"defaultProps"],[380,27,187,21],[380,30,187,24],[381,4,188,4,"drawerWidth"],[381,15,188,15],[381,17,188,17],[381,20,188,20],[382,4,189,4,"drawerPosition"],[382,18,189,18],[382,20,189,20],[382,26,189,26],[383,4,190,4,"useNativeAnimations"],[383,23,190,23],[383,25,190,25],[383,29,190,29],[384,4,191,4,"drawerType"],[384,14,191,14],[384,16,191,16],[384,23,191,23],[385,4,192,4,"edgeWidth"],[385,13,192,13],[385,15,192,15],[385,17,192,17],[386,4,193,4,"minSwipeDistance"],[386,20,193,20],[386,22,193,22],[386,23,193,23],[387,4,194,4,"overlayColor"],[387,16,194,16],[387,18,194,18],[387,38,194,38],[388,4,195,4,"drawerLockMode"],[388,18,195,18],[388,20,195,20],[388,30,195,30],[389,4,196,4,"enableTrackpadTwoFingerGesture"],[389,34,196,34],[389,36,196,36],[390,2,197,2],[390,3,197,3],[391,2,183,21,"DrawerLayout"],[391,14,183,33],[391,15,240,9,"positions"],[391,24,240,18],[391,27,240,21],[392,4,241,4,"Left"],[392,8,241,8],[392,10,241,10],[392,16,241,16],[393,4,242,4,"Right"],[393,9,242,9],[393,11,242,11],[394,2,243,2],[394,3,243,3],[395,2,712,0],[395,6,712,6,"styles"],[395,12,712,12],[395,15,712,15,"StyleSheet"],[395,38,712,25],[395,39,712,26,"create"],[395,45,712,32],[395,46,712,33],[396,4,713,2,"drawerContainer"],[396,19,713,17],[396,39,714,7,"StyleSheet"],[396,62,714,17],[396,63,714,18,"absoluteFillObject"],[396,81,714,36],[397,6,715,4,"zIndex"],[397,12,715,10],[397,14,715,12],[397,18,715,16],[398,6,716,4,"flexDirection"],[398,19,716,17],[398,21,716,19],[399,4,716,24],[399,6,717,3],[400,4,718,2,"containerInFront"],[400,20,718,18],[400,40,719,7,"StyleSheet"],[400,63,719,17],[400,64,719,18,"absoluteFillObject"],[400,82,719,36],[401,6,720,4,"zIndex"],[401,12,720,10],[401,14,720,12],[402,4,720,16],[402,6,721,3],[403,4,722,2,"containerOnBack"],[403,19,722,17],[403,39,723,7,"StyleSheet"],[403,62,723,17],[403,63,723,18,"absoluteFillObject"],[403,81,723,36],[403,82,724,3],[404,4,725,2,"main"],[404,8,725,6],[404,10,725,8],[405,6,726,4,"flex"],[405,10,726,8],[405,12,726,10],[405,13,726,11],[406,6,727,4,"zIndex"],[406,12,727,10],[406,14,727,12],[406,15,727,13],[407,6,728,4,"overflow"],[407,14,728,12],[407,16,728,14],[408,4,729,2],[408,5,729,3],[409,4,730,2,"overlay"],[409,11,730,9],[409,31,731,7,"StyleSheet"],[409,54,731,17],[409,55,731,18,"absoluteFillObject"],[409,73,731,36],[410,6,732,4,"zIndex"],[410,12,732,10],[410,14,732,12],[411,4,732,16],[412,2,734,0],[412,3,734,1],[412,4,734,2],[413,0,734,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsL;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlBsC;CDC"}},"type":"js/module"}]}