{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":259,"column":0,"index":7664}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":259,"column":0,"index":7664}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.computeWindowedRenderLimits = computeWindowedRenderLimits;\n  exports.elementsThatOverlapOffsets = elementsThatOverlapOffsets;\n  exports.keyExtractor = keyExtractor;\n  exports.newRangeCount = newRangeCount;\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  function elementsThatOverlapOffsets(offsets, props, getFrameMetrics) {\n    var zoomScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var itemCount = props.getItemCount(props.data);\n    var result = [];\n    for (var offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {\n      var currentOffset = offsets[offsetIndex];\n      var left = 0;\n      var right = itemCount - 1;\n      while (left <= right) {\n        var mid = left + (right - left >>> 1);\n        var frame = getFrameMetrics(mid, props);\n        var scaledOffsetStart = frame.offset * zoomScale;\n        var scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;\n        if (mid === 0 && currentOffset < scaledOffsetStart || mid !== 0 && currentOffset <= scaledOffsetStart) {\n          right = mid - 1;\n        } else if (currentOffset > scaledOffsetEnd) {\n          left = mid + 1;\n        } else {\n          result[offsetIndex] = mid;\n          break;\n        }\n      }\n    }\n    return result;\n  }\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n  function computeWindowedRenderLimits(props, maxToRenderPerBatch, windowSize, prev, getFrameMetricsApprox, scrollMetrics) {\n    var itemCount = props.getItemCount(props.data);\n    if (itemCount === 0) {\n      return {\n        first: 0,\n        last: -1\n      };\n    }\n    var offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength,\n      _scrollMetrics$zoomSc = scrollMetrics.zoomScale,\n      zoomScale = _scrollMetrics$zoomSc === void 0 ? 1 : _scrollMetrics$zoomSc;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = getFrameMetricsApprox(itemCount - 1, props).offset * zoomScale;\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props, getFrameMetricsApprox, zoomScale),\n      _elementsThatOverlapO2 = (0, _slicedToArray2.default)(_elementsThatOverlapO, 4),\n      overscanFirst = _elementsThatOverlapO2[0],\n      first = _elementsThatOverlapO2[1],\n      last = _elementsThatOverlapO2[2],\n      overscanLast = _elementsThatOverlapO2[3];\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first: first,\n      last: last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = first <= prev.first || first > prev.last;\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastWillAddMore = last >= prev.last || last < prev.first;\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n        first--;\n      }\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n        last++;\n      }\n    }\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first: first,\n        last: last,\n        itemCount: itemCount,\n        overscanFirst: overscanFirst,\n        overscanLast: overscanLast,\n        visible: visible\n      }));\n    }\n    return {\n      first: first,\n      last: last\n    };\n  }\n  function keyExtractor(item, index) {\n    if (typeof item === 'object' && (item == null ? void 0 : item.key) != null) {\n      return item.key;\n    }\n    if (typeof item === 'object' && (item == null ? void 0 : item.id) != null) {\n      return item.id;\n    }\n    return String(index);\n  }\n});","lineCount":131,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[5,4,11,13],[6,2,11,13],[7,2,11,13],[8,2,11,13],[9,2,11,13],[10,2,11,13],[11,2,11,13],[12,2,20,7],[12,11,20,16,"elementsThatOverlapOffsets"],[12,37,20,42],[12,38,21,2,"offsets"],[12,45,21,24],[12,47,22,2,"props"],[12,52,22,25],[12,54,23,2,"getFrameMetrics"],[12,69,30,3],[12,71,32,17],[13,4,32,17],[13,8,31,2,"zoomScale"],[13,17,31,19],[13,88,31,22],[13,89,31,23],[14,4,33,2],[14,8,33,8,"itemCount"],[14,17,33,17],[14,20,33,20,"props"],[14,25,33,25],[14,26,33,26,"getItemCount"],[14,38,33,38],[14,39,33,39,"props"],[14,44,33,44],[14,45,33,45,"data"],[14,49,33,49],[14,50,33,50],[15,4,34,2],[15,8,34,8,"result"],[15,14,34,14],[15,17,34,17],[15,19,34,19],[16,4,35,2],[16,9,35,7],[16,13,35,11,"offsetIndex"],[16,24,35,22],[16,27,35,25],[16,28,35,26],[16,30,35,28,"offsetIndex"],[16,41,35,39],[16,44,35,42,"offsets"],[16,51,35,49],[16,52,35,50,"length"],[16,58,35,56],[16,60,35,58,"offsetIndex"],[16,71,35,69],[16,73,35,71],[16,75,35,73],[17,6,36,4],[17,10,36,10,"currentOffset"],[17,23,36,23],[17,26,36,26,"offsets"],[17,33,36,33],[17,34,36,34,"offsetIndex"],[17,45,36,45],[17,46,36,46],[18,6,37,4],[18,10,37,8,"left"],[18,14,37,12],[18,17,37,15],[18,18,37,16],[19,6,38,4],[19,10,38,8,"right"],[19,15,38,13],[19,18,38,16,"itemCount"],[19,27,38,25],[19,30,38,28],[19,31,38,29],[20,6,40,4],[20,13,40,11,"left"],[20,17,40,15],[20,21,40,19,"right"],[20,26,40,24],[20,28,40,26],[21,8,42,6],[21,12,42,12,"mid"],[21,15,42,15],[21,18,42,18,"left"],[21,22,42,22],[21,26,42,27,"right"],[21,31,42,32],[21,34,42,35,"left"],[21,38,42,39],[21,43,42,45],[21,44,42,46],[21,45,42,47],[22,8,43,6],[22,12,43,12,"frame"],[22,17,43,17],[22,20,43,20,"getFrameMetrics"],[22,35,43,35],[22,36,43,36,"mid"],[22,39,43,39],[22,41,43,41,"props"],[22,46,43,46],[22,47,43,47],[23,8,44,6],[23,12,44,12,"scaledOffsetStart"],[23,29,44,29],[23,32,44,32,"frame"],[23,37,44,37],[23,38,44,38,"offset"],[23,44,44,44],[23,47,44,47,"zoomScale"],[23,56,44,56],[24,8,45,6],[24,12,45,12,"scaledOffsetEnd"],[24,27,45,27],[24,30,45,30],[24,31,45,31,"frame"],[24,36,45,36],[24,37,45,37,"offset"],[24,43,45,43],[24,46,45,46,"frame"],[24,51,45,51],[24,52,45,52,"length"],[24,58,45,58],[24,62,45,62,"zoomScale"],[24,71,45,71],[25,8,49,6],[25,12,50,9,"mid"],[25,15,50,12],[25,20,50,17],[25,21,50,18],[25,25,50,22,"currentOffset"],[25,38,50,35],[25,41,50,38,"scaledOffsetStart"],[25,58,50,55],[25,62,51,9,"mid"],[25,65,51,12],[25,70,51,17],[25,71,51,18],[25,75,51,22,"currentOffset"],[25,88,51,35],[25,92,51,39,"scaledOffsetStart"],[25,109,51,57],[25,111,52,8],[26,10,53,8,"right"],[26,15,53,13],[26,18,53,16,"mid"],[26,21,53,19],[26,24,53,22],[26,25,53,23],[27,8,54,6],[27,9,54,7],[27,15,54,13],[27,19,54,17,"currentOffset"],[27,32,54,30],[27,35,54,33,"scaledOffsetEnd"],[27,50,54,48],[27,52,54,50],[28,10,55,8,"left"],[28,14,55,12],[28,17,55,15,"mid"],[28,20,55,18],[28,23,55,21],[28,24,55,22],[29,8,56,6],[29,9,56,7],[29,15,56,13],[30,10,57,8,"result"],[30,16,57,14],[30,17,57,15,"offsetIndex"],[30,28,57,26],[30,29,57,27],[30,32,57,30,"mid"],[30,35,57,33],[31,10,58,8],[32,8,59,6],[33,6,60,4],[34,4,61,2],[35,4,63,2],[35,11,63,9,"result"],[35,17,63,15],[36,2,64,0],[37,2,72,7],[37,11,72,16,"newRangeCount"],[37,24,72,29],[37,25,73,2,"prev"],[37,29,77,3],[37,31,78,2,"next"],[37,35,82,3],[37,37,83,10],[38,4,84,2],[38,11,85,4,"next"],[38,15,85,8],[38,16,85,9,"last"],[38,20,85,13],[38,23,86,4,"next"],[38,27,86,8],[38,28,86,9,"first"],[38,33,86,14],[38,36,87,4],[38,37,87,5],[38,40,88,4,"Math"],[38,44,88,8],[38,45,88,9,"max"],[38,48,88,12],[38,49,89,6],[38,50,89,7],[38,52,90,6],[38,53,90,7],[38,56,90,10,"Math"],[38,60,90,14],[38,61,90,15,"min"],[38,64,90,18],[38,65,90,19,"next"],[38,69,90,23],[38,70,90,24,"last"],[38,74,90,28],[38,76,90,30,"prev"],[38,80,90,34],[38,81,90,35,"last"],[38,85,90,39],[38,86,90,40],[38,89,90,43,"Math"],[38,93,90,47],[38,94,90,48,"max"],[38,97,90,51],[38,98,90,52,"next"],[38,102,90,56],[38,103,90,57,"first"],[38,108,90,62],[38,110,90,64,"prev"],[38,114,90,68],[38,115,90,69,"first"],[38,120,90,74],[38,121,90,75],[38,122,91,5],[39,2,93,0],[40,2,101,7],[40,11,101,16,"computeWindowedRenderLimits"],[40,38,101,43],[40,39,102,2,"props"],[40,44,102,25],[40,46,103,2,"maxToRenderPerBatch"],[40,65,103,29],[40,67,104,2,"windowSize"],[40,77,104,20],[40,79,105,2,"prev"],[40,83,108,3],[40,85,109,2,"getFrameMetricsApprox"],[40,106,116,3],[40,108,117,2,"scrollMetrics"],[40,121,124,3],[40,123,128,2],[41,4,129,2],[41,8,129,8,"itemCount"],[41,17,129,17],[41,20,129,20,"props"],[41,25,129,25],[41,26,129,26,"getItemCount"],[41,38,129,38],[41,39,129,39,"props"],[41,44,129,44],[41,45,129,45,"data"],[41,49,129,49],[41,50,129,50],[42,4,130,2],[42,8,130,6,"itemCount"],[42,17,130,15],[42,22,130,20],[42,23,130,21],[42,25,130,23],[43,6,131,4],[43,13,131,11],[44,8,131,12,"first"],[44,13,131,17],[44,15,131,19],[44,16,131,20],[45,8,131,22,"last"],[45,12,131,26],[45,14,131,28],[45,15,131,29],[46,6,131,30],[46,7,131,31],[47,4,132,2],[48,4,133,2],[48,8,133,9,"offset"],[48,14,133,15],[48,17,133,59,"scrollMetrics"],[48,30,133,72],[48,31,133,9,"offset"],[48,37,133,15],[49,6,133,17,"velocity"],[49,14,133,25],[49,17,133,59,"scrollMetrics"],[49,30,133,72],[49,31,133,17,"velocity"],[49,39,133,25],[50,6,133,27,"visibleLength"],[50,19,133,40],[50,22,133,59,"scrollMetrics"],[50,35,133,72],[50,36,133,27,"visibleLength"],[50,49,133,40],[51,6,133,40],[51,30,133,59,"scrollMetrics"],[51,43,133,72],[51,44,133,42,"zoomScale"],[51,53,133,51],[52,6,133,42,"zoomScale"],[52,15,133,51],[52,53,133,54],[52,54,133,55],[53,4,138,2],[53,8,138,8,"visibleBegin"],[53,20,138,20],[53,23,138,23,"Math"],[53,27,138,27],[53,28,138,28,"max"],[53,31,138,31],[53,32,138,32],[53,33,138,33],[53,35,138,35,"offset"],[53,41,138,41],[53,42,138,42],[54,4,139,2],[54,8,139,8,"visibleEnd"],[54,18,139,18],[54,21,139,21,"visibleBegin"],[54,33,139,33],[54,36,139,36,"visibleLength"],[54,49,139,49],[55,4,140,2],[55,8,140,8,"overscanLength"],[55,22,140,22],[55,25,140,25],[55,26,140,26,"windowSize"],[55,36,140,36],[55,39,140,39],[55,40,140,40],[55,44,140,44,"visibleLength"],[55,57,140,57],[56,4,143,2],[56,8,143,8,"leadFactor"],[56,18,143,18],[56,21,143,21],[56,24,143,24],[57,4,145,2],[57,8,145,8,"fillPreference"],[57,22,145,22],[57,25,146,4,"velocity"],[57,33,146,12],[57,36,146,15],[57,37,146,16],[57,40,146,19],[57,47,146,26],[57,50,146,29,"velocity"],[57,58,146,37],[57,61,146,40],[57,62,146,41],[57,63,146,42],[57,66,146,45],[57,74,146,53],[57,77,146,56],[57,83,146,62],[58,4,148,2],[58,8,148,8,"overscanBegin"],[58,21,148,21],[58,24,148,24,"Math"],[58,28,148,28],[58,29,148,29,"max"],[58,32,148,32],[58,33,149,4],[58,34,149,5],[58,36,150,4,"visibleBegin"],[58,48,150,16],[58,51,150,19],[58,52,150,20],[58,53,150,21],[58,56,150,24,"leadFactor"],[58,66,150,34],[58,70,150,38,"overscanLength"],[58,84,150,52],[58,85,151,3],[59,4,152,2],[59,8,152,8,"overscanEnd"],[59,19,152,19],[59,22,152,22,"Math"],[59,26,152,26],[59,27,152,27,"max"],[59,30,152,30],[59,31,152,31],[59,32,152,32],[59,34,152,34,"visibleEnd"],[59,44,152,44],[59,47,152,47,"leadFactor"],[59,57,152,57],[59,60,152,60,"overscanLength"],[59,74,152,74],[59,75,152,75],[60,4,154,2],[60,8,154,8,"lastItemOffset"],[60,22,154,22],[60,25,155,4,"getFrameMetricsApprox"],[60,46,155,25],[60,47,155,26,"itemCount"],[60,56,155,35],[60,59,155,38],[60,60,155,39],[60,62,155,41,"props"],[60,67,155,46],[60,68,155,47],[60,69,155,48,"offset"],[60,75,155,54],[60,78,155,57,"zoomScale"],[60,87,155,66],[61,4,156,2],[61,8,156,6,"lastItemOffset"],[61,22,156,20],[61,25,156,23,"overscanBegin"],[61,38,156,36],[61,40,156,38],[62,6,158,4],[62,13,158,11],[63,8,159,6,"first"],[63,13,159,11],[63,15,159,13,"Math"],[63,19,159,17],[63,20,159,18,"max"],[63,23,159,21],[63,24,159,22],[63,25,159,23],[63,27,159,25,"itemCount"],[63,36,159,34],[63,39,159,37],[63,40,159,38],[63,43,159,41,"maxToRenderPerBatch"],[63,62,159,60],[63,63,159,61],[64,8,160,6,"last"],[64,12,160,10],[64,14,160,12,"itemCount"],[64,23,160,21],[64,26,160,24],[65,6,161,4],[65,7,161,5],[66,4,162,2],[67,4,165,2],[67,32,165,51,"elementsThatOverlapOffsets"],[67,58,165,77],[67,59,166,4],[67,60,166,5,"overscanBegin"],[67,73,166,18],[67,75,166,20,"visibleBegin"],[67,87,166,32],[67,89,166,34,"visibleEnd"],[67,99,166,44],[67,101,166,46,"overscanEnd"],[67,112,166,57],[67,113,166,58],[67,115,167,4,"props"],[67,120,167,9],[67,122,168,4,"getFrameMetricsApprox"],[67,143,168,25],[67,145,169,4,"zoomScale"],[67,154,169,13],[67,155,170,3],[68,6,170,3],[69,6,165,7,"overscanFirst"],[69,19,165,20],[70,6,165,22,"first"],[70,11,165,27],[71,6,165,29,"last"],[71,10,165,33],[72,6,165,35,"overscanLast"],[72,18,165,47],[73,4,171,2,"overscanFirst"],[73,17,171,15],[73,20,171,18,"overscanFirst"],[73,33,171,31],[73,37,171,35],[73,41,171,39],[73,44,171,42],[73,45,171,43],[73,48,171,46,"overscanFirst"],[73,61,171,59],[74,4,172,2,"first"],[74,9,172,7],[74,12,172,10,"first"],[74,17,172,15],[74,21,172,19],[74,25,172,23],[74,28,172,26,"Math"],[74,32,172,30],[74,33,172,31,"max"],[74,36,172,34],[74,37,172,35],[74,38,172,36],[74,40,172,38,"overscanFirst"],[74,53,172,51],[74,54,172,52],[74,57,172,55,"first"],[74,62,172,60],[75,4,173,2,"overscanLast"],[75,16,173,14],[75,19,173,17,"overscanLast"],[75,31,173,29],[75,35,173,33],[75,39,173,37],[75,42,173,40,"itemCount"],[75,51,173,49],[75,54,173,52],[75,55,173,53],[75,58,173,56,"overscanLast"],[75,70,173,68],[76,4,174,2,"last"],[76,8,174,6],[76,11,175,4,"last"],[76,15,175,8],[76,19,175,12],[76,23,175,16],[76,26,176,8,"Math"],[76,30,176,12],[76,31,176,13,"min"],[76,34,176,16],[76,35,176,17,"overscanLast"],[76,47,176,29],[76,49,176,31,"first"],[76,54,176,36],[76,57,176,39,"maxToRenderPerBatch"],[76,76,176,58],[76,79,176,61],[76,80,176,62],[76,81,176,63],[76,84,177,8,"last"],[76,88,177,12],[77,4,178,2],[77,8,178,8,"visible"],[77,15,178,15],[77,18,178,18],[78,6,178,19,"first"],[78,11,178,24],[78,13,178,19,"first"],[78,18,178,24],[79,6,178,26,"last"],[79,10,178,30],[79,12,178,26,"last"],[80,4,178,30],[80,5,178,31],[81,4,184,2],[81,8,184,6,"newCellCount"],[81,20,184,18],[81,23,184,21,"newRangeCount"],[81,36,184,34],[81,37,184,35,"prev"],[81,41,184,39],[81,43,184,41,"visible"],[81,50,184,48],[81,51,184,49],[82,4,186,2],[82,11,186,9],[82,15,186,13],[82,17,186,15],[83,6,187,4],[83,10,187,8,"first"],[83,15,187,13],[83,19,187,17,"overscanFirst"],[83,32,187,30],[83,36,187,34,"last"],[83,40,187,38],[83,44,187,42,"overscanLast"],[83,56,187,54],[83,58,187,56],[84,8,189,6],[85,6,190,4],[86,6,191,4],[86,10,191,10,"maxNewCells"],[86,21,191,21],[86,24,191,24,"newCellCount"],[86,36,191,36],[86,40,191,40,"maxToRenderPerBatch"],[86,59,191,59],[87,6,192,4],[87,10,192,10,"firstWillAddMore"],[87,26,192,26],[87,29,192,29,"first"],[87,34,192,34],[87,38,192,38,"prev"],[87,42,192,42],[87,43,192,43,"first"],[87,48,192,48],[87,52,192,52,"first"],[87,57,192,57],[87,60,192,60,"prev"],[87,64,192,64],[87,65,192,65,"last"],[87,69,192,69],[88,6,193,4],[88,10,193,10,"firstShouldIncrement"],[88,30,193,30],[88,33,194,6,"first"],[88,38,194,11],[88,41,194,14,"overscanFirst"],[88,54,194,27],[88,59,194,32],[88,60,194,33,"maxNewCells"],[88,71,194,44],[88,75,194,48],[88,76,194,49,"firstWillAddMore"],[88,92,194,65],[88,93,194,66],[89,6,195,4],[89,10,195,10,"lastWillAddMore"],[89,25,195,25],[89,28,195,28,"last"],[89,32,195,32],[89,36,195,36,"prev"],[89,40,195,40],[89,41,195,41,"last"],[89,45,195,45],[89,49,195,49,"last"],[89,53,195,53],[89,56,195,56,"prev"],[89,60,195,60],[89,61,195,61,"first"],[89,66,195,66],[90,6,196,4],[90,10,196,10,"lastShouldIncrement"],[90,29,196,29],[90,32,197,6,"last"],[90,36,197,10],[90,39,197,13,"overscanLast"],[90,51,197,25],[90,56,197,30],[90,57,197,31,"maxNewCells"],[90,68,197,42],[90,72,197,46],[90,73,197,47,"lastWillAddMore"],[90,88,197,62],[90,89,197,63],[91,6,198,4],[91,10,198,8,"maxNewCells"],[91,21,198,19],[91,25,198,23],[91,26,198,24,"firstShouldIncrement"],[91,46,198,44],[91,50,198,48],[91,51,198,49,"lastShouldIncrement"],[91,70,198,68],[91,72,198,70],[92,8,203,6],[93,6,204,4],[94,6,205,4],[94,10,206,6,"firstShouldIncrement"],[94,30,206,26],[94,34,207,6],[94,36,207,8,"fillPreference"],[94,50,207,22],[94,55,207,27],[94,62,207,34],[94,66,207,38,"lastShouldIncrement"],[94,85,207,57],[94,89,207,61,"lastWillAddMore"],[94,104,207,76],[94,105,207,77],[94,107,208,6],[95,8,209,6],[95,12,209,10,"firstWillAddMore"],[95,28,209,26],[95,30,209,28],[96,10,210,8,"newCellCount"],[96,22,210,20],[96,24,210,22],[97,8,211,6],[98,8,212,6,"first"],[98,13,212,11],[98,15,212,13],[99,6,213,4],[100,6,214,4],[100,10,215,6,"lastShouldIncrement"],[100,29,215,25],[100,33,216,6],[100,35,216,8,"fillPreference"],[100,49,216,22],[100,54,216,27],[100,62,216,35],[100,66,216,39,"firstShouldIncrement"],[100,86,216,59],[100,90,216,63,"firstWillAddMore"],[100,106,216,79],[100,107,216,80],[100,109,217,6],[101,8,218,6],[101,12,218,10,"lastWillAddMore"],[101,27,218,25],[101,29,218,27],[102,10,219,8,"newCellCount"],[102,22,219,20],[102,24,219,22],[103,8,220,6],[104,8,221,6,"last"],[104,12,221,10],[104,14,221,12],[105,6,222,4],[106,4,223,2],[107,4,224,2],[107,8,225,4],[107,10,226,6,"last"],[107,14,226,10],[107,18,226,14,"first"],[107,23,226,19],[107,27,227,6,"first"],[107,32,227,11],[107,36,227,15],[107,37,227,16],[107,41,228,6,"last"],[107,45,228,10],[107,48,228,13,"itemCount"],[107,57,228,22],[107,61,229,6,"first"],[107,66,229,11],[107,70,229,15,"overscanFirst"],[107,83,229,28],[107,87,230,6,"last"],[107,91,230,10],[107,95,230,14,"overscanLast"],[107,107,230,26],[107,111,231,6,"first"],[107,116,231,11],[107,120,231,15,"visible"],[107,127,231,22],[107,128,231,23,"first"],[107,133,231,28],[107,137,232,6,"last"],[107,141,232,10],[107,145,232,14,"visible"],[107,152,232,21],[107,153,232,22,"last"],[107,157,232,26],[107,158,233,5],[107,160,234,4],[108,6,235,4],[108,12,235,10],[108,16,235,14,"Error"],[108,21,235,19],[108,22,236,6],[108,47,236,31],[108,50,237,8,"JSON"],[108,54,237,12],[108,55,237,13,"stringify"],[108,64,237,22],[108,65,237,23],[109,8,238,10,"first"],[109,13,238,15],[109,15,238,10,"first"],[109,20,238,15],[110,8,239,10,"last"],[110,12,239,14],[110,14,239,10,"last"],[110,18,239,14],[111,8,240,10,"itemCount"],[111,17,240,19],[111,19,240,10,"itemCount"],[111,28,240,19],[112,8,241,10,"overscanFirst"],[112,21,241,23],[112,23,241,10,"overscanFirst"],[112,36,241,23],[113,8,242,10,"overscanLast"],[113,20,242,22],[113,22,242,10,"overscanLast"],[113,34,242,22],[114,8,243,10,"visible"],[114,15,243,17],[114,17,243,10,"visible"],[115,6,244,8],[115,7,244,9],[115,8,244,10],[115,9,245,5],[116,4,246,2],[117,4,247,2],[117,11,247,9],[118,6,247,10,"first"],[118,11,247,15],[118,13,247,10,"first"],[118,18,247,15],[119,6,247,17,"last"],[119,10,247,21],[119,12,247,17,"last"],[120,4,247,21],[120,5,247,22],[121,2,248,0],[122,2,250,7],[122,11,250,16,"keyExtractor"],[122,23,250,28],[122,24,250,29,"item"],[122,28,250,38],[122,30,250,40,"index"],[122,35,250,53],[122,37,250,63],[123,4,251,2],[123,8,251,6],[123,15,251,13,"item"],[123,19,251,17],[123,24,251,22],[123,32,251,30],[123,36,251,34],[123,37,251,34,"item"],[123,41,251,38],[123,61,251,34,"item"],[123,65,251,38],[123,66,251,40,"key"],[123,69,251,43],[123,74,251,47],[123,78,251,51],[123,80,251,53],[124,6,252,4],[124,13,252,11,"item"],[124,17,252,15],[124,18,252,16,"key"],[124,21,252,19],[125,4,253,2],[126,4,254,2],[126,8,254,6],[126,15,254,13,"item"],[126,19,254,17],[126,24,254,22],[126,32,254,30],[126,36,254,34],[126,37,254,34,"item"],[126,41,254,38],[126,61,254,34,"item"],[126,65,254,38],[126,66,254,40,"id"],[126,68,254,42],[126,73,254,46],[126,77,254,50],[126,79,254,52],[127,6,255,4],[127,13,255,11,"item"],[127,17,255,15],[127,18,255,16,"id"],[127,20,255,18],[128,4,256,2],[129,4,257,2],[129,11,257,9,"String"],[129,17,257,15],[129,18,257,16,"index"],[129,23,257,21],[129,24,257,22],[130,2,258,0],[131,0,258,1]],"functionMap":{"names":["<global>","elementsThatOverlapOffsets","newRangeCount","computeWindowedRenderLimits","keyExtractor"],"mappings":"AAA;OCmB;CD4C;OEQ;CFqB;OGQ;CHmJ;OIE;CJQ"}},"type":"js/module"}]}