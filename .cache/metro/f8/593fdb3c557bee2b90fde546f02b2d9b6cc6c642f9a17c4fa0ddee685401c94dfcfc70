{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":665},"end":{"line":19,"column":77,"index":742}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native/Libraries/Utilities/binaryToBase64","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":665},"end":{"line":19,"column":77,"index":742}}],"key":"F+nrhI6RT70k3hiY+1tLa6GJOmM="}},{"name":"./promise","data":{"asyncType":null,"locs":[{"start":{"line":89,"column":41,"index":2251},"end":{"line":89,"column":53,"index":2263},"identifierName":"promiseDefer"}],"key":"hx8Ug65uHxloXIwKdH2Td5KQ8Hw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _binaryToBase = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"react-native/Libraries/Utilities/binaryToBase64\"));\n  var CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  function btoa(input) {\n    var map;\n    var i = 0;\n    var block = 0;\n    var output = '';\n    for (block = 0, i = 0, map = CHARS; input.charAt(i | 0) || (map = '=', i % 1); output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n      var charCode = input.charCodeAt(i += 3 / 4);\n      if (charCode > 0xff) {\n        throw new Error(\"'RNFirebase.Base64.btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  }\n  function atob(input) {\n    var i = 0;\n    var bc = 0;\n    var bs = 0;\n    var buffer;\n    var output = '';\n    var str = input.replace(/[=]+$/, '');\n    if (str.length % 4 === 1) {\n      throw new Error(\"'RNFirebase.Base64.atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (bc = 0, bs = 0, i = 0; buffer = str.charAt(i++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      buffer = CHARS.indexOf(buffer);\n    }\n    return output;\n  }\n  function fromData(data) {\n    if (data instanceof Blob) {\n      var fileReader = new FileReader();\n      var _promiseDefer = (0, _$$_REQUIRE(_dependencyMap[2], \"./promise\").promiseDefer)(),\n        resolve = _promiseDefer.resolve,\n        reject = _promiseDefer.reject,\n        promise = _promiseDefer.promise;\n      fileReader.readAsDataURL(data);\n      fileReader.onloadend = function onloadend() {\n        resolve({\n          string: fileReader.result,\n          format: 'data_url'\n        });\n      };\n      fileReader.onerror = function onerror(event) {\n        fileReader.abort();\n        reject(event);\n      };\n      return promise;\n    }\n    if (data instanceof ArrayBuffer || data instanceof Uint8Array) {\n      return Promise.resolve({\n        string: (0, _binaryToBase.default)(data),\n        format: 'base64'\n      });\n    }\n    throw new Error(\"'RNFirebase.Base64.fromData' failed: Unknown data type.\");\n  }\n  var _default = {\n    btoa: btoa,\n    atob: atob,\n    fromData: fromData\n  };\n  exports.default = _default;\n});","lineCount":71,"map":[[6,2,19,0],[7,2,22,0],[7,6,22,6,"CHARS"],[7,11,22,11],[7,14,22,14],[7,81,22,81],[8,2,27,0],[8,11,27,9,"btoa"],[8,15,27,13],[8,16,27,14,"input"],[8,21,27,19],[8,23,27,21],[9,4,28,2],[9,8,28,6,"map"],[9,11,28,9],[10,4,29,2],[10,8,29,6,"i"],[10,9,29,7],[10,12,29,10],[10,13,29,11],[11,4,30,2],[11,8,30,6,"block"],[11,13,30,11],[11,16,30,14],[11,17,30,15],[12,4,31,2],[12,8,31,6,"output"],[12,14,31,12],[12,17,31,15],[12,19,31,17],[13,4,33,2],[13,9,34,4,"block"],[13,14,34,9],[13,17,34,12],[13,18,34,13],[13,20,34,15,"i"],[13,21,34,16],[13,24,34,19],[13,25,34,20],[13,27,34,22,"map"],[13,30,34,25],[13,33,34,28,"CHARS"],[13,38,34,33],[13,40,35,4,"input"],[13,45,35,9],[13,46,35,10,"charAt"],[13,52,35,16],[13,53,35,17,"i"],[13,54,35,18],[13,57,35,21],[13,58,35,22],[13,59,35,23],[13,64,35,29,"map"],[13,67,35,32],[13,70,35,35],[13,73,35,38],[13,75,35,41,"i"],[13,76,35,42],[13,79,35,45],[13,80,35,46],[13,81,35,47],[13,83,36,4,"output"],[13,89,36,10],[13,93,36,14,"map"],[13,96,36,17],[13,97,36,18,"charAt"],[13,103,36,24],[13,104,36,25],[13,106,36,27],[13,109,36,31,"block"],[13,114,36,36],[13,118,36,41],[13,119,36,42],[13,122,36,46,"i"],[13,123,36,47],[13,126,36,50],[13,127,36,51],[13,130,36,55],[13,131,36,58],[13,132,36,59],[13,134,37,4],[14,6,38,4],[14,10,38,10,"charCode"],[14,18,38,18],[14,21,38,21,"input"],[14,26,38,26],[14,27,38,27,"charCodeAt"],[14,37,38,37],[14,38,38,39,"i"],[14,39,38,40],[14,43,38,44],[14,44,38,45],[14,47,38,48],[14,48,38,49],[14,49,38,51],[15,6,40,4],[15,10,40,8,"charCode"],[15,18,40,16],[15,21,40,19],[15,25,40,23],[15,27,40,25],[16,8,41,6],[16,14,41,12],[16,18,41,16,"Error"],[16,23,41,21],[16,24,42,8],[16,132,42,116],[16,133,43,7],[17,6,44,4],[18,6,46,4,"block"],[18,11,46,9],[18,14,46,13,"block"],[18,19,46,18],[18,23,46,22],[18,24,46,23],[18,27,46,27,"charCode"],[18,35,46,35],[19,4,47,2],[20,4,49,2],[20,11,49,9,"output"],[20,17,49,15],[21,2,50,0],[22,2,55,0],[22,11,55,9,"atob"],[22,15,55,13],[22,16,55,14,"input"],[22,21,55,19],[22,23,55,21],[23,4,56,2],[23,8,56,6,"i"],[23,9,56,7],[23,12,56,10],[23,13,56,11],[24,4,57,2],[24,8,57,6,"bc"],[24,10,57,8],[24,13,57,11],[24,14,57,12],[25,4,58,2],[25,8,58,6,"bs"],[25,10,58,8],[25,13,58,11],[25,14,58,12],[26,4,59,2],[26,8,59,6,"buffer"],[26,14,59,12],[27,4,60,2],[27,8,60,6,"output"],[27,14,60,12],[27,17,60,15],[27,19,60,17],[28,4,62,2],[28,8,62,8,"str"],[28,11,62,11],[28,14,62,14,"input"],[28,19,62,19],[28,20,62,20,"replace"],[28,27,62,27],[28,28,62,28],[28,35,62,35],[28,37,62,37],[28,39,62,39],[28,40,62,40],[29,4,64,2],[29,8,64,6,"str"],[29,11,64,9],[29,12,64,10,"length"],[29,18,64,16],[29,21,64,19],[29,22,64,20],[29,27,64,25],[29,28,64,26],[29,30,64,28],[30,6,65,4],[30,12,65,10],[30,16,65,14,"Error"],[30,21,65,19],[30,22,66,6],[30,107,66,91],[30,108,67,5],[31,4,68,2],[32,4,70,2],[32,9,71,4,"bc"],[32,11,71,6],[32,14,71,9],[32,15,71,10],[32,17,71,12,"bs"],[32,19,71,14],[32,22,71,17],[32,23,71,18],[32,25,71,20,"i"],[32,26,71,21],[32,29,71,24],[32,30,71,25],[32,32,72,5,"buffer"],[32,38,72,11],[32,41,72,14,"str"],[32,44,72,17],[32,45,72,18,"charAt"],[32,51,72,24],[32,52,72,25,"i"],[32,53,72,26],[32,55,72,28],[32,56,72,29],[32,58,73,4],[32,59,73,5,"buffer"],[32,65,73,11],[32,70,73,17,"bs"],[32,72,73,19],[32,75,73,22,"bc"],[32,77,73,24],[32,80,73,27],[32,81,73,28],[32,84,73,31,"bs"],[32,86,73,33],[32,89,73,36],[32,91,73,38],[32,94,73,41,"buffer"],[32,100,73,47],[32,103,73,50,"buffer"],[32,109,73,56],[32,111,73,59,"bc"],[32,113,73,61],[32,115,73,63],[32,118,73,66],[32,119,73,67],[32,120,73,68],[32,123,74,9,"output"],[32,129,74,15],[32,133,74,19,"String"],[32,139,74,25],[32,140,74,26,"fromCharCode"],[32,152,74,38],[32,153,74,39],[32,156,74,42],[32,159,74,46,"bs"],[32,161,74,48],[32,166,74,54],[32,167,74,55],[32,168,74,56],[32,171,74,59,"bc"],[32,173,74,61],[32,176,74,65],[32,177,74,66],[32,178,74,68],[32,179,74,69],[32,182,75,8],[32,183,75,9],[32,185,76,4],[33,6,77,4,"buffer"],[33,12,77,10],[33,15,77,13,"CHARS"],[33,20,77,18],[33,21,77,19,"indexOf"],[33,28,77,26],[33,29,77,27,"buffer"],[33,35,77,33],[33,36,77,34],[34,4,78,2],[35,4,80,2],[35,11,80,9,"output"],[35,17,80,15],[36,2,81,0],[37,2,86,0],[37,11,86,9,"fromData"],[37,19,86,17],[37,20,86,18,"data"],[37,24,86,22],[37,26,86,24],[38,4,87,2],[38,8,87,6,"data"],[38,12,87,10],[38,24,87,22,"Blob"],[38,28,87,26],[38,30,87,28],[39,6,88,4],[39,10,88,10,"fileReader"],[39,20,88,20],[39,23,88,23],[39,27,88,27,"FileReader"],[39,37,88,37],[39,39,88,39],[40,6,89,4],[40,26,89,41],[40,30,89,41,"promiseDefer"],[40,86,89,53],[40,89,89,55],[41,8,89,12,"resolve"],[41,15,89,19],[41,32,89,12,"resolve"],[41,39,89,19],[42,8,89,21,"reject"],[42,14,89,27],[42,31,89,21,"reject"],[42,37,89,27],[43,8,89,29,"promise"],[43,15,89,36],[43,32,89,29,"promise"],[43,39,89,36],[44,6,91,4,"fileReader"],[44,16,91,14],[44,17,91,15,"readAsDataURL"],[44,30,91,28],[44,31,91,29,"data"],[44,35,91,33],[44,36,91,34],[45,6,93,4,"fileReader"],[45,16,93,14],[45,17,93,15,"onloadend"],[45,26,93,24],[45,29,93,27],[45,38,93,36,"onloadend"],[45,47,93,45],[45,50,93,48],[46,8,94,6,"resolve"],[46,15,94,13],[46,16,94,14],[47,10,94,16,"string"],[47,16,94,22],[47,18,94,24,"fileReader"],[47,28,94,34],[47,29,94,35,"result"],[47,35,94,41],[48,10,94,43,"format"],[48,16,94,49],[48,18,94,51],[49,8,94,62],[49,9,94,63],[49,10,94,64],[50,6,95,4],[50,7,95,5],[51,6,97,4,"fileReader"],[51,16,97,14],[51,17,97,15,"onerror"],[51,24,97,22],[51,27,97,25],[51,36,97,34,"onerror"],[51,43,97,41],[51,44,97,42,"event"],[51,49,97,47],[51,51,97,49],[52,8,98,6,"fileReader"],[52,18,98,16],[52,19,98,17,"abort"],[52,24,98,22],[52,26,98,24],[53,8,99,6,"reject"],[53,14,99,12],[53,15,99,13,"event"],[53,20,99,18],[53,21,99,19],[54,6,100,4],[54,7,100,5],[55,6,102,4],[55,13,102,11,"promise"],[55,20,102,18],[56,4,103,2],[57,4,105,2],[57,8,105,6,"data"],[57,12,105,10],[57,24,105,22,"ArrayBuffer"],[57,35,105,33],[57,39,105,37,"data"],[57,43,105,41],[57,55,105,53,"Uint8Array"],[57,65,105,63],[57,67,105,65],[58,6,106,4],[58,13,106,11,"Promise"],[58,20,106,18],[58,21,106,19,"resolve"],[58,28,106,26],[58,29,106,27],[59,8,107,6,"string"],[59,14,107,12],[59,16,107,14],[59,20,107,14,"binaryToBase64"],[59,41,107,28],[59,43,107,29,"data"],[59,47,107,33],[59,48,107,34],[60,8,108,6,"format"],[60,14,108,12],[60,16,108,14],[61,6,109,4],[61,7,109,5],[61,8,109,6],[62,4,110,2],[63,4,112,2],[63,10,112,8],[63,14,112,12,"Error"],[63,19,112,17],[63,20,112,18],[63,77,112,75],[63,78,112,76],[64,2,113,0],[65,2,113,1],[65,17,115,15],[66,4,116,2,"btoa"],[66,8,116,6],[66,10,116,2,"btoa"],[66,14,116,6],[67,4,117,2,"atob"],[67,8,117,6],[67,10,117,2,"atob"],[67,14,117,6],[68,4,118,2,"fromData"],[68,12,118,10],[68,14,118,2,"fromData"],[69,2,119,0],[69,3,119,1],[70,2,119,1],[71,0,119,1]],"functionMap":{"names":["<global>","btoa","atob","fromData","onloadend","onerror"],"mappings":"AAA;AC0B;CDuB;AEK;CF0B;AGK;2BCO;KDE;yBEE;KFG;CHa"}},"type":"js/module"}]}