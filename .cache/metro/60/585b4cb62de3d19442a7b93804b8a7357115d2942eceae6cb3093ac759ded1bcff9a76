{"dependencies":[{"name":"react-native-gesture-handler","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":25,"column":0,"index":725}},{"start":{"line":1,"column":0,"index":0},"end":{"line":25,"column":0,"index":725}},{"start":{"line":1,"column":0,"index":0},"end":{"line":25,"column":0,"index":725}},{"start":{"line":14,"column":7,"index":439},"end":{"line":14,"column":30,"index":462}}],"key":"58cwAQbs/0DYcp4qMXOKbndmPbE="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0,"index":160},"end":{"line":7,"column":65,"index":225}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../utils/DrawerGestureContext","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0,"index":160},"end":{"line":7,"column":65,"index":225}}],"key":"n1gW0lon7HJBDgB6XRUijKlCO3I="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":4,"index":381},"end":{"line":15,"column":36,"index":513}},{"start":{"line":14,"column":6,"index":438},"end":{"line":14,"column":44,"index":476}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"GestureHandlerRootView\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[0], \"react-native-gesture-handler\").GestureHandlerRootView;\n    }\n  });\n  Object.defineProperty(exports, \"GestureState\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[0], \"react-native-gesture-handler\").State;\n    }\n  });\n  exports.PanGestureHandler = PanGestureHandler;\n  Object.defineProperty(exports, \"TapGestureHandler\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[0], \"react-native-gesture-handler\").TapGestureHandler;\n    }\n  });\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n  var _DrawerGestureContext = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"../utils/DrawerGestureContext\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function PanGestureHandler(props) {\n    var gestureRef = React.useRef(null);\n    return (0, _$$_REQUIRE(_dependencyMap[4], \"react/jsx-runtime\").jsx)(_DrawerGestureContext.default.Provider, {\n      value: gestureRef,\n      children: (0, _$$_REQUIRE(_dependencyMap[4], \"react/jsx-runtime\").jsx)(_$$_REQUIRE(_dependencyMap[0], \"react-native-gesture-handler\").PanGestureHandler, Object.assign({}, props))\n    });\n  }\n});","lineCount":35,"map":[[24,2,1,0],[25,2,7,0],[26,2,7,65],[27,2,7,65],[28,2,9,7],[28,11,9,16,"PanGestureHandler"],[28,28,9,33],[28,29,9,34,"props"],[28,34,9,68],[28,36,9,70],[29,4,10,2],[29,8,10,8,"gestureRef"],[29,18,10,18],[29,21,10,21,"React"],[29,26,10,26],[29,27,10,27,"useRef"],[29,33,10,33],[29,34,10,59],[29,38,10,63],[29,39,10,64],[30,4,12,2],[30,11,13,4],[30,72,13,5],[30,101,13,25],[30,102,13,26],[30,110,13,34],[31,6,13,35],[31,11,13,40],[31,13,13,42,"gestureRef"],[31,23,13,53],[32,6,13,53],[32,16,14,6],[32,77,14,7],[32,157,14,30],[32,177,14,35,"props"],[32,182,14,40],[33,4,14,44],[33,6,15,36],[34,2,17,0],[35,0,17,1]],"functionMap":{"names":["<global>","PanGestureHandler"],"mappings":"AAA;OCQ;CDQ"}},"type":"js/module"}]}