{"dependencies":[{"name":"./threads","data":{"asyncType":null,"locs":[{"start":{"line":161,"column":2,"index":4760},"end":{"line":161,"column":9,"index":4767},"identifierName":"runOnUI"},{"start":{"line":174,"column":2,"index":5108},"end":{"line":174,"column":9,"index":5115},"identifierName":"runOnUI"}],"key":"BbDCjcCMVFuwh70FIDUA22HfsJc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMapperRegistry = void 0;\n  exports.startMapper = startMapper;\n  exports.stopMapper = stopMapper;\n  var createMapperRegistry = function () {\n    var _e = [new Error(), 1, -20];\n    var _f = function _f() {\n      var mappers = new Map();\n      var sortedMappers = [];\n      var frameRequested = false;\n      function updateMappersOrder() {\n        var pre = new Map();\n        mappers.forEach(function (mapper) {\n          if (mapper.outputs) {\n            for (var output of mapper.outputs) {\n              var preMappers = pre.get(output);\n              if (preMappers === undefined) {\n                pre.set(output, [mapper]);\n              } else {\n                preMappers.push(mapper);\n              }\n            }\n          }\n        });\n        var visited = new Set();\n        var newOrder = [];\n        function dfs(mapper) {\n          visited.add(mapper);\n          for (var input of mapper.inputs) {\n            var preMappers = pre.get(input);\n            if (preMappers) {\n              for (var preMapper of preMappers) {\n                if (!visited.has(preMapper)) {\n                  dfs(preMapper);\n                }\n              }\n            }\n          }\n          newOrder.push(mapper);\n        }\n        mappers.forEach(function (mapper) {\n          if (!visited.has(mapper)) {\n            dfs(mapper);\n          }\n        });\n        sortedMappers = newOrder;\n      }\n      function mapperFrame() {\n        frameRequested = false;\n        if (mappers.size !== sortedMappers.length) {\n          updateMappersOrder();\n        }\n        for (var mapper of sortedMappers) {\n          if (mapper.dirty) {\n            mapper.dirty = false;\n            mapper.worklet();\n          }\n        }\n      }\n      function maybeRequestUpdates() {\n        if (!frameRequested) {\n          requestAnimationFrame(mapperFrame);\n          frameRequested = true;\n        }\n      }\n      function extractInputs(inputs, resultArray) {\n        if (Array.isArray(inputs)) {\n          for (var input of inputs) {\n            input && extractInputs(input, resultArray);\n          }\n        } else if (inputs.addListener) {\n          resultArray.push(inputs);\n        } else if (typeof inputs === 'object') {\n          for (var element of Object.values(inputs)) {\n            element && extractInputs(element, resultArray);\n          }\n        }\n        return resultArray;\n      }\n      return {\n        start: function start(mapperID, worklet, inputs, outputs) {\n          var mapper = {\n            id: mapperID,\n            dirty: true,\n            worklet: worklet,\n            inputs: extractInputs(inputs, []),\n            outputs: outputs\n          };\n          mappers.set(mapper.id, mapper);\n          sortedMappers = [];\n          for (var sv of mapper.inputs) {\n            sv.addListener(mapper.id, function () {\n              mapper.dirty = true;\n              maybeRequestUpdates();\n            });\n          }\n          maybeRequestUpdates();\n        },\n        stop: function stop(mapperID) {\n          var mapper = mappers.get(mapperID);\n          if (mapper) {\n            mappers.delete(mapper.id);\n            sortedMappers = [];\n            for (var sv of mapper.inputs) {\n              sv.removeListener(mapper.id);\n            }\n          }\n        }\n      };\n    };\n    _f._closure = {};\n    _f.asString = \"function createMapperRegistry() {\\n  const mappers = new Map();\\n  let sortedMappers = [];\\n  let frameRequested = false;\\n  function updateMappersOrder() {\\n    const pre = new Map();\\n    mappers.forEach(function (mapper) {\\n      if (mapper.outputs) {\\n        for (const output of mapper.outputs) {\\n          const preMappers = pre.get(output);\\n          if (preMappers === undefined) {\\n            pre.set(output, [mapper]);\\n          } else {\\n            preMappers.push(mapper);\\n          }\\n        }\\n      }\\n    });\\n    const visited = new Set();\\n    const newOrder = [];\\n    function dfs(mapper) {\\n      visited.add(mapper);\\n      for (const input of mapper.inputs) {\\n        const preMappers = pre.get(input);\\n        if (preMappers) {\\n          for (const preMapper of preMappers) {\\n            if (!visited.has(preMapper)) {\\n              dfs(preMapper);\\n            }\\n          }\\n        }\\n      }\\n      newOrder.push(mapper);\\n    }\\n    mappers.forEach(function (mapper) {\\n      if (!visited.has(mapper)) {\\n        dfs(mapper);\\n      }\\n    });\\n    sortedMappers = newOrder;\\n  }\\n  function mapperFrame() {\\n    frameRequested = false;\\n    if (mappers.size !== sortedMappers.length) {\\n      updateMappersOrder();\\n    }\\n    for (const mapper of sortedMappers) {\\n      if (mapper.dirty) {\\n        mapper.dirty = false;\\n        mapper.worklet();\\n      }\\n    }\\n  }\\n  function maybeRequestUpdates() {\\n    if (!frameRequested) {\\n      requestAnimationFrame(mapperFrame);\\n      frameRequested = true;\\n    }\\n  }\\n  function extractInputs(inputs, resultArray) {\\n    if (Array.isArray(inputs)) {\\n      for (const input of inputs) {\\n        input && extractInputs(input, resultArray);\\n      }\\n    } else if (inputs.addListener) {\\n      resultArray.push(inputs);\\n    } else if (typeof inputs === 'object') {\\n      for (const element of Object.values(inputs)) {\\n        element && extractInputs(element, resultArray);\\n      }\\n    }\\n    return resultArray;\\n  }\\n  return {\\n    start: function (mapperID, worklet, inputs, outputs) {\\n      const mapper = {\\n        id: mapperID,\\n        dirty: true,\\n        worklet: worklet,\\n        inputs: extractInputs(inputs, []),\\n        outputs: outputs\\n      };\\n      mappers.set(mapper.id, mapper);\\n      sortedMappers = [];\\n      for (const sv of mapper.inputs) {\\n        sv.addListener(mapper.id, function () {\\n          mapper.dirty = true;\\n          maybeRequestUpdates();\\n        });\\n      }\\n      maybeRequestUpdates();\\n    },\\n    stop: function (mapperID) {\\n      const mapper = mappers.get(mapperID);\\n      if (mapper) {\\n        mappers.delete(mapper.id);\\n        sortedMappers = [];\\n        for (const sv of mapper.inputs) {\\n          sv.removeListener(mapper.id);\\n        }\\n      }\\n    }\\n  };\\n}\";\n    _f.__workletHash = 14165369257707;\n    _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/mappers.ts\";\n    _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"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\\\",\\\"names\\\":[\\\"createMapperRegistry\\\",\\\"mappers\\\",\\\"Map\\\",\\\"sortedMappers\\\",\\\"frameRequested\\\",\\\"updateMappersOrder\\\",\\\"pre\\\",\\\"forEach\\\",\\\"mapper\\\",\\\"outputs\\\",\\\"output\\\",\\\"preMappers\\\",\\\"get\\\",\\\"undefined\\\",\\\"set\\\",\\\"push\\\",\\\"visited\\\",\\\"Set\\\",\\\"newOrder\\\",\\\"dfs\\\",\\\"add\\\",\\\"input\\\",\\\"inputs\\\",\\\"preMapper\\\",\\\"has\\\",\\\"mapperFrame\\\",\\\"size\\\",\\\"length\\\",\\\"dirty\\\",\\\"worklet\\\",\\\"maybeRequestUpdates\\\",\\\"requestAnimationFrame\\\",\\\"extractInputs\\\",\\\"resultArray\\\",\\\"Array\\\",\\\"isArray\\\",\\\"addListener\\\",\\\"element\\\",\\\"Object\\\",\\\"values\\\",\\\"start\\\",\\\"mapperID\\\",\\\"id\\\",\\\"sv\\\",\\\"stop\\\",\\\"delete\\\",\\\"removeListener\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/mappers.ts\\\"]}\";\n    _f.__stackDetails = _e;\n    return _f;\n  }();\n  exports.createMapperRegistry = createMapperRegistry;\n  var MAPPER_ID = 9999;\n  function startMapper(worklet) {\n    var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var mapperID = MAPPER_ID += 1;\n    (0, _$$_REQUIRE(_dependencyMap[0], \"./threads\").runOnUI)(function () {\n      var _e = [new Error(), -6, -20];\n      var _f = function _f() {\n        var mapperRegistry = global.__mapperRegistry;\n        if (mapperRegistry === undefined) {\n          mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n        }\n        mapperRegistry.start(mapperID, worklet, inputs, outputs);\n      };\n      _f._closure = {\n        createMapperRegistry: createMapperRegistry,\n        mapperID: mapperID,\n        worklet: worklet,\n        inputs: inputs,\n        outputs: outputs\n      };\n      _f.asString = \"function anonymous() {\\n  const {\\n    createMapperRegistry,\\n    mapperID,\\n    worklet,\\n    inputs,\\n    outputs\\n  } = this._closure;\\n  let mapperRegistry = global.__mapperRegistry;\\n  if (mapperRegistry === undefined) {\\n    mapperRegistry = global.__mapperRegistry = createMapperRegistry();\\n  }\\n  mapperRegistry.start(mapperID, worklet, inputs, outputs);\\n}\";\n      _f.__workletHash = 10884867408878;\n      _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/mappers.ts\";\n      _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AAgKU,kBAAM;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAEZ,IAAIA,cAAc,GAAGC,MAAM,CAACC,gBAAgB;EAC5C,IAAIF,cAAc,KAAKG,SAAS,EAAE;IAChCH,cAAc,GAAGC,MAAM,CAACC,gBAAgB,GAAGE,oBAAoB,EAAE;EACnE;EACAJ,cAAc,CAACK,KAAK,CAACC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,CAAC;AAC1D\\\",\\\"names\\\":[\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"undefined\\\",\\\"createMapperRegistry\\\",\\\"start\\\",\\\"mapperID\\\",\\\"worklet\\\",\\\"inputs\\\",\\\"outputs\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/mappers.ts\\\"]}\";\n      _f.__stackDetails = _e;\n      return _f;\n    }())();\n    return mapperID;\n  }\n  function stopMapper(mapperID) {\n    (0, _$$_REQUIRE(_dependencyMap[0], \"./threads\").runOnUI)(function () {\n      var _e = [new Error(), -2, -20];\n      var _f = function _f() {\n        var mapperRegistry = global.__mapperRegistry;\n        mapperRegistry == null ? void 0 : mapperRegistry.stop(mapperID);\n      };\n      _f._closure = {\n        mapperID: mapperID\n      };\n      _f.asString = \"function anonymous() {\\n  const {\\n    mapperID\\n  } = this._closure;\\n  const mapperRegistry = global.__mapperRegistry;\\n  mapperRegistry === null || mapperRegistry === void 0 ? void 0 : mapperRegistry.stop(mapperID);\\n}\";\n      _f.__workletHash = 13611698491048;\n      _f.__location = \"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/mappers.ts\";\n      _f.__sourceMap = \"{\\\"version\\\":3,\\\"mappings\\\":\\\"AA6KU,kBAAM;EAAA;IAAA;EAAA;EAEZ,MAAMA,cAAc,GAAGC,MAAM,CAACC,gBAAgB;EAC9CF,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEG,IAAI,CAACC,QAAQ,CAAC;AAChC\\\",\\\"names\\\":[\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"stop\\\",\\\"mapperID\\\"],\\\"sources\\\":[\\\"/Users/alijawish/Desktop/BIM/react-native-boilerplate/node_modules/react-native-reanimated/src/reanimated2/mappers.ts\\\"]}\";\n      _f.__stackDetails = _e;\n      return _f;\n    }())();\n  }\n});","lineCount":171,"map":[[8,6,12,16,"createMapperRegistry"],[8,26,12,36],[9,4,12,36],[10,4,12,36],[10,27,12,39],[11,6,14,2],[11,10,14,8,"mappers"],[11,17,14,15],[11,20,14,18],[11,24,14,22,"Map"],[11,27,14,25],[11,29,14,27],[12,6,15,2],[12,10,15,6,"sortedMappers"],[12,23,15,29],[12,26,15,32],[12,28,15,34],[13,6,17,2],[13,10,17,6,"frameRequested"],[13,24,17,20],[13,27,17,23],[13,32,17,28],[14,6,19,2],[14,15,19,11,"updateMappersOrder"],[14,33,19,29],[14,36,19,32],[15,8,40,4],[15,12,40,10,"pre"],[15,15,40,13],[15,18,40,16],[15,22,40,20,"Map"],[15,25,40,23],[15,27,40,25],[16,8,41,4,"mappers"],[16,15,41,11],[16,16,41,12,"forEach"],[16,23,41,19],[16,24,41,20],[16,34,41,21,"mapper"],[16,40,41,27],[16,42,41,32],[17,10,42,6],[17,14,42,10,"mapper"],[17,20,42,16],[17,21,42,17,"outputs"],[17,28,42,24],[17,30,42,26],[18,12,43,8],[18,17,43,13],[18,21,43,19,"output"],[18,27,43,25],[18,31,43,29,"mapper"],[18,37,43,35],[18,38,43,36,"outputs"],[18,45,43,43],[18,47,43,45],[19,14,44,10],[19,18,44,16,"preMappers"],[19,28,44,26],[19,31,44,29,"pre"],[19,34,44,32],[19,35,44,33,"get"],[19,38,44,36],[19,39,44,37,"output"],[19,45,44,43],[19,46,44,44],[20,14,45,10],[20,18,45,14,"preMappers"],[20,28,45,24],[20,33,45,29,"undefined"],[20,42,45,38],[20,44,45,40],[21,16,46,12,"pre"],[21,19,46,15],[21,20,46,16,"set"],[21,23,46,19],[21,24,46,20,"output"],[21,30,46,26],[21,32,46,28],[21,33,46,29,"mapper"],[21,39,46,35],[21,40,46,36],[21,41,46,37],[22,14,47,10],[22,15,47,11],[22,21,47,17],[23,16,48,12,"preMappers"],[23,26,48,22],[23,27,48,23,"push"],[23,31,48,27],[23,32,48,28,"mapper"],[23,38,48,34],[23,39,48,35],[24,14,49,10],[25,12,50,8],[26,10,51,6],[27,8,52,4],[27,9,52,5],[27,10,52,6],[28,8,53,4],[28,12,53,10,"visited"],[28,19,53,17],[28,22,53,20],[28,26,53,24,"Set"],[28,29,53,27],[28,31,53,29],[29,8,54,4],[29,12,54,10,"newOrder"],[29,20,54,28],[29,23,54,31],[29,25,54,33],[30,8,55,4],[30,17,55,13,"dfs"],[30,20,55,16],[30,21,55,17,"mapper"],[30,27,55,31],[30,29,55,33],[31,10,56,6,"visited"],[31,17,56,13],[31,18,56,14,"add"],[31,21,56,17],[31,22,56,18,"mapper"],[31,28,56,24],[31,29,56,25],[32,10,57,6],[32,15,57,11],[32,19,57,17,"input"],[32,24,57,22],[32,28,57,26,"mapper"],[32,34,57,32],[32,35,57,33,"inputs"],[32,41,57,39],[32,43,57,41],[33,12,58,8],[33,16,58,14,"preMappers"],[33,26,58,24],[33,29,58,27,"pre"],[33,32,58,30],[33,33,58,31,"get"],[33,36,58,34],[33,37,58,35,"input"],[33,42,58,40],[33,43,58,41],[34,12,59,8],[34,16,59,12,"preMappers"],[34,26,59,22],[34,28,59,24],[35,14,60,10],[35,19,60,15],[35,23,60,21,"preMapper"],[35,32,60,30],[35,36,60,34,"preMappers"],[35,46,60,44],[35,48,60,46],[36,16,61,12],[36,20,61,16],[36,21,61,17,"visited"],[36,28,61,24],[36,29,61,25,"has"],[36,32,61,28],[36,33,61,29,"preMapper"],[36,42,61,38],[36,43,61,39],[36,45,61,41],[37,18,62,14,"dfs"],[37,21,62,17],[37,22,62,18,"preMapper"],[37,31,62,27],[37,32,62,28],[38,16,63,12],[39,14,64,10],[40,12,65,8],[41,10,66,6],[42,10,67,6,"newOrder"],[42,18,67,14],[42,19,67,15,"push"],[42,23,67,19],[42,24,67,20,"mapper"],[42,30,67,26],[42,31,67,27],[43,8,68,4],[44,8,69,4,"mappers"],[44,15,69,11],[44,16,69,12,"forEach"],[44,23,69,19],[44,24,69,20],[44,34,69,21,"mapper"],[44,40,69,27],[44,42,69,32],[45,10,70,6],[45,14,70,10],[45,15,70,11,"visited"],[45,22,70,18],[45,23,70,19,"has"],[45,26,70,22],[45,27,70,23,"mapper"],[45,33,70,29],[45,34,70,30],[45,36,70,32],[46,12,71,8,"dfs"],[46,15,71,11],[46,16,71,12,"mapper"],[46,22,71,18],[46,23,71,19],[47,10,72,6],[48,8,73,4],[48,9,73,5],[48,10,73,6],[49,8,74,4,"sortedMappers"],[49,21,74,17],[49,24,74,20,"newOrder"],[49,32,74,28],[50,6,75,2],[51,6,77,2],[51,15,77,11,"mapperFrame"],[51,26,77,22],[51,29,77,25],[52,8,78,4,"frameRequested"],[52,22,78,18],[52,25,78,21],[52,30,78,26],[53,8,79,4],[53,12,79,8,"mappers"],[53,19,79,15],[53,20,79,16,"size"],[53,24,79,20],[53,29,79,25,"sortedMappers"],[53,42,79,38],[53,43,79,39,"length"],[53,49,79,45],[53,51,79,47],[54,10,80,6,"updateMappersOrder"],[54,28,80,24],[54,30,80,26],[55,8,81,4],[56,8,82,4],[56,13,82,9],[56,17,82,15,"mapper"],[56,23,82,21],[56,27,82,25,"sortedMappers"],[56,40,82,38],[56,42,82,40],[57,10,83,6],[57,14,83,10,"mapper"],[57,20,83,16],[57,21,83,17,"dirty"],[57,26,83,22],[57,28,83,24],[58,12,84,8,"mapper"],[58,18,84,14],[58,19,84,15,"dirty"],[58,24,84,20],[58,27,84,23],[58,32,84,28],[59,12,85,8,"mapper"],[59,18,85,14],[59,19,85,15,"worklet"],[59,26,85,22],[59,28,85,24],[60,10,86,6],[61,8,87,4],[62,6,88,2],[63,6,90,2],[63,15,90,11,"maybeRequestUpdates"],[63,34,90,30],[63,37,90,33],[64,8,91,4],[64,12,91,8],[64,13,91,9,"frameRequested"],[64,27,91,23],[64,29,91,25],[65,10,92,6,"requestAnimationFrame"],[65,31,92,27],[65,32,92,28,"mapperFrame"],[65,43,92,39],[65,44,92,40],[66,10,93,6,"frameRequested"],[66,24,93,20],[66,27,93,23],[66,31,93,27],[67,8,94,4],[68,6,95,2],[69,6,97,2],[69,15,97,11,"extractInputs"],[69,28,97,24],[69,29,98,4,"inputs"],[69,35,98,15],[69,37,99,4,"resultArray"],[69,48,99,35],[69,50,100,24],[70,8,101,4],[70,12,101,8,"Array"],[70,17,101,13],[70,18,101,14,"isArray"],[70,25,101,21],[70,26,101,22,"inputs"],[70,32,101,28],[70,33,101,29],[70,35,101,31],[71,10,102,6],[71,15,102,11],[71,19,102,17,"input"],[71,24,102,22],[71,28,102,26,"inputs"],[71,34,102,32],[71,36,102,34],[72,12,103,8,"input"],[72,17,103,13],[72,21,103,17,"extractInputs"],[72,34,103,30],[72,35,103,31,"input"],[72,40,103,36],[72,42,103,38,"resultArray"],[72,53,103,49],[72,54,103,50],[73,10,104,6],[74,8,105,4],[74,9,105,5],[74,15,105,11],[74,19,105,15,"inputs"],[74,25,105,21],[74,26,105,22,"addListener"],[74,37,105,33],[74,39,105,35],[75,10,106,6,"resultArray"],[75,21,106,17],[75,22,106,18,"push"],[75,26,106,22],[75,27,106,23,"inputs"],[75,33,106,29],[75,34,106,30],[76,8,107,4],[76,9,107,5],[76,15,107,11],[76,19,107,15],[76,26,107,22,"inputs"],[76,32,107,28],[76,37,107,33],[76,45,107,41],[76,47,107,43],[77,10,108,6],[77,15,108,11],[77,19,108,17,"element"],[77,26,108,24],[77,30,108,28,"Object"],[77,36,108,34],[77,37,108,35,"values"],[77,43,108,41],[77,44,108,42,"inputs"],[77,50,108,48],[77,51,108,49],[77,53,108,51],[78,12,109,8,"element"],[78,19,109,15],[78,23,109,19,"extractInputs"],[78,36,109,32],[78,37,109,33,"element"],[78,44,109,40],[78,46,109,42,"resultArray"],[78,57,109,53],[78,58,109,54],[79,10,110,6],[80,8,111,4],[81,8,112,4],[81,15,112,11,"resultArray"],[81,26,112,22],[82,6,113,2],[83,6,115,2],[83,13,115,9],[84,8,116,4,"start"],[84,13,116,9],[84,15,116,11],[84,30,117,6,"mapperID"],[84,38,117,22],[84,40,118,6,"worklet"],[84,47,118,25],[84,49,119,6,"inputs"],[84,55,119,32],[84,57,120,6,"outputs"],[84,64,120,34],[84,66,121,9],[85,10,122,6],[85,14,122,12,"mapper"],[85,20,122,18],[85,23,122,21],[86,12,123,8,"id"],[86,14,123,10],[86,16,123,12,"mapperID"],[86,24,123,20],[87,12,124,8,"dirty"],[87,17,124,13],[87,19,124,15],[87,23,124,19],[88,12,125,8,"worklet"],[88,19,125,15],[88,21,125,8,"worklet"],[88,28,125,15],[89,12,126,8,"inputs"],[89,18,126,14],[89,20,126,16,"extractInputs"],[89,33,126,29],[89,34,126,30,"inputs"],[89,40,126,36],[89,42,126,38],[89,44,126,40],[89,45,126,41],[90,12,127,8,"outputs"],[90,19,127,15],[90,21,127,8,"outputs"],[91,10,128,6],[91,11,128,7],[92,10,129,6,"mappers"],[92,17,129,13],[92,18,129,14,"set"],[92,21,129,17],[92,22,129,18,"mapper"],[92,28,129,24],[92,29,129,25,"id"],[92,31,129,27],[92,33,129,29,"mapper"],[92,39,129,35],[92,40,129,36],[93,10,130,6,"sortedMappers"],[93,23,130,19],[93,26,130,22],[93,28,130,24],[94,10,131,6],[94,15,131,11],[94,19,131,17,"sv"],[94,21,131,19],[94,25,131,23,"mapper"],[94,31,131,29],[94,32,131,30,"inputs"],[94,38,131,36],[94,40,131,38],[95,12,132,8,"sv"],[95,14,132,10],[95,15,132,11,"addListener"],[95,26,132,22],[95,27,132,23,"mapper"],[95,33,132,29],[95,34,132,30,"id"],[95,36,132,32],[95,38,132,34],[95,50,132,40],[96,14,133,10,"mapper"],[96,20,133,16],[96,21,133,17,"dirty"],[96,26,133,22],[96,29,133,25],[96,33,133,29],[97,14,134,10,"maybeRequestUpdates"],[97,33,134,29],[97,35,134,31],[98,12,135,8],[98,13,135,9],[98,14,135,10],[99,10,136,6],[100,10,137,6,"maybeRequestUpdates"],[100,29,137,25],[100,31,137,27],[101,8,138,4],[101,9,138,5],[102,8,139,4,"stop"],[102,12,139,8],[102,14,139,10],[102,28,139,11,"mapperID"],[102,36,139,27],[102,38,139,32],[103,10,140,6],[103,14,140,12,"mapper"],[103,20,140,18],[103,23,140,21,"mappers"],[103,30,140,28],[103,31,140,29,"get"],[103,34,140,32],[103,35,140,33,"mapperID"],[103,43,140,41],[103,44,140,42],[104,10,141,6],[104,14,141,10,"mapper"],[104,20,141,16],[104,22,141,18],[105,12,142,8,"mappers"],[105,19,142,15],[105,20,142,16,"delete"],[105,26,142,22],[105,27,142,23,"mapper"],[105,33,142,29],[105,34,142,30,"id"],[105,36,142,32],[105,37,142,33],[106,12,143,8,"sortedMappers"],[106,25,143,21],[106,28,143,24],[106,30,143,26],[107,12,144,8],[107,17,144,13],[107,21,144,19,"sv"],[107,23,144,21],[107,27,144,25,"mapper"],[107,33,144,31],[107,34,144,32,"inputs"],[107,40,144,38],[107,42,144,40],[108,14,145,10,"sv"],[108,16,145,12],[108,17,145,13,"removeListener"],[108,31,145,27],[108,32,145,28,"mapper"],[108,38,145,34],[108,39,145,35,"id"],[108,41,145,37],[108,42,145,38],[109,12,146,8],[110,10,147,6],[111,8,148,4],[112,6,149,2],[112,7,149,3],[113,4,150,0],[113,5,150,1],[114,4,150,1],[115,4,150,1],[116,4,150,1],[117,4,150,1],[118,4,150,1],[119,4,150,1],[120,4,150,1],[121,2,150,1],[122,2,150,1],[123,2,152,0],[123,6,152,4,"MAPPER_ID"],[123,15,152,13],[123,18,152,16],[123,22,152,20],[124,2,154,7],[124,11,154,16,"startMapper"],[124,22,154,27],[124,23,155,2,"worklet"],[124,30,155,21],[124,32,158,10],[125,4,158,10],[125,8,156,2,"inputs"],[125,14,156,15],[125,85,156,18],[125,87,156,20],[126,4,156,20],[126,8,157,2,"outputs"],[126,15,157,16],[126,86,157,19],[126,88,157,21],[127,4,159,2],[127,8,159,8,"mapperID"],[127,16,159,16],[127,19,159,20,"MAPPER_ID"],[127,28,159,29],[127,32,159,33],[127,33,159,35],[128,4,161,2],[128,8,161,2,"runOnUI"],[128,59,161,9],[129,6,161,9],[130,6,161,9],[130,29,161,16],[131,8,163,4],[131,12,163,8,"mapperRegistry"],[131,26,163,22],[131,29,163,25,"global"],[131,35,163,31],[131,36,163,32,"__mapperRegistry"],[131,52,163,48],[132,8,164,4],[132,12,164,8,"mapperRegistry"],[132,26,164,22],[132,31,164,27,"undefined"],[132,40,164,36],[132,42,164,38],[133,10,165,6,"mapperRegistry"],[133,24,165,20],[133,27,165,23,"global"],[133,33,165,29],[133,34,165,30,"__mapperRegistry"],[133,50,165,46],[133,53,165,49,"createMapperRegistry"],[133,73,165,69],[133,75,165,71],[134,8,166,4],[135,8,167,4,"mapperRegistry"],[135,22,167,18],[135,23,167,19,"start"],[135,28,167,24],[135,29,167,25,"mapperID"],[135,37,167,33],[135,39,167,35,"worklet"],[135,46,167,42],[135,48,167,44,"inputs"],[135,54,167,50],[135,56,167,52,"outputs"],[135,63,167,59],[135,64,167,60],[136,6,168,2],[136,7,168,3],[137,6,168,3],[138,8,168,3],[138,30,4,47,"createMapperRegistry"],[138,50,4,67],[139,8,4,67],[139,18,6,23,"mapperID"],[139,26,6,31],[140,8,6,31],[140,17,6,33,"worklet"],[140,24,6,40],[141,8,6,40],[141,16,6,42,"inputs"],[141,22,6,48],[142,8,6,48],[142,17,6,50,"outputs"],[143,6,6,57],[144,6,6,57],[145,6,6,57],[146,6,6,57],[147,6,6,57],[148,6,6,57],[149,6,6,57],[150,4,6,57],[150,8,168,4],[150,10,168,6],[151,4,170,2],[151,11,170,9,"mapperID"],[151,19,170,17],[152,2,171,0],[153,2,173,7],[153,11,173,16,"stopMapper"],[153,21,173,26],[153,22,173,27,"mapperID"],[153,30,173,43],[153,32,173,51],[154,4,174,2],[154,8,174,2,"runOnUI"],[154,59,174,9],[155,6,174,9],[156,6,174,9],[156,29,174,16],[157,8,176,4],[157,12,176,10,"mapperRegistry"],[157,26,176,24],[157,29,176,27,"global"],[157,35,176,33],[157,36,176,34,"__mapperRegistry"],[157,52,176,50],[158,8,177,4,"mapperRegistry"],[158,22,177,18],[158,42,177,4,"mapperRegistry"],[158,56,177,18],[158,57,177,20,"stop"],[158,61,177,24],[158,62,177,25,"mapperID"],[158,70,177,33],[158,71,177,34],[159,6,178,2],[159,7,178,3],[160,6,178,3],[161,8,178,3],[161,18,3,23,"mapperID"],[162,6,3,31],[163,6,3,31],[164,6,3,31],[165,6,3,31],[166,6,3,31],[167,6,3,31],[168,6,3,31],[169,4,3,31],[169,8,178,4],[169,10,178,6],[170,2,179,0],[171,0,179,1]],"functionMap":{"names":["<global>","createMapperRegistry","updateMappersOrder","forEach$argument_0","dfs","mapperFrame","maybeRequestUpdates","extractInputs","start","sv.addListener$argument_1","stop","startMapper","runOnUI$argument_0","stopMapper"],"mappings":"AAA;OCW;ECO;oBCsB;KDW;IEG;KFa;oBCC;KDI;GDE;EIE;GJW;EKE;GLK;EME;GNgB;WOG;kCCgB;SDG;KPG;USC;KTS;CDE;OWI;UCO;GDO;CXG;OaE;UDC;GCI;CbC"}},"type":"js/module"}]}