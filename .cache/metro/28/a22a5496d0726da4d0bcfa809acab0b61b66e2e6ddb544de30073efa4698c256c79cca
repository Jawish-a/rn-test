{"dependencies":[{"name":"../TurboModule/TurboModuleRegistry","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":282},"end":{"line":13,"column":74,"index":356}}],"key":"l1ZcuL3DcGdiu4qvsnID5Y1XVW8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"../TurboModule/TurboModuleRegistry\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');\n  var ExceptionsManager = {\n    reportFatalException: function reportFatalException(message, stack, exceptionId) {\n      NativeModule.reportFatalException(message, stack, exceptionId);\n    },\n    reportSoftException: function reportSoftException(message, stack, exceptionId) {\n      NativeModule.reportSoftException(message, stack, exceptionId);\n    },\n    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {\n      NativeModule.updateExceptionMessage(message, stack, exceptionId);\n    },\n    dismissRedbox: function dismissRedbox() {\n      if (\"ios\" !== 'ios' && NativeModule.dismissRedbox) {\n        NativeModule.dismissRedbox();\n      }\n    },\n    reportException: function reportException(data) {\n      if (NativeModule.reportException) {\n        NativeModule.reportException(data);\n        return;\n      }\n      if (data.isFatal) {\n        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n      } else {\n        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n      }\n    }\n  };\n  var _default = ExceptionsManager;\n  exports.default = _default;\n});","lineCount":39,"map":[[6,2,13,0],[7,2,13,74],[8,2,13,74],[9,2,59,0],[9,6,59,6,"NativeModule"],[9,18,59,18],[9,21,60,2,"TurboModuleRegistry"],[9,40,60,21],[9,41,60,22,"getEnforcing"],[9,53,60,34],[9,54,60,41],[9,73,60,60],[9,74,60,61],[10,2,62,0],[10,6,62,6,"ExceptionsManager"],[10,23,62,23],[10,26,62,26],[11,4,63,2,"reportFatalException"],[11,24,63,22],[11,56,64,4,"message"],[11,63,64,19],[11,65,65,4,"stack"],[11,70,65,28],[11,72,66,4,"exceptionId"],[11,83,66,23],[11,85,67,4],[12,6,68,4,"NativeModule"],[12,18,68,16],[12,19,68,17,"reportFatalException"],[12,39,68,37],[12,40,68,38,"message"],[12,47,68,45],[12,49,68,47,"stack"],[12,54,68,52],[12,56,68,54,"exceptionId"],[12,67,68,65],[12,68,68,66],[13,4,69,2],[13,5,69,3],[14,4,70,2,"reportSoftException"],[14,23,70,21],[14,54,71,4,"message"],[14,61,71,19],[14,63,72,4,"stack"],[14,68,72,28],[14,70,73,4,"exceptionId"],[14,81,73,23],[14,83,74,4],[15,6,75,4,"NativeModule"],[15,18,75,16],[15,19,75,17,"reportSoftException"],[15,38,75,36],[15,39,75,37,"message"],[15,46,75,44],[15,48,75,46,"stack"],[15,53,75,51],[15,55,75,53,"exceptionId"],[15,66,75,64],[15,67,75,65],[16,4,76,2],[16,5,76,3],[17,4,77,2,"updateExceptionMessage"],[17,26,77,24],[17,60,78,4,"message"],[17,67,78,19],[17,69,79,4,"stack"],[17,74,79,28],[17,76,80,4,"exceptionId"],[17,87,80,23],[17,89,81,4],[18,6,82,4,"NativeModule"],[18,18,82,16],[18,19,82,17,"updateExceptionMessage"],[18,41,82,39],[18,42,82,40,"message"],[18,49,82,47],[18,51,82,49,"stack"],[18,56,82,54],[18,58,82,56,"exceptionId"],[18,69,82,67],[18,70,82,68],[19,4,83,2],[19,5,83,3],[20,4,84,2,"dismissRedbox"],[20,17,84,15],[20,44,84,24],[21,6,85,4],[21,10,85,8],[21,20,85,24],[21,25,85,29],[21,29,85,33,"NativeModule"],[21,41,85,45],[21,42,85,46,"dismissRedbox"],[21,55,85,59],[21,57,85,61],[22,8,87,6,"NativeModule"],[22,20,87,18],[22,21,87,19,"dismissRedbox"],[22,34,87,32],[22,36,87,34],[23,6,88,4],[24,4,89,2],[24,5,89,3],[25,4,90,2,"reportException"],[25,19,90,17],[25,46,90,18,"data"],[25,50,90,37],[25,52,90,45],[26,6,91,4],[26,10,91,8,"NativeModule"],[26,22,91,20],[26,23,91,21,"reportException"],[26,38,91,36],[26,40,91,38],[27,8,92,6,"NativeModule"],[27,20,92,18],[27,21,92,19,"reportException"],[27,36,92,34],[27,37,92,35,"data"],[27,41,92,39],[27,42,92,40],[28,8,93,6],[29,6,94,4],[30,6,95,4],[30,10,95,8,"data"],[30,14,95,12],[30,15,95,13,"isFatal"],[30,22,95,20],[30,24,95,22],[31,8,96,6,"ExceptionsManager"],[31,25,96,23],[31,26,96,24,"reportFatalException"],[31,46,96,44],[31,47,96,45,"data"],[31,51,96,49],[31,52,96,50,"message"],[31,59,96,57],[31,61,96,59,"data"],[31,65,96,63],[31,66,96,64,"stack"],[31,71,96,69],[31,73,96,71,"data"],[31,77,96,75],[31,78,96,76,"id"],[31,80,96,78],[31,81,96,79],[32,6,97,4],[32,7,97,5],[32,13,97,11],[33,8,98,6,"ExceptionsManager"],[33,25,98,23],[33,26,98,24,"reportSoftException"],[33,45,98,43],[33,46,98,44,"data"],[33,50,98,48],[33,51,98,49,"message"],[33,58,98,56],[33,60,98,58,"data"],[33,64,98,62],[33,65,98,63,"stack"],[33,70,98,68],[33,72,98,70,"data"],[33,76,98,74],[33,77,98,75,"id"],[33,79,98,77],[33,80,98,78],[34,6,99,4],[35,4,100,2],[36,2,101,0],[36,3,101,1],[37,2,101,2],[37,17,103,15,"ExceptionsManager"],[37,34,103,32],[38,2,103,32],[39,0,103,32]],"functionMap":{"names":["<global>","ExceptionsManager.reportFatalException","ExceptionsManager.reportSoftException","ExceptionsManager.updateExceptionMessage","ExceptionsManager.dismissRedbox","ExceptionsManager.reportException"],"mappings":"AAA;EC8D;GDM;EEC;GFM;EGC;GHM;EIC;GJK;EKC;GLU"}},"type":"js/module"}]}